{"version":3,"file":"245.js","mappings":"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","sources":["./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/trading-platform-info-modal/trading-platform-info-modal.component.ts","./src/app/components/trading-platform-info-modal/trading-platform-info-modal.component.html","./src/app/components/ui/confirmation-modal/confirmation-modal.component.ts","./src/app/components/ui/confirmation-modal/confirmation-modal.component.html","./src/app/components/ui/dialog/dialog.component.ts","./src/app/components/ui/dialog/dialog.component.html","./src/app/components/ui/dialog/dialog-header.component.html","./src/app/components/ui/dialog/dialog-title.component.html","./src/app/components/ui/dialog/dialog-content.component.html","./src/app/components/ui/dialog/dialog-footer.component.html","./src/app/services/bingx-user.service.ts","./src/app/services/bybit-user.service.ts","./src/app/services/google-auth.service.ts","./src/app/services/user.service.ts"],"sourcesContent":["import { Component, computed, OnInit, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { Language, TranslationService } from '../../services/translation.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { UserService } from '../../services/user.service';\nimport { GoogleAuthService } from '../../services/google-auth.service';\nimport { ExchangeCredentialsService } from '../../services/exchange-credentials.service';\nimport { ExchangeEnvironmentService } from '../../services/exchange-environment.service';\nimport {\n  CreateExchangeCredentialRequest,\n  EnvironmentType,\n  EXCHANGE_METADATA,\n  ExchangeCredential,\n  ExchangeType,\n  getExchangeName,\n  TestConnectionRequest\n} from '../../models/exchange-credentials.model';\nimport { take } from 'rxjs/operators';\nimport { TradingPlatformInfoModalComponent } from '../trading-platform-info-modal/trading-platform-info-modal.component';\nimport { ConfirmationModalComponent } from '../ui/confirmation-modal/confirmation-modal.component';\nimport { ButtonComponent } from '../ui/button/button.component';\n\ninterface Tab {\n  id: string;\n  label: string;\n  icon: string;\n}\n\ninterface MessageLocal {\n  id: string;\n  type: 'info' | 'warning' | 'success' | 'error' | 'trade';\n  title: string;\n  content: string;\n  timestamp: Date;\n  read: boolean;\n  actions?: MessageActionLocal[];\n}\n\ninterface MessageActionLocal {\n  label: string;\n  type: 'primary' | 'secondary' | 'danger';\n  action: string;\n}\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterLink, TradingPlatformInfoModalComponent, ConfirmationModalComponent, ButtonComponent],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss'\n})\nexport class ProfileComponent implements OnInit {\n  // Signals and computed values\n  readonly currentUser = computed(() => this.authService.currentUser());\n  readonly isDark = computed(() => this.themeService.currentTheme() === 'dark');\n  readonly availableLanguages = this.translationService.availableLanguages;\n  readonly isAdmin = computed(() => this.authService.hasRole('ADMIN'));\n\n  // Component state\n  activeTab = signal<string>('settings');\n\n  // Tab configuration\n  tabs: Tab[] = [\n    { id: 'settings', label: 'profile.preferences', icon: '⚙️' },\n    { id: 'userinfo', label: 'profile.personalInfo', icon: '👤' },\n    { id: 'platforms', label: 'profile.tradingPlatforms', icon: '🔗' },\n    { id: 'messages', label: 'profile.messages', icon: '📧' }\n  ];\n\n  // Settings\n  selectedLanguage: Language = 'en';\n  selectedCurrency = 'USD';\n  emailNotifications = true;\n  priceAlerts = true;\n  tradingAlerts = false;\n\n  // Forms\n  userInfoForm: FormGroup;\n  newCredentialForm: FormGroup;\n\n  // Exchange Credentials State\n  credentials = signal<ExchangeCredential[]>([]);\n  editingCredentialId = signal<string | null>(null);\n  editFormData = signal<Partial<ExchangeCredential> & { apiKey?: string; apiSecret?: string }>({});\n  showAddCredentialModal = signal<boolean>(false);\n  testingConnectionId = signal<string | null>(null);\n  deletingCredentialId = signal<string | null>(null);\n  savingCredentialId = signal<string | null>(null);\n  showApiSecret = signal<{ [key: string]: boolean }>({});\n  revealedCredentials = signal<{ [key: string]: { apiKey?: string; apiSecret?: string } }>({});\n\n  // Toast notification state\n  toastMessage = signal<string>('');\n  toastType = signal<'success' | 'error' | 'warning' | 'info'>('info');\n  showToastSignal = signal<boolean>(false);\n\n  // Trading Platform Info Modal state\n  showPlatformInfoModal = signal<boolean>(false);\n  selectedCredentialForModal = signal<ExchangeCredential | null>(null);\n\n  // Confirmation Modal state\n  showConfirmModal = signal<boolean>(false);\n  confirmModalTitle = signal<string>('');\n  confirmModalMessage = signal<string>('');\n  confirmModalConfirmText = signal<string>('');\n  confirmModalCancelText = signal<string>('');\n  confirmModalVariant = signal<'primary' | 'danger' | 'warning'>('primary');\n  confirmModalCallback = signal<(() => void) | null>(null);\n\n  // Enum references for template\n  readonly ExchangeType = ExchangeType;\n  readonly EnvironmentType = EnvironmentType;\n  readonly EXCHANGE_METADATA = EXCHANGE_METADATA;\n  readonly getExchangeName = getExchangeName;\n  readonly exchanges = Object.values(ExchangeType);\n\n  // Data\n  messages: MessageLocal[] = [\n    {\n      id: '1',\n      type: 'trade',\n      title: 'Order Filled',\n      content: 'Your limit order for 0.5 BTC at $45,000 has been successfully filled.',\n      timestamp: new Date('2024-12-12T10:30:00'),\n      read: false,\n      actions: [\n        { label: 'View Order', type: 'primary', action: 'viewOrder' },\n        { label: 'Trade More', type: 'secondary', action: 'openTrading' }\n      ]\n    },\n    {\n      id: '2',\n      type: 'warning',\n      title: 'API Key Expiring Soon',\n      content: 'Your Binance API key will expire in 7 days. Please renew it to continue trading.',\n      timestamp: new Date('2024-12-11T14:15:00'),\n      read: false,\n      actions: [\n        { label: 'Renew Key', type: 'primary', action: 'renewApiKey' }\n      ]\n    },\n    {\n      id: '3',\n      type: 'success',\n      title: 'Security Update',\n      content: 'Your account security settings have been successfully updated.',\n      timestamp: new Date('2024-12-10T09:00:00'),\n      read: true\n    },\n    {\n      id: '4',\n      type: 'info',\n      title: 'New Feature Available',\n      content: 'Check out our new advanced charting tools in the trading dashboard.',\n      timestamp: new Date('2024-12-09T16:45:00'),\n      read: true,\n      actions: [\n        { label: 'Learn More', type: 'secondary', action: 'learnMore' }\n      ]\n    }\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private translationService: TranslationService,\n    private themeService: ThemeService,\n    private userService: UserService,\n    private googleAuthService: GoogleAuthService,\n    public exchangeCredentialsService: ExchangeCredentialsService,\n    private exchangeEnvironmentService: ExchangeEnvironmentService,\n    private router: Router\n  ) {\n    this.userInfoForm = this.fb.group({\n      firstName: ['John'],\n      lastName: ['Doe'],\n      email: [{ value: this.currentUser()?.email || '', disabled: true }],\n      phone: ['+1234567890'],\n      timezone: ['UTC']\n    });\n\n    this.newCredentialForm = this.fb.group({\n      exchange: ['', Validators.required],\n      environment: [EnvironmentType.MAINNET, Validators.required],\n      apiKey: ['', Validators.required],\n      apiSecret: ['', Validators.required],\n      label: ['', [Validators.maxLength(50)]]\n    });\n\n    this.selectedLanguage = this.translationService.currentLanguage();\n  }\n\n  ngOnInit(): void {\n    // Initialize component\n  }\n\n  // Tab navigation\n  setActiveTab(tabId: string): void {\n    this.activeTab.set(tabId);\n\n    // Load credentials when switching to platforms tab\n    if (tabId === 'platforms') {\n      this.onPlatformsTabActivated();\n    }\n  }\n\n  // Translation helper\n  translate(key: string, params?: Record<string, string>): string {\n    return this.translationService.translate(key, params);\n  }\n\n  // Settings operations\n  changeLanguage(event: Event): void {\n    const target = event.target as HTMLSelectElement;\n    const newLanguage = target.value as Language;\n    this.translationService.setLanguage(newLanguage);\n    this.selectedLanguage = newLanguage;\n  }\n\n  toggleTheme(): void {\n    this.themeService.toggleTheme();\n  }\n\n  changeCurrency(event: Event): void {\n    const target = event.target as HTMLSelectElement;\n    this.selectedCurrency = target.value;\n    // Save currency preference\n    localStorage.setItem('preferred-currency', this.selectedCurrency);\n  }\n\n  updateNotificationSettings(): void {\n    // Save notification settings\n    const settings = {\n      email: this.emailNotifications,\n      priceAlerts: this.priceAlerts,\n      tradingAlerts: this.tradingAlerts\n    };\n    localStorage.setItem('notification-settings', JSON.stringify(settings));\n  }\n\n  // User info operations\n  updateUserInfo(): void {\n    if (this.userInfoForm.valid) {\n      console.log('Updating user info:', this.userInfoForm.value);\n      // Simulate API call\n      this.showToast('User information updated successfully!', 'success');\n      this.userInfoForm.markAsPristine();\n    }\n  }\n\n  resetUserInfo(): void {\n    this.userInfoForm.reset();\n  }\n\n  changeAvatar(): void {\n    // Open file picker or avatar selection modal\n    console.log('Change avatar clicked');\n    this.showToast('Avatar change functionality would be implemented here', 'info');\n  }\n\n  linkGoogleAccount(): void {\n    this.googleAuthService.linkGoogleAccount().subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.showToast(`Google account linked successfully! ${response.message}`, 'success');\n          // Refresh user data or update UI as needed\n        } else {\n          this.showToast(`Failed to link Google account: ${response.message}`, 'error');\n        }\n      },\n      error: (error) => {\n        console.error('Error linking Google account:', error);\n        this.showToast('Failed to link Google account. Please try again.', 'error');\n      }\n    });\n  }\n\n  // Messages operations\n  markAsRead(messageId: string): void {\n    const message = this.messages.find(m => m.id === messageId);\n    if (message) {\n      message.read = true;\n    }\n  }\n\n  markAllAsRead(): void {\n    this.messages.forEach(message => message.read = true);\n  }\n\n  executeMessageAction(action: MessageActionLocal): void {\n    console.log('Executing action:', action);\n    switch (action.action) {\n      case 'viewOrder':\n        this.showToast('Would navigate to order details', 'info');\n        break;\n      case 'openTrading':\n        this.showToast('Would open trading interface', 'info');\n        break;\n      case 'renewApiKey':\n        this.showToast('Would open API key renewal process', 'info');\n        break;\n      case 'learnMore':\n        this.showToast('Would show feature information', 'info');\n        break;\n    }\n  }\n\n  // Logout functionality\n  logout(): void {\n    this.authService.logout().pipe(take(1)).subscribe({\n      next: () => {\n        this.router.navigate(['/login']);\n      },\n      error: () => {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  // ============================================================================\n  // EXCHANGE CREDENTIALS METHODS\n  // ============================================================================\n\n  /**\n   * Load credentials when tab opens\n   */\n  loadCredentials(): void {\n    this.exchangeCredentialsService.fetchCredentials().subscribe({\n      next: (creds) => {\n        this.credentials.set(creds);\n      },\n      error: (err) => {\n        console.error('Failed to load credentials:', err);\n        this.showToast('Failed to load exchange credentials. Please try again.', 'error');\n      }\n    });\n  }\n\n  /**\n   * Start editing a credential row\n   */\n  startEditCredential(credential: ExchangeCredential): void {\n    this.editingCredentialId.set(credential.id);\n    this.editFormData.set({\n      label: credential.label,\n      apiKey: '',  // Empty string means \"keep current\"\n      apiSecret: '',  // Empty string means \"keep current\"\n      // Store original values for canceling\n      _originalLabel: credential.label\n    } as any);\n  }\n\n  /**\n   * Test connection with edited values\n   */\n  testEditConnection(credential: ExchangeCredential): void {\n    const editData = this.editFormData();\n\n    // Get the revealed credentials\n    const revealed = this.revealedCredentials()[credential.id];\n\n    // Determine which API key and secret to use\n    let apiKey: string;\n    let apiSecret: string;\n\n    // If user entered new values, use those\n    if (editData.apiKey && editData.apiKey.trim() !== '') {\n      apiKey = editData.apiKey.trim();\n    } else if (revealed?.apiKey) {\n      // Use revealed stored value\n      apiKey = revealed.apiKey;\n    } else {\n      // Need to fetch the credential first\n      console.log('No API key available, need to reveal first');\n      this.showToast('Please click the eye icon to reveal the API Key first', 'warning');\n      return;\n    }\n\n    if (editData.apiSecret && editData.apiSecret.trim() !== '') {\n      apiSecret = editData.apiSecret.trim();\n    } else if (revealed?.apiSecret) {\n      apiSecret = revealed.apiSecret;\n    } else {\n      console.log('No API secret available, need to reveal first');\n      this.showToast('Please click the eye icon to reveal the API Secret first', 'warning');\n      return;\n    }\n\n    const testData = {\n      exchange: credential.exchange,\n      environment: credential.environment,\n      apiKey: apiKey,\n      apiSecret: apiSecret\n    };\n\n    this.testingConnectionId.set(credential.id);\n\n    this.exchangeCredentialsService.testConnection(testData).subscribe({\n      next: (result) => {\n        this.testingConnectionId.set(null);\n        if (result.success) {\n          this.showToast('Connection successful! You can now save the credentials.', 'success');\n        } else {\n          this.showToast('Connection failed: ' + (result.message || 'Unknown error'), 'error');\n        }\n      },\n      error: (err) => {\n        this.testingConnectionId.set(null);\n        this.showToast('Connection test failed: ' + (err.message || 'Unknown error'), 'error');\n      }\n    });\n  }\n\n  /**\n   * Cancel editing\n   */\n  cancelEdit(): void {\n    this.editingCredentialId.set(null);\n    this.editFormData.set({});\n  }\n\n  /**\n   * Save edited credential\n   */\n  saveCredential(credentialId: string): void {\n    const editData = this.editFormData();\n\n    // Build update request with only changed fields\n    const updateRequest: any = {};\n\n    // Always include label (even if empty)\n    if (editData.label !== undefined) {\n      updateRequest.label = editData.label || undefined;\n    }\n\n    // Include apiKey only if it was changed (non-empty)\n    if (editData.apiKey && editData.apiKey.trim() !== '') {\n      updateRequest.apiKey = editData.apiKey.trim();\n    }\n\n    // Include apiSecret only if it was changed (non-empty)\n    if (editData.apiSecret && editData.apiSecret.trim() !== '') {\n      updateRequest.apiSecret = editData.apiSecret.trim();\n    }\n\n    // Set saving state\n    this.savingCredentialId.set(credentialId);\n\n    this.exchangeCredentialsService.updateCredential(credentialId, updateRequest).pipe(take(1)).subscribe({\n      next: (updated) => {\n        // Clear editing and saving state first\n        this.editingCredentialId.set(null);\n        this.editFormData.set({});\n        this.savingCredentialId.set(null);\n\n        // Clear visibility toggles for this credential\n        const currentVisibility = this.showApiSecret();\n        const updatedVisibility = { ...currentVisibility };\n        delete updatedVisibility[credentialId + '_key'];\n        delete updatedVisibility[credentialId + '_secret'];\n        this.showApiSecret.set(updatedVisibility);\n\n        // Service already updated the state - sync local component state\n        this.credentials.set(this.exchangeCredentialsService.credentials());\n\n        this.showToast('Credential updated successfully!', 'success');\n      },\n      error: (err) => {\n        console.error('Failed to update credential:', err);\n        this.savingCredentialId.set(null);\n        this.showToast('Failed to update credential: ' + err.message, 'error');\n      }\n    });\n  }\n\n  /**\n   * Update edit form data\n   */\n  updateEditField(field: string, value: any): void {\n    this.editFormData.set({\n      ...this.editFormData(),\n      [field]: value\n    });\n  }\n\n  /**\n   * Test connection for a credential\n   */\n  testConnection(credential: ExchangeCredential): void {\n    this.testingConnectionId.set(credential.id);\n\n    // Note: We can't test existing credentials without the secret\n    // We need to show a message about this\n    this.showToast('Connection testing requires API secret. Please use the \"Add New Credential\" form to test connections before saving.', 'info');\n    this.testingConnectionId.set(null);\n  }\n\n  /**\n   * Delete a credential\n   */\n  deleteCredential(credential: ExchangeCredential): void {\n    const exchangeName = this.getExchangeName(credential.exchange);\n    const labelPart = credential.label ? ` \"${credential.label}\"` : '';\n\n    this.showConfirmation({\n      title: this.translate('modal.deleteCredentialTitle'),\n      message: this.translate('modal.deleteCredentialMessage', {\n        exchangeName: exchangeName,\n        label: labelPart\n      }),\n      confirmText: this.translate('button.delete'),\n      variant: 'danger',\n      onConfirm: () => {\n        this.deletingCredentialId.set(credential.id);\n\n        this.exchangeCredentialsService.deleteCredential(credential.id).subscribe({\n          next: () => {\n            // Service already updated the state - sync local component state\n            this.credentials.set(this.exchangeCredentialsService.credentials());\n            this.deletingCredentialId.set(null);\n\n            this.showToast('Credential deleted successfully!', 'success');\n          },\n          error: (err) => {\n            console.error('Failed to delete credential:', err);\n            this.deletingCredentialId.set(null);\n            this.showToast('Failed to delete credential: ' + err.message, 'error');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Toggle active status\n   */\n  toggleActive(credential: ExchangeCredential, e: Event): void {\n    const isChecked = (e.target as HTMLInputElement).checked;\n\n    this.exchangeCredentialsService.updateCredential(credential.id, { isActive: isChecked })\n      .pipe(take(1)).subscribe({\n      next: (updated) => {\n        // Service already updated the state - sync local component state\n        this.credentials.set(this.exchangeCredentialsService.credentials());\n\n        this.showToast(`Credential ${isChecked ? 'activated' : 'deactivated'} successfully!`, 'success');\n      },\n      error: (err) => {\n        console.error('Failed to toggle credential:', err);\n        this.showToast('Failed to toggle credential: ' + err.message, 'error');\n      }\n    });\n  }\n\n  /**\n   * Open add credential modal\n   */\n  openAddCredentialModal(): void {\n    this.newCredentialForm.reset({\n      exchange: '',\n      environment: EnvironmentType.MAINNET,\n      apiKey: '',\n      apiSecret: '',\n      label: ''\n    });\n    this.showAddCredentialModal.set(true);\n  }\n\n  /**\n   * Close add credential modal\n   */\n  closeAddCredentialModal(): void {\n    if (this.newCredentialForm.dirty) {\n      this.showConfirmation({\n        title: this.translate('modal.unsavedChangesTitle'),\n        message: this.translate('modal.unsavedChangesMessage'),\n        confirmText: this.translate('modal.confirm'),\n        variant: 'warning',\n        onConfirm: () => {\n          this.showAddCredentialModal.set(false);\n          this.newCredentialForm.reset();\n        }\n      });\n    } else {\n      this.showAddCredentialModal.set(false);\n      this.newCredentialForm.reset();\n    }\n  }\n\n  /**\n   * Test connection in the add form\n   */\n  testNewConnection(): void {\n    if (this.newCredentialForm.invalid) {\n      Object.keys(this.newCredentialForm.controls).forEach(key => {\n        this.newCredentialForm.get(key)?.markAsTouched();\n      });\n      this.showToast('Please fill in all required fields before testing connection.', 'warning');\n      return;\n    }\n\n    const testData: TestConnectionRequest = {\n      exchange: this.newCredentialForm.value.exchange,\n      environment: this.newCredentialForm.value.environment,\n      apiKey: this.newCredentialForm.value.apiKey,\n      apiSecret: this.newCredentialForm.value.apiSecret\n    };\n\n    this.testingConnectionId.set('new');\n\n    this.exchangeCredentialsService.testConnection(testData).subscribe({\n      next: (result) => {\n        this.testingConnectionId.set(null);\n        if (result.success) {\n          this.showToast('Connection successful! You can now save the credentials.', 'success');\n        } else {\n          this.showToast('Connection failed: ' + result.message, 'error');\n        }\n      },\n      error: (err) => {\n        this.testingConnectionId.set(null);\n        this.showToast('Connection test failed: ' + err.message, 'error');\n      }\n    });\n  }\n\n  /**\n   * Save new credential\n   */\n  saveNewCredential(): void {\n    if (this.newCredentialForm.invalid) {\n      Object.keys(this.newCredentialForm.controls).forEach(key => {\n        this.newCredentialForm.get(key)?.markAsTouched();\n      });\n      this.showToast('Please fill in all required fields.', 'warning');\n      return;\n    }\n\n    const data: CreateExchangeCredentialRequest = {\n      exchange: this.newCredentialForm.value.exchange,\n      environment: this.newCredentialForm.value.environment,\n      apiKey: this.newCredentialForm.value.apiKey,\n      apiSecret: this.newCredentialForm.value.apiSecret,\n      label: this.newCredentialForm.value.label || undefined,\n      isActive: true // Set new credentials as active by default\n    };\n\n    this.exchangeCredentialsService.createCredential(data).subscribe({\n      next: (newCred) => {\n        // Service already updated the state - sync local component state\n        this.credentials.set(this.exchangeCredentialsService.credentials());\n\n        // Close modal\n        this.showAddCredentialModal.set(false);\n        this.newCredentialForm.reset();\n\n        this.showToast('Credential saved successfully!', 'success');\n      },\n      error: (err) => {\n        console.error('Failed to create credential:', err);\n        this.showToast('Failed to save credential: ' + err.message, 'error');\n      }\n    });\n  }\n\n  /**\n   * Toggle API key visibility (in edit mode)\n   */\n  toggleApiKeyVisibility(credentialId: string): void {\n    const key = credentialId + '_key';\n    const current = this.showApiSecret();\n    const newVisibility = !current[key];\n\n    this.showApiSecret.set({\n      ...current,\n      [key]: newVisibility\n    });\n\n    // If revealing and we don't have the decrypted value yet, fetch it\n    if (newVisibility && !this.revealedCredentials()[credentialId]?.apiKey) {\n      this.fetchDecryptedCredential(credentialId);\n    }\n  }\n\n  /**\n   * Toggle API secret visibility (in edit mode)\n   */\n  toggleApiSecretVisibility(credentialId: string): void {\n    const key = credentialId + '_secret';\n    const current = this.showApiSecret();\n    const newVisibility = !current[key];\n\n    this.showApiSecret.set({\n      ...current,\n      [key]: newVisibility\n    });\n\n    // If revealing and we don't have the decrypted value yet, fetch it\n    if (newVisibility && !this.revealedCredentials()[credentialId]?.apiSecret) {\n      this.fetchDecryptedCredential(credentialId);\n    }\n  }\n\n  /**\n   * Fetch decrypted credential from backend\n   */\n  fetchDecryptedCredential(credentialId: string): void {\n    this.exchangeCredentialsService.getCredentialById(credentialId).subscribe({\n      next: (credential) => {\n        // Store the revealed credentials\n        const current = this.revealedCredentials();\n        this.revealedCredentials.set({\n          ...current,\n          [credentialId]: {\n            apiKey: (credential as any).apiKey || credential.apiKeyPreview,\n            apiSecret: (credential as any).apiSecret || '(Secret not returned by server)'\n          }\n        });\n      },\n      error: (err) => {\n        console.error('Failed to fetch decrypted credential:', err);\n        this.showToast('Failed to retrieve credential details: ' + err.message, 'error');\n      }\n    });\n  }\n\n  /**\n   * Legacy method for modal form - toggle API secret visibility\n   */\n  toggleApiSecretVisibilityLegacy(credentialId: string): void {\n    const current = this.showApiSecret();\n    this.showApiSecret.set({\n      ...current,\n      [credentialId]: !current[credentialId]\n    });\n  }\n\n  /**\n   * Toggle new form API secret visibility\n   */\n  toggleNewFormApiSecretVisibility(): void {\n    this.toggleApiSecretVisibility('new');\n  }\n\n  /**\n   * Get masked display for API key/secret\n   */\n  getMaskedValue(value: string): string {\n    if (!value || value.length <= 4) {\n      return '****';\n    }\n    return '...' + value.slice(-4);\n  }\n\n  /**\n   * Called when platforms tab is activated\n   */\n  onPlatformsTabActivated(): void {\n    this.loadCredentials();\n  }\n\n  /**\n   * Show toast notification\n   */\n  showToast(message: string, type: 'success' | 'error' | 'warning' | 'info' = 'info'): void {\n    this.toastMessage.set(message);\n    this.toastType.set(type);\n    this.showToastSignal.set(true);\n\n    // Auto-hide after 5 seconds\n    setTimeout(() => {\n      this.showToastSignal.set(false);\n    }, 5000);\n  }\n\n  /**\n   * Open trading platform info modal\n   * Shows detailed information about the selected exchange credential\n   */\n  openPlatformInfoModal(credential: ExchangeCredential): void {\n    this.selectedCredentialForModal.set(credential);\n    this.showPlatformInfoModal.set(true);\n  }\n\n  /**\n   * Close trading platform info modal\n   */\n  closePlatformInfoModal(): void {\n    this.showPlatformInfoModal.set(false);\n    this.selectedCredentialForModal.set(null);\n  }\n\n  /**\n   * Show confirmation modal\n   */\n  showConfirmation(config: {\n    title?: string;\n    message: string;\n    confirmText?: string;\n    cancelText?: string;\n    variant?: 'primary' | 'danger' | 'warning';\n    onConfirm: () => void;\n  }): void {\n    this.confirmModalTitle.set(config.title || this.translate('modal.confirmTitle'));\n    this.confirmModalMessage.set(config.message);\n    this.confirmModalConfirmText.set(config.confirmText || this.translate('modal.confirm'));\n    this.confirmModalCancelText.set(config.cancelText || this.translate('modal.cancel'));\n    this.confirmModalVariant.set(config.variant || 'primary');\n    this.confirmModalCallback.set(config.onConfirm);\n    this.showConfirmModal.set(true);\n  }\n\n  /**\n   * Handle confirmation modal confirm action\n   */\n  onConfirmModalConfirm(): void {\n    const callback = this.confirmModalCallback();\n    this.closeConfirmModal();\n    // Execute callback in next tick to ensure modal closes first\n    setTimeout(() => {\n      if (callback) {\n        callback();\n      }\n    }, 0);\n  }\n\n  /**\n   * Handle confirmation modal cancel action\n   */\n  onConfirmModalCancel(): void {\n    this.closeConfirmModal();\n  }\n\n  /**\n   * Close confirmation modal\n   */\n  closeConfirmModal(): void {\n    this.showConfirmModal.set(false);\n    this.confirmModalCallback.set(null);\n  }\n\n}\n","<div class=\"profile-container\">\n  <!-- Profile Header -->\n  <div class=\"profile-header\">\n    <div class=\"user-avatar-section\">\n      <div class=\"avatar-container\">\n        <img\n          [src]=\"currentUser()?.avatar || '/placeholder/120'\"\n          [alt]=\"currentUser()?.name || currentUser()?.email\"\n          class=\"user-avatar-xl\"\n        />\n        <ui-button variant=\"ghost\" className=\"avatar-edit-btn\" (clicked)=\"changeAvatar()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" stroke=\"currentColor\" stroke-width=\"2\"/>\n            <path d=\"m18.5 2.5 a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n          </svg>\n        </ui-button>\n      </div>\n      <div class=\"user-basic-info\">\n        <h1 class=\"user-name\">{{ currentUser()?.name || translate('profile.anonymous') }}</h1>\n        <p class=\"user-email\">{{ currentUser()?.email }}</p>\n        <div class=\"user-status\">\n          <span class=\"status-badge\" [class]=\"'status-' + (currentUser()?.subscriptionActive ? 'active' : 'inactive')\">\n            {{ currentUser()?.subscriptionActive ? translate('profile.premium') : translate('profile.free') }}\n          </span>\n          <span class=\"role-badge\" [class]=\"'role-' + currentUser()?.role?.toLowerCase()\">\n            {{ currentUser()?.role }}\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"profile-header-actions\">\n      <ui-button variant=\"tertiary\" className=\"logout-btn\" (clicked)=\"logout()\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n          <polyline points=\"16 17 21 12 16 7\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n        </svg>\n        {{ translate('dashboard.logout') }}\n      </ui-button>\n    </div>\n  </div>\n\n  <!-- Profile Content -->\n  <div class=\"profile-content\">\n    <!-- Navigation Tabs -->\n    <div class=\"profile-tabs\">\n      @for (tab of tabs; track tab.id) {\n        <ui-button\n          variant=\"ghost\"\n          className=\"tab-button\"\n          [class.active]=\"activeTab() === tab.id\"\n          (clicked)=\"setActiveTab(tab.id)\"\n        >\n          <span class=\"tab-icon\">{{ tab.icon }}</span>\n          <span class=\"tab-label\">{{ translate(tab.label) }}</span>\n        </ui-button>\n      }\n    </div>\n\n    <!-- Tab Content -->\n    <div class=\"tab-content\">\n      <!-- Settings Tab -->\n      @if (activeTab() === 'settings') {\n        <div class=\"settings-section\">\n          <div class=\"settings-group\">\n            <h3>{{ translate('profile.preferences') }}</h3>\n            \n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.language') }}</label>\n                <p>{{ translate('profile.languageDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <select [(ngModel)]=\"selectedLanguage\" (change)=\"changeLanguage($event)\">\n                  @for (lang of availableLanguages; track lang.code) {\n                    <option [value]=\"lang.code\">{{ lang.flag }} {{ lang.name }}</option>\n                  }\n                </select>\n              </div>\n            </div>\n\n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.theme') }}</label>\n                <p>{{ translate('profile.themeDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <ui-button variant=\"secondary\" className=\"theme-toggle-btn\" (clicked)=\"toggleTheme()\">\n                  {{ isDark() ? translate('theme.light') : translate('theme.dark') }}\n                </ui-button>\n              </div>\n            </div>\n\n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.currency') }}</label>\n                <p>{{ translate('profile.currencyDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <select [(ngModel)]=\"selectedCurrency\" (change)=\"changeCurrency($event)\">\n                  <option value=\"USD\">🇺🇸 USD</option>\n                  <option value=\"EUR\">🇪🇺 EUR</option>\n                  <option value=\"GBP\">🇬🇧 GBP</option>\n                  <option value=\"JPY\">🇯🇵 JPY</option>\n                  <option value=\"CAD\">🇨🇦 CAD</option>\n                  <option value=\"AUD\">🇦🇺 AUD</option>\n                  <option value=\"CHF\">🇨🇭 CHF</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"settings-group\">\n            <h3>{{ translate('profile.notifications') }}</h3>\n            \n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.emailNotifications') }}</label>\n                <p>{{ translate('profile.emailNotificationsDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" [(ngModel)]=\"emailNotifications\" (change)=\"updateNotificationSettings()\">\n                  <span class=\"slider\"></span>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.priceAlerts') }}</label>\n                <p>{{ translate('profile.priceAlertsDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" [(ngModel)]=\"priceAlerts\" (change)=\"updateNotificationSettings()\">\n                  <span class=\"slider\"></span>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"setting-item\">\n              <div class=\"setting-info\">\n                <label>{{ translate('profile.tradingAlerts') }}</label>\n                <p>{{ translate('profile.tradingAlertsDesc') }}</p>\n              </div>\n              <div class=\"setting-control\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" [(ngModel)]=\"tradingAlerts\" (change)=\"updateNotificationSettings()\">\n                  <span class=\"slider\"></span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n\n      <!-- User Info Tab -->\n      @if (activeTab() === 'userinfo') {\n        <div class=\"userinfo-section\">\n          <div class=\"info-group\">\n            <h3>{{ translate('profile.personalInfo') }}</h3>\n            \n            <form [formGroup]=\"userInfoForm\" (ngSubmit)=\"updateUserInfo()\">\n              <div class=\"form-row\">\n                <div class=\"form-field\">\n                  <label>{{ translate('profile.firstName') }}</label>\n                  <input type=\"text\" formControlName=\"firstName\" />\n                </div>\n                <div class=\"form-field\">\n                  <label>{{ translate('profile.lastName') }}</label>\n                  <input type=\"text\" formControlName=\"lastName\" />\n                </div>\n              </div>\n\n              <div class=\"form-field\">\n                <label>{{ translate('profile.email') }}</label>\n                <div class=\"email-input-group\">\n                  <input type=\"email\" formControlName=\"email\" />\n                  @if (currentUser()?.googleLinked) {\n                    <span class=\"google-badge\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                        <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\"/>\n                        <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\"/>\n                        <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\"/>\n                        <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\"/>\n                      </svg>\n                      {{ translate('profile.googleLinked') }}\n                    </span>\n                  } @else {\n                    <ui-button type=\"button\" variant=\"secondary\" className=\"link-google-btn\" (clicked)=\"linkGoogleAccount()\">\n                      {{ translate('profile.linkGoogle') }}\n                    </ui-button>\n                  }\n                </div>\n              </div>\n\n              <div class=\"form-field\">\n                <label>{{ translate('profile.phone') }}</label>\n                <input type=\"tel\" formControlName=\"phone\" />\n              </div>\n\n              <div class=\"form-field\">\n                <label>{{ translate('profile.timezone') }}</label>\n                <select formControlName=\"timezone\">\n                  <option value=\"UTC\">UTC</option>\n                  <option value=\"America/New_York\">{{ translate('profile.timezoneET') }}</option>\n                  <option value=\"America/Chicago\">{{ translate('profile.timezoneCT') }}</option>\n                  <option value=\"America/Denver\">{{ translate('profile.timezoneMT') }}</option>\n                  <option value=\"America/Los_Angeles\">{{ translate('profile.timezonePT') }}</option>\n                  <option value=\"Europe/London\">{{ translate('profile.timezoneGMT') }}</option>\n                  <option value=\"Europe/Paris\">{{ translate('profile.timezoneCET') }}</option>\n                  <option value=\"Europe/Moscow\">{{ translate('profile.timezoneMSK') }}</option>\n                  <option value=\"Asia/Tokyo\">{{ translate('profile.timezoneJST') }}</option>\n                  <option value=\"Asia/Shanghai\">{{ translate('profile.timezoneCST') }}</option>\n                  <option value=\"Asia/Dubai\">{{ translate('profile.timezoneGST') }}</option>\n                </select>\n              </div>\n\n              <div class=\"form-actions\">\n                <ui-button type=\"submit\" variant=\"primary\" [disabled]=\"!userInfoForm.dirty\">\n                  {{ translate('profile.saveChanges') }}\n                </ui-button>\n                <ui-button type=\"button\" variant=\"secondary\" (clicked)=\"resetUserInfo()\">\n                  {{ translate('profile.cancel') }}\n                </ui-button>\n              </div>\n            </form>\n          </div>\n        </div>\n      }\n\n      <!-- Trading Platforms Tab -->\n      @if (activeTab() === 'platforms') {\n        <div class=\"platforms-section\">\n          <div class=\"platforms-header\">\n            <h3>{{ translate('profile.tradingPlatforms') }}</h3>\n            <ui-button variant=\"primary\" (clicked)=\"openAddCredentialModal()\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n              </svg>\n              {{ translate('profile.addNewCredential') }}\n            </ui-button>\n          </div>\n\n          <!-- Credentials Table -->\n          <div class=\"credentials-table-container\">\n            @if (exchangeCredentialsService.loading()) {\n              <div class=\"loading-state\">\n                <div class=\"spinner\"></div>\n                <p>{{ translate('profile.loadingCredentials') }}</p>\n              </div>\n            } @else if (credentials().length > 0) {\n              <table class=\"credentials-table\">\n                <thead>\n                  <tr>\n                    <th>{{ translate('profile.tradingPlatform') }}</th>\n                    <th>{{ translate('profile.environment') }}</th>\n                    <th>{{ translate('profile.label') }}</th>\n                    <th>{{ translate('profile.apiKey') }}</th>\n                    <th>{{ translate('profile.apiSecret') }}</th>\n                    <th>{{ translate('profile.status') }}</th>\n                    <th>{{ translate('profile.actions') }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  @for (credential of credentials(); track credential.id) {\n                    <tr [class.editing]=\"editingCredentialId() === credential.id\">\n                      <!-- Trading Platform -->\n                      <td class=\"platform-cell\">\n                        <div class=\"platform-name\">\n                          <span\n                            class=\"platform-badge clickable\"\n                            [style.background-color]=\"EXCHANGE_METADATA[credential.exchange].color\"\n                            (click)=\"openPlatformInfoModal(credential)\"\n                            [attr.title]=\"translate('profile.clickToView') + ' ' + getExchangeName(credential.exchange) + ' ' + translate('profile.accountDetails')\"\n                          >\n                            {{ getExchangeName(credential.exchange) }}\n                          </span>\n                        </div>\n                      </td>\n\n                      <!-- Environment -->\n                      <td class=\"environment-cell\">\n                        <span class=\"env-badge\" [class.testnet]=\"credential.environment === EnvironmentType.TESTNET\">\n                          {{ credential.environment === EnvironmentType.TESTNET ? translate('profile.testnet') : translate('profile.mainnet') }}\n                        </span>\n                      </td>\n\n                      <!-- Label -->\n                      <td class=\"label-cell\">\n                        @if (editingCredentialId() === credential.id) {\n                          <input\n                            type=\"text\"\n                            class=\"edit-input\"\n                            [value]=\"editFormData().label || ''\"\n                            (input)=\"updateEditField('label', $any($event.target).value)\"\n                            [placeholder]=\"translate('profile.enterLabel')\"\n                          />\n                        } @else {\n                          <span class=\"label-text\">{{ credential.label || '-' }}</span>\n                        }\n                      </td>\n\n                      <!-- API Key -->\n                      <td class=\"api-key-cell\">\n                        @if (editingCredentialId() === credential.id) {\n                          <div class=\"password-input-wrapper\">\n                            <input\n                              [type]=\"showApiSecret()[credential.id + '_key'] ? 'text' : 'password'\"\n                              class=\"edit-input\"\n                              [value]=\"showApiSecret()[credential.id + '_key'] && revealedCredentials()[credential.id] ? revealedCredentials()[credential.id]!.apiKey : (editFormData().apiKey || '')\"\n                              (input)=\"updateEditField('apiKey', $any($event.target).value)\"\n                              [placeholder]=\"translate('profile.currentKey') + ': ' + credential.apiKeyPreview + ' (' + translate('profile.enterNewOrEmpty') + ')'\"\n                            />\n                            <ui-button type=\"button\" variant=\"ghost\" className=\"toggle-visibility-btn-small\"\n                                    (clicked)=\"toggleApiKeyVisibility(credential.id)\" tabindex=\"-1\">\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                @if (showApiSecret()[credential.id + '_key']) {\n                                  <path d=\"M12 5C7 5 2.73 8.11 1 12.5 2.73 16.89 7 20 12 20s9.27-3.11 11-7.5C21.27 8.11 17 5 12 5zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                                  <circle cx=\"12\" cy=\"12.5\" r=\"2.5\" fill=\"currentColor\"/>\n                                } @else {\n                                  <path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46A11.804 11.804 0 001 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\" fill=\"currentColor\"/>\n                                }\n                              </svg>\n                            </ui-button>\n                          </div>\n                        } @else {\n                          <span class=\"api-key-preview\">{{ getMaskedValue(credential.apiKeyPreview) }}</span>\n                        }\n                      </td>\n\n                      <!-- API Secret -->\n                      <td class=\"api-secret-cell\">\n                        @if (editingCredentialId() === credential.id) {\n                          <div class=\"password-input-wrapper\">\n                            <input\n                              [type]=\"showApiSecret()[credential.id + '_secret'] ? 'text' : 'password'\"\n                              class=\"edit-input\"\n                              [value]=\"showApiSecret()[credential.id + '_secret'] && revealedCredentials()[credential.id] ? revealedCredentials()[credential.id]!.apiSecret : (editFormData().apiSecret || '')\"\n                              (input)=\"updateEditField('apiSecret', $any($event.target).value)\"\n                              [placeholder]=\"translate('profile.enterNewSecret')\"\n                            />\n                            <ui-button type=\"button\" variant=\"ghost\" className=\"toggle-visibility-btn-small\"\n                                    (clicked)=\"toggleApiSecretVisibility(credential.id)\" tabindex=\"-1\">\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                @if (showApiSecret()[credential.id + '_secret']) {\n                                  <path d=\"M12 5C7 5 2.73 8.11 1 12.5 2.73 16.89 7 20 12 20s9.27-3.11 11-7.5C21.27 8.11 17 5 12 5zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                                  <circle cx=\"12\" cy=\"12.5\" r=\"2.5\" fill=\"currentColor\"/>\n                                } @else {\n                                  <path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46A11.804 11.804 0 001 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\" fill=\"currentColor\"/>\n                                }\n                              </svg>\n                            </ui-button>\n                          </div>\n                        } @else {\n                          <span class=\"api-secret-preview\">••••••••••••••••</span>\n                        }\n                      </td>\n\n                      <!-- Status -->\n                      <td class=\"status-cell\">\n                        <label class=\"toggle-switch-small\">\n                          <input\n                            type=\"checkbox\"\n                            [checked]=\"credential.isActive\"\n                            (change)=\"toggleActive(credential, $event)\"\n                          >\n                          <span class=\"slider-small\"></span>\n                        </label>\n                        <span class=\"status-text\">{{ credential.isActive ? translate('profile.active') : translate('profile.inactive') }}</span>\n                      </td>\n\n                      <!-- Actions -->\n                      <td class=\"actions-cell\">\n                        @if (editingCredentialId() === credential.id) {\n                          <div class=\"edit-actions\">\n                            <ui-button\n                              size=\"small\"\n                              variant=\"secondary\"\n                              className=\"btn-info\"\n                              (clicked)=\"testEditConnection(credential)\"\n                              [disabled]=\"testingConnectionId() === credential.id || savingCredentialId() === credential.id\"\n                              [title]=\"translate('profile.testConnection')\"\n                            >\n                              @if (testingConnectionId() === credential.id) {\n                                <span class=\"spinner-small\"></span>\n                              } @else {\n                                {{ translate('button.test') }}\n                              }\n                            </ui-button>\n                            <ui-button\n                              size=\"small\"\n                              variant=\"secondary\"\n                              className=\"btn-success\"\n                              (clicked)=\"saveCredential(credential.id)\"\n                              [disabled]=\"savingCredentialId() === credential.id\"\n                            >\n                              @if (savingCredentialId() === credential.id) {\n                                <span class=\"spinner-small\"></span>\n                              }\n                              {{ translate('button.save') }}\n                            </ui-button>\n                            <ui-button\n                              size=\"small\"\n                              variant=\"secondary\"\n                              (clicked)=\"cancelEdit()\"\n                              [disabled]=\"savingCredentialId() === credential.id\"\n                            >\n                              {{ translate('button.cancel') }}\n                            </ui-button>\n                          </div>\n                        } @else {\n                          <div class=\"row-actions\">\n                            <ui-button\n                              variant=\"ghost\"\n                              className=\"btn-icon\"\n                              (clicked)=\"startEditCredential(credential)\"\n                              [title]=\"translate('button.edit')\"\n                            >\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                                <path d=\"m18.5 2.5 a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                              </svg>\n                            </ui-button>\n                            <ui-button\n                              variant=\"danger\"\n                              className=\"btn-icon\"\n                              (clicked)=\"deleteCredential(credential)\"\n                              [disabled]=\"deletingCredentialId() === credential.id\"\n                              [title]=\"translate('button.delete')\"\n                            >\n                              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                <polyline points=\"3 6 5 6 21 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                                <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                              </svg>\n                            </ui-button>\n                          </div>\n                        }\n                      </td>\n                    </tr>\n                  }\n                </tbody>\n              </table>\n            } @else {\n              <div class=\"empty-state\">\n                <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 2a5 5 0 0 1 5 5v3h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2V7a5 5 0 0 1 5-5z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                </svg>\n                <h4>{{ translate('profile.noCredentials') }}</h4>\n                <p>{{ translate('profile.noCredentialsDesc') }}</p>\n                <ui-button variant=\"primary\" (clicked)=\"openAddCredentialModal()\">\n                  {{ translate('profile.addCredential') }}\n                </ui-button>\n              </div>\n            }\n          </div>\n\n          <!-- Platform Info -->\n          <div class=\"platform-info-section\">\n            <div class=\"info-card\">\n              <div class=\"info-icon\">🔐</div>\n              <h4>{{ translate('profile.secureConnection') }}</h4>\n              <p>{{ translate('profile.secureConnectionDesc') }}</p>\n            </div>\n            <div class=\"info-card\">\n              <div class=\"info-icon\">⚡</div>\n              <h4>{{ translate('profile.realTimeData') }}</h4>\n              <p>{{ translate('profile.realTimeDataDesc') }}</p>\n            </div>\n            <div class=\"info-card\">\n              <div class=\"info-icon\">🌐</div>\n              <h4>{{ translate('profile.multiExchange') }}</h4>\n              <p>{{ translate('profile.multiExchangeDesc') }}</p>\n            </div>\n          </div>\n\n          <!-- Add Credential Modal -->\n          @if (showAddCredentialModal()) {\n            <div class=\"modal-overlay\" (click)=\"closeAddCredentialModal()\">\n              <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\n                <div class=\"modal-header\">\n                  <h3>{{ translate('profile.addNewCredential') }}</h3>\n                  <ui-button variant=\"ghost\" className=\"modal-close-btn\" (clicked)=\"closeAddCredentialModal()\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                    </svg>\n                  </ui-button>\n                </div>\n\n                <form [formGroup]=\"newCredentialForm\" (ngSubmit)=\"saveNewCredential()\" class=\"modal-form\">\n                  <!-- Exchange Selection -->\n                  <div class=\"form-field\">\n                    <label>{{ translate('bot.exchange') }} <span class=\"required\">*</span></label>\n                    <select formControlName=\"exchange\">\n                      <option value=\"\">{{ translate('bot.selectExchange') }}</option>\n                      @for (exchange of exchanges; track exchange) {\n                        <option [value]=\"exchange\">\n                          {{ getExchangeName(exchange) }}\n                        </option>\n                      }\n                    </select>\n                    @if (newCredentialForm.get('exchange')?.invalid && newCredentialForm.get('exchange')?.touched) {\n                      <span class=\"field-error\">{{ translate('profile.exchangeRequired') }}</span>\n                    }\n                  </div>\n\n                  <!-- Environment Selection - Only visible for admins -->\n                  @if (isAdmin()) {\n                    <div class=\"form-field\">\n                      <label>{{ translate('bot.environment') }} <span class=\"required\">*</span></label>\n                      <select formControlName=\"environment\">\n                        <option [value]=\"EnvironmentType.TESTNET\">{{ translate('profile.testnetDemo') }}</option>\n                        <option [value]=\"EnvironmentType.MAINNET\">{{ translate('profile.mainnetReal') }}</option>\n                      </select>\n                    </div>\n                  }\n\n                  <!-- Label -->\n                  <div class=\"form-field\">\n                    <label>{{ translate('profile.label') }} ({{ translate('profile.optional') }})</label>\n                    <input\n                      type=\"text\"\n                      formControlName=\"label\"\n                      [placeholder]=\"translate('profile.labelPlaceholder')\"\n                      maxlength=\"50\"\n                    />\n                    <small>{{ translate('profile.labelDesc') }}</small>\n                  </div>\n\n                  <!-- API Key -->\n                  <div class=\"form-field\">\n                    <label>{{ translate('profile.apiKey') }} <span class=\"required\">*</span></label>\n                    <input\n                      type=\"text\"\n                      formControlName=\"apiKey\"\n                      [placeholder]=\"translate('profile.enterApiKey')\"\n                    />\n                    @if (newCredentialForm.get('apiKey')?.invalid && newCredentialForm.get('apiKey')?.touched) {\n                      <span class=\"field-error\">{{ translate('profile.apiKeyError') }}</span>\n                    }\n                  </div>\n\n                  <!-- API Secret -->\n                  <div class=\"form-field\">\n                    <label>{{ translate('profile.apiSecret') }} <span class=\"required\">*</span></label>\n                    <div class=\"password-input-wrapper\">\n                      <input\n                        [type]=\"showApiSecret()['new'] ? 'text' : 'password'\"\n                        formControlName=\"apiSecret\"\n                        [placeholder]=\"translate('profile.enterApiSecret')\"\n                      />\n                      <ui-button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        className=\"toggle-visibility-btn\"\n                        (clicked)=\"toggleNewFormApiSecretVisibility()\"\n                        tabindex=\"-1\"\n                      >\n                        @if (showApiSecret()['new']) {\n                          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                            <circle cx=\"12\" cy=\"12\" r=\"3\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                          </svg>\n                        } @else {\n                          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                            <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                          </svg>\n                        }\n                      </ui-button>\n                    </div>\n                    @if (newCredentialForm.get('apiSecret')?.invalid && newCredentialForm.get('apiSecret')?.touched) {\n                      <span class=\"field-error\">{{ translate('profile.apiSecretError') }}</span>\n                    }\n                  </div>\n\n                  <!-- Modal Actions -->\n                  <div class=\"modal-actions\">\n                    <ui-button\n                      type=\"button\"\n                      variant=\"tertiary\"\n                      (clicked)=\"testNewConnection()\"\n                      [disabled]=\"testingConnectionId() === 'new'\"\n                    >\n                      @if (testingConnectionId() === 'new') {\n                        <span>{{ translate('profile.testing') }}</span>\n                      } @else {\n                        <span>{{ translate('profile.testConnection') }}</span>\n                      }\n                    </ui-button>\n                    <div class=\"actions-right\">\n                      <ui-button type=\"button\" variant=\"secondary\" (clicked)=\"closeAddCredentialModal()\">\n                        {{ translate('button.cancel') }}\n                      </ui-button>\n                      <ui-button type=\"submit\" variant=\"primary\" [disabled]=\"newCredentialForm.invalid\">\n                        {{ translate('profile.saveCredential') }}\n                      </ui-button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          }\n        </div>\n      }\n\n      <!-- Messages Tab -->\n      @if (activeTab() === 'messages') {\n        <div class=\"messages-section\">\n          <div class=\"messages-header\">\n            <h3>{{ translate('profile.messages') }}</h3>\n            <ui-button variant=\"secondary\" className=\"mark-all-read-btn\" (clicked)=\"markAllAsRead()\">\n              {{ translate('profile.markAllRead') }}\n            </ui-button>\n          </div>\n\n          <div class=\"messages-list\">\n            @for (message of messages; track message.id) {\n              <div class=\"message-item\" [class.unread]=\"!message.read\">\n                <div class=\"message-icon\" [class]=\"'icon-' + message.type\">\n                  @switch (message.type) {\n                    @case ('info') { <span>ℹ️</span> }\n                    @case ('warning') { <span>⚠️</span> }\n                    @case ('success') { <span>✅</span> }\n                    @case ('error') { <span>❌</span> }\n                    @case ('trade') { <span>📈</span> }\n                    @default { <span>📧</span> }\n                  }\n                </div>\n                <div class=\"message-content\">\n                  <div class=\"message-header\">\n                    <h4>{{ message.title }}</h4>\n                    <span class=\"message-time\">{{ message.timestamp | date:'short' }}</span>\n                  </div>\n                  <p>{{ message.content }}</p>\n                  @if (message.actions?.length) {\n                    <div class=\"message-actions\">\n                      @for (action of message.actions; track action.label) {\n                        <ui-button size=\"small\" variant=\"secondary\" [className]=\"'btn-' + action.type\" (clicked)=\"executeMessageAction(action)\">\n                          {{ action.label }}\n                        </ui-button>\n                      }\n                    </div>\n                  }\n                </div>\n                @if (!message.read) {\n                  <ui-button variant=\"ghost\" className=\"mark-read-btn\" (clicked)=\"markAsRead(message.id)\">\n                    <span class=\"unread-dot\"></span>\n                  </ui-button>\n                }\n              </div>\n            }\n            \n            @if (messages.length === 0) {\n              <div class=\"no-messages\">\n                <span class=\"no-messages-icon\">📭</span>\n                <p>{{ translate('profile.noMessages') }}</p>\n              </div>\n            }\n          </div>\n        </div>\n      }\n\n    </div>\n  </div>\n</div>\n\n<!-- Toast Notification -->\n@if (showToastSignal()) {\n  <div class=\"toast-notification\" [class]=\"'toast-' + toastType()\">\n    <span>{{ toastMessage() }}</span>\n    <ui-button variant=\"ghost\" (clicked)=\"showToastSignal.set(false)\" className=\"toast-close\">×</ui-button>\n  </div>\n}\n\n<!-- Trading Platform Info Modal -->\n@if (showPlatformInfoModal() && selectedCredentialForModal()) {\n  <app-trading-platform-info-modal\n    [credential]=\"selectedCredentialForModal()!\"\n    (closeModal)=\"closePlatformInfoModal()\"\n  />\n}\n\n<!-- Confirmation Modal -->\n<ui-confirmation-modal\n  [open]=\"showConfirmModal()\"\n  [title]=\"confirmModalTitle()\"\n  [message]=\"confirmModalMessage()\"\n  [confirmText]=\"confirmModalConfirmText()\"\n  [cancelText]=\"confirmModalCancelText()\"\n  [confirmVariant]=\"confirmModalVariant()\"\n  (confirm)=\"onConfirmModalConfirm()\"\n  (cancel)=\"onConfirmModalCancel()\"\n  [(open)]=\"showConfirmModal\"\n/>\n","import { Component, OnInit, OnDestroy, signal, computed, input, output, inject } from '@angular/core';\nimport { CommonModule, DecimalPipe, DatePipe } from '@angular/common';\nimport { Subject, takeUntil } from 'rxjs';\nimport {\n  BybitUserService,\n  BybitUserInfo,\n  BybitCoinBalance,\n  BybitPosition,\n  BybitOrder\n} from '../../services/bybit-user.service';\nimport {\n  BingXUserService,\n  BingXUserInfo,\n  BingXPosition\n} from '../../services/bingx-user.service';\nimport {\n  ExchangeCredential,\n  ExchangeType,\n  EnvironmentType,\n  getExchangeName,\n  getExchangeLogo,\n  EXCHANGE_METADATA,\n  ENVIRONMENT_METADATA\n} from '../../models/exchange-credentials.model';\nimport { TranslationService } from '../../services/translation.service';\n\ninterface Tab {\n  id: string;\n  label: string;\n  icon: string;\n}\n\n/**\n * Trading Platform Info Modal Component\n *\n * Displays comprehensive trading platform information in a modal dialog.\n * Supports multiple exchanges (Bybit, Binance, etc.) with testnet/mainnet environments.\n *\n * Features:\n * - Account overview with wallet balance and equity\n * - Coin balances breakdown\n * - Active positions with PnL\n * - Active orders and order history\n * - Loading and error states\n * - Responsive design\n * - Keyboard navigation (ESC to close)\n * - Click outside to close\n */\nimport { ButtonComponent } from '../ui/button/button.component';\n\n@Component({\n  selector: 'app-trading-platform-info-modal',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DecimalPipe,\n    DatePipe,\n    ButtonComponent\n  ],\n  templateUrl: './trading-platform-info-modal.component.html',\n  styleUrl: './trading-platform-info-modal.component.scss'\n})\nexport class TradingPlatformInfoModalComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  // Input: Exchange credential to display information for\n  credential = input.required<ExchangeCredential>();\n\n  // Output: Event emitted when modal should be closed\n  closeModal = output<void>();\n\n  // Component state signals\n  userInfo = signal<BybitUserInfo | BingXUserInfo | null>(null);\n  loading = signal<boolean>(false);\n  error = signal<string | null>(null);\n  activeTab = signal<string>('overview');\n\n  protected translationService = inject(TranslationService);\n\n  // Tab configuration\n  tabs: Tab[] = [\n    { id: 'overview', label: 'modal.accountOverview', icon: '📊' },\n    { id: 'balances', label: 'modal.balances', icon: '💰' },\n    { id: 'positions', label: 'modal.positions', icon: '📈' },\n    { id: 'orders', label: 'modal.activeOrders', icon: '📋' }\n  ];\n\n  // Computed values\n  readonly exchangeName = computed(() => getExchangeName(this.credential().exchange));\n  readonly exchangeLogo = computed(() => getExchangeLogo(this.credential().exchange));\n  readonly exchangeColor = computed(() => EXCHANGE_METADATA[this.credential().exchange]?.color);\n  readonly isTestnet = computed(() => this.credential().environment === EnvironmentType.TESTNET);\n  readonly environmentName = computed(() =>\n    this.credential().environment === EnvironmentType.TESTNET ? 'Testnet' : 'Mainnet'\n  );\n  readonly environmentColor = computed(() =>\n    ENVIRONMENT_METADATA[this.credential().environment]?.color\n  );\n\n  readonly totalEquity = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return '0.00';\n\n    const accountInfo = info.data.accountInfo;\n    if ('error' in accountInfo) return '0.00';\n\n    // Check if it's Bybit or BingX\n    if ('totalEquity' in accountInfo) {\n      // Bybit\n      return accountInfo.totalEquity || '0.00';\n    } else if ('balance' in accountInfo) {\n      // BingX\n      return accountInfo.balance.equity || '0.00';\n    }\n\n    return '0.00';\n  });\n\n  readonly availableBalance = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return '0.00';\n\n    const accountInfo = info.data.accountInfo;\n    if ('error' in accountInfo) return '0.00';\n\n    // Check if it's Bybit or BingX\n    if ('totalAvailableBalance' in accountInfo) {\n      // Bybit\n      return accountInfo.totalAvailableBalance || '0.00';\n    } else if ('balance' in accountInfo) {\n      // BingX\n      return accountInfo.balance.availableMargin || '0.00';\n    }\n\n    return '0.00';\n  });\n\n  readonly walletBalance = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return '0.00';\n\n    const accountInfo = info.data.accountInfo;\n    if ('error' in accountInfo) return '0.00';\n\n    // Check if it's Bybit or BingX\n    if ('totalWalletBalance' in accountInfo) {\n      // Bybit\n      return accountInfo.totalWalletBalance || '0.00';\n    } else if ('balance' in accountInfo) {\n      // BingX\n      return accountInfo.balance.balance || '0.00';\n    }\n\n    return '0.00';\n  });\n\n  readonly unrealizedPnl = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return 0;\n\n    const cred = this.credential();\n    if (cred.exchange === ExchangeType.BYBIT) {\n      return this.bybitUserService.calculateUnrealizedPnl(info as BybitUserInfo);\n    } else if (cred.exchange === ExchangeType.BINGX) {\n      return this.bingxUserService.calculateUnrealizedPnl(info as BingXUserInfo);\n    }\n\n    return 0;\n  });\n\n  readonly nonZeroBalances = computed(() => {\n    const info = this.userInfo();\n    if (!info) return [];\n\n    const cred = this.credential();\n    if (cred.exchange === ExchangeType.BYBIT) {\n      return this.bybitUserService.getNonZeroBalances(info as BybitUserInfo);\n    }\n\n    // BingX doesn't have coin balances in the same way, return empty\n    return [];\n  });\n\n  readonly activePositions = computed(() => {\n    const info = this.userInfo();\n    if (!info) return [];\n\n    const cred = this.credential();\n    if (cred.exchange === ExchangeType.BYBIT) {\n      return this.bybitUserService.getActivePositions(info as BybitUserInfo);\n    } else if (cred.exchange === ExchangeType.BINGX) {\n      return this.bingxUserService.getActivePositions(info as BingXUserInfo);\n    }\n\n    return [];\n  });\n\n  readonly activeOrders = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return [];\n\n    // Bybit has activeOrders, BingX doesn't currently fetch orders\n    const data = info.data as any;\n    return data.activeOrders || [];\n  });\n\n  readonly hasError = computed(() => {\n    const info = this.userInfo();\n    if (!info) return false;\n\n    const accountInfo = info.data.accountInfo;\n    return 'error' in accountInfo;\n  });\n\n  readonly accountInfo = computed(() => {\n    const info = this.userInfo();\n    if (!info || !info.success) return null;\n\n    const accInfo = info.data.accountInfo;\n    if ('error' in accInfo) return null;\n\n    return accInfo;\n  });\n\n  constructor(\n    private bybitUserService: BybitUserService,\n    private bingxUserService: BingXUserService\n  ) {}\n\n  translate(key: string): string {\n    return this.translationService.translate(key);\n  }\n\n  ngOnInit(): void {\n    // Load user info when modal opens\n    this.loadUserInfo();\n\n    // Add keyboard event listener for ESC key\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    // Remove keyboard event listener\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * Handle keyboard events\n   */\n  private handleKeyDown = (event: KeyboardEvent): void => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  /**\n   * Load user information from exchange\n   * Supports Bybit and BingX exchanges\n   */\n  loadUserInfo(): void {\n    const cred = this.credential();\n\n    this.loading.set(true);\n    this.error.set(null);\n\n    if (cred.exchange === ExchangeType.BYBIT) {\n      // Subscribe to Bybit service observables\n      this.bybitUserService.userInfo$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(info => this.userInfo.set(info));\n\n      this.bybitUserService.error$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(error => this.error.set(error));\n\n      // Fetch Bybit user info\n      this.bybitUserService.getUserInfo().subscribe({\n        next: () => {\n          this.loading.set(false);\n        },\n        error: (err) => {\n          this.loading.set(false);\n          console.error('Failed to load Bybit user info:', err);\n        }\n      });\n    } else if (cred.exchange === ExchangeType.BINGX) {\n      // Subscribe to BingX service observables\n      this.bingxUserService.userInfo$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(info => this.userInfo.set(info));\n\n      this.bingxUserService.error$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(error => this.error.set(error));\n\n      // Fetch BingX user info (uses active credentials from backend)\n      this.bingxUserService.getUserInfo().subscribe({\n        next: () => {\n          this.loading.set(false);\n        },\n        error: (err) => {\n          this.loading.set(false);\n          console.error('Failed to load BingX user info:', err);\n        }\n      });\n    } else {\n      this.error.set(`Exchange ${cred.exchange} is not yet supported`);\n      this.loading.set(false);\n    }\n  }\n\n  /**\n   * Refresh user information\n   */\n  refreshUserInfo(): void {\n    this.loadUserInfo();\n  }\n\n  /**\n   * Change active tab\n   */\n  setActiveTab(tabId: string): void {\n    this.activeTab.set(tabId);\n  }\n\n  /**\n   * Close modal\n   */\n  close(): void {\n    this.closeModal.emit();\n  }\n\n  /**\n   * Handle overlay click (close modal)\n   */\n  handleOverlayClick(): void {\n    this.close();\n  }\n\n  /**\n   * Stop event propagation (prevent closing when clicking modal content)\n   */\n  handleContentClick(event: Event): void {\n    event.stopPropagation();\n  }\n\n  /**\n   * Parse float helper for templates\n   */\n  parseFloat(value: string): number {\n    return parseFloat(value);\n  }\n\n  /**\n   * Format large numbers with proper units (K, M, B)\n   */\n  formatNumber(value: string | number): string {\n    const num = typeof value === 'string' ? parseFloat(value) : value;\n\n    if (isNaN(num)) return '0';\n\n    const absNum = Math.abs(num);\n\n    if (absNum >= 1000000000) {\n      return (num / 1000000000).toFixed(2) + 'B';\n    } else if (absNum >= 1000000) {\n      return (num / 1000000).toFixed(2) + 'M';\n    } else if (absNum >= 1000) {\n      return (num / 1000).toFixed(2) + 'K';\n    } else {\n      return num.toFixed(2);\n    }\n  }\n\n  /**\n   * Format currency with proper decimals\n   */\n  formatCurrency(value: string | number, decimals: number = 2): string {\n    const num = typeof value === 'string' ? parseFloat(value) : value;\n\n    if (isNaN(num)) return '0.00';\n\n    return num.toFixed(decimals);\n  }\n\n  /**\n   * Format percentage\n   */\n  formatPercentage(value: string | number): string {\n    const num = typeof value === 'string' ? parseFloat(value) : value;\n\n    if (isNaN(num)) return '0.00%';\n\n    return (num * 100).toFixed(2) + '%';\n  }\n\n  /**\n   * Get position PnL color class\n   */\n  getPnlColorClass(pnl: string | number): string {\n    const num = typeof pnl === 'string' ? parseFloat(pnl) : pnl;\n\n    if (isNaN(num) || num === 0) return 'text-muted';\n    return num > 0 ? 'text-success' : 'text-danger';\n  }\n\n  /**\n   * Get order status badge class\n   */\n  getOrderStatusClass(status: string): string {\n    const statusClasses: { [key: string]: string } = {\n      'Filled': 'badge-success',\n      'PartiallyFilled': 'badge-info',\n      'Cancelled': 'badge-secondary',\n      'Rejected': 'badge-danger',\n      'New': 'badge-primary',\n      'PendingCancel': 'badge-warning'\n    };\n\n    return statusClasses[status] || 'badge-secondary';\n  }\n\n  /**\n   * Get side badge class (Buy/Sell)\n   */\n  getSideClass(side: string): string {\n    return side === 'Buy' ? 'badge-success' : 'badge-danger';\n  }\n\n  /**\n   * Calculate position profit percentage\n   */\n  calculatePositionProfitPct(position: BybitPosition | BingXPosition): number {\n    // Bybit position\n    if ('side' in position && 'entryPrice' in position && 'markPrice' in position) {\n      const entryPrice = parseFloat(position.entryPrice);\n      const markPrice = parseFloat(position.markPrice);\n\n      if (isNaN(entryPrice) || isNaN(markPrice) || entryPrice === 0) {\n        return 0;\n      }\n\n      const pct = ((markPrice - entryPrice) / entryPrice) * 100;\n      return position.side === 'Buy' ? pct : -pct;\n    }\n\n    // BingX position\n    if ('positionSide' in position && 'entryPrice' in position && 'markPrice' in position) {\n      const entryPrice = parseFloat(position.entryPrice);\n      const markPrice = parseFloat(position.markPrice);\n\n      if (isNaN(entryPrice) || isNaN(markPrice) || entryPrice === 0) {\n        return 0;\n      }\n\n      const pct = ((markPrice - entryPrice) / entryPrice) * 100;\n      return position.positionSide === 'LONG' ? pct : -pct;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get position side for display (handles both Bybit and BingX)\n   */\n  getPositionSide(position: BybitPosition | BingXPosition): string {\n    if ('side' in position) {\n      return position.side; // Bybit: 'Buy' or 'Sell'\n    }\n    if ('positionSide' in position) {\n      return position.positionSide; // BingX: 'LONG' or 'SHORT'\n    }\n    return '';\n  }\n\n  /**\n   * Get position size for display (handles both Bybit and BingX)\n   */\n  getPositionSize(position: BybitPosition | BingXPosition): string {\n    if ('size' in position) {\n      return position.size; // Bybit\n    }\n    if ('positionAmt' in position) {\n      return position.positionAmt; // BingX\n    }\n    return '0';\n  }\n\n  /**\n   * Get position unrealized PnL (handles both Bybit and BingX)\n   */\n  getPositionUnrealizedPnl(position: BybitPosition | BingXPosition): string {\n    if ('unrealisedPnl' in position) {\n      return position.unrealisedPnl; // Bybit\n    }\n    if ('unrealizedProfit' in position) {\n      return position.unrealizedProfit; // BingX\n    }\n    return '0';\n  }\n\n  /**\n   * Get account field value (handles both Bybit and BingX)\n   */\n  getAccountField(field: string): string {\n    const info = this.accountInfo();\n    if (!info) return '0.00';\n\n    // Bybit fields\n    if (field === 'totalEquity' && 'totalEquity' in info) {\n      return info.totalEquity || '0.00';\n    }\n    if (field === 'totalWalletBalance' && 'totalWalletBalance' in info) {\n      return info.totalWalletBalance || '0.00';\n    }\n    if (field === 'totalAvailableBalance' && 'totalAvailableBalance' in info) {\n      return info.totalAvailableBalance || '0.00';\n    }\n    if (field === 'totalMarginBalance' && 'totalMarginBalance' in info) {\n      return info.totalMarginBalance || '0.00';\n    }\n    if (field === 'totalInitialMargin' && 'totalInitialMargin' in info) {\n      return info.totalInitialMargin || '0.00';\n    }\n    if (field === 'totalPerpUPL' && 'totalPerpUPL' in info) {\n      return info.totalPerpUPL || '0.00';\n    }\n\n    // BingX fields\n    if ('balance' in info) {\n      const balance = info.balance;\n      if (field === 'totalEquity') return balance.equity || '0.00';\n      if (field === 'totalWalletBalance') return balance.balance || '0.00';\n      if (field === 'totalAvailableBalance') return balance.availableMargin || '0.00';\n      if (field === 'totalMarginBalance') return balance.usedMargin || '0.00';\n      if (field === 'totalInitialMargin') return balance.usedMargin || '0.00';\n      if (field === 'totalPerpUPL') return balance.unrealizedProfit || '0.00';\n    }\n\n    return '0.00';\n  }\n\n  /**\n   * Clear error message\n   */\n  clearError(): void {\n    this.error.set(null);\n  }\n\n  /**\n   * Retry loading after error\n   */\n  retryLoad(): void {\n    this.clearError();\n    this.loadUserInfo();\n  }\n}\n","<div class=\"modal-overlay\" (click)=\"handleOverlayClick()\">\n  <div class=\"modal-content\" (click)=\"handleContentClick($event)\">\n    <!-- Modal Header -->\n    <header class=\"modal-header\">\n      <div class=\"header-info\">\n        <div class=\"exchange-logo\" [style.background-color]=\"exchangeColor()\">\n          <span class=\"logo-text\">{{ exchangeName().substring(0, 2) }}</span>\n        </div>\n        <div class=\"header-title\">\n          <h2>{{ exchangeName() }} {{ translate('modal.account') }}</h2>\n          <div class=\"header-badges\">\n            <span class=\"env-badge\" [class.testnet]=\"isTestnet()\" [style.background-color]=\"environmentColor()\">\n              {{ environmentName() }}\n            </span>\n            @if (credential().label) {\n              <span class=\"label-badge\">{{ credential().label }}</span>\n            }\n          </div>\n        </div>\n      </div>\n      <div class=\"header-actions\">\n        <ui-button\n          variant=\"ghost\"\n          size=\"small\"\n          className=\"refresh-btn\"\n          (clicked)=\"refreshUserInfo()\"\n          [disabled]=\"loading()\"\n          [title]=\"translate('modal.refreshData')\"\n        >\n          <span class=\"icon\" [class.spinning]=\"loading()\">🔄</span>\n        </ui-button>\n        <ui-button variant=\"ghost\" size=\"small\" className=\"close-btn\" (clicked)=\"close()\" [title]=\"translate('button.close')\">\n          <span class=\"icon\">✕</span>\n        </ui-button>\n      </div>\n    </header>\n\n    <!-- Modal Body -->\n    <div class=\"modal-body\">\n      <!-- Loading State -->\n      @if (loading() && !userInfo()) {\n        <div class=\"loading-container\">\n          <div class=\"spinner-large\"></div>\n          <p>{{ translate('modal.loadingAccount') }}</p>\n        </div>\n      }\n\n      <!-- Error State -->\n      @if (error() && !userInfo()) {\n        <div class=\"error-container\">\n          <div class=\"error-icon\">⚠️</div>\n          <h3>{{ translate('modal.unableToLoad') }}</h3>\n          <p class=\"error-message\">{{ error() }}</p>\n          <ui-button variant=\"primary\" size=\"medium\" (clicked)=\"retryLoad()\">\n            <span class=\"btn-icon\">🔄</span>\n            {{ translate('button.tryAgain') }}\n          </ui-button>\n        </div>\n      }\n\n      <!-- Main Content -->\n      @if (userInfo() && !loading()) {\n        <!-- Stats Summary Cards -->\n        <section class=\"stats-section\">\n          <div class=\"stats-grid\">\n            <div class=\"stat-card primary\">\n              <div class=\"stat-icon\">💰</div>\n              <div class=\"stat-content\">\n                <h3>${{ formatCurrency(totalEquity()) }}</h3>\n                <p>{{ translate('modal.totalEquity') }}</p>\n              </div>\n            </div>\n\n            <div class=\"stat-card success\">\n              <div class=\"stat-icon\">💵</div>\n              <div class=\"stat-content\">\n                <h3>${{ formatCurrency(availableBalance()) }}</h3>\n                <p>{{ translate('modal.availableBalance') }}</p>\n              </div>\n            </div>\n\n            <div class=\"stat-card info\">\n              <div class=\"stat-icon\">💼</div>\n              <div class=\"stat-content\">\n                <h3>${{ formatCurrency(walletBalance()) }}</h3>\n                <p>{{ translate('modal.walletBalance') }}</p>\n              </div>\n            </div>\n\n            <div class=\"stat-card\" [class.danger]=\"unrealizedPnl() < 0\" [class.success]=\"unrealizedPnl() > 0\">\n              <div class=\"stat-icon\">📈</div>\n              <div class=\"stat-content\">\n                <h3 [class]=\"getPnlColorClass(unrealizedPnl())\">${{ formatCurrency(unrealizedPnl()) }}</h3>\n                <p>{{ translate('modal.unrealizedPnL') }}</p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <!-- Tabs Navigation -->\n        <nav class=\"tabs-navigation\">\n          <div class=\"tabs-list\">\n            @for (tab of tabs; track tab.id) {\n              <ui-button\n                variant=\"ghost\"\n                size=\"medium\"\n                className=\"tab-button\"\n                [class.active]=\"activeTab() === tab.id\"\n                (clicked)=\"setActiveTab(tab.id)\"\n              >\n                <span class=\"tab-icon\">{{ tab.icon }}</span>\n                <span class=\"tab-label\">{{ translate(tab.label) }}</span>\n              </ui-button>\n            }\n          </div>\n        </nav>\n\n        <!-- Tab Content -->\n        <section class=\"tab-content\">\n          <!-- Overview Tab -->\n          @if (activeTab() === 'overview') {\n            <div class=\"overview-container\">\n              @if (accountInfo()) {\n                <div class=\"info-card\">\n                  <div class=\"card-header\">\n                    <h3>{{ translate('modal.accountSummary') }}</h3>\n                  </div>\n                  <div class=\"card-body\">\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.totalEquity') }}</span>\n                      <span class=\"info-value\">${{ formatCurrency(getAccountField('totalEquity')) }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.walletBalance') }}</span>\n                      <span class=\"info-value\">${{ formatCurrency(getAccountField('totalWalletBalance')) }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.availableBalance') }}</span>\n                      <span class=\"info-value text-success\">${{ formatCurrency(getAccountField('totalAvailableBalance')) }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.marginBalance') }}</span>\n                      <span class=\"info-value\">${{ formatCurrency(getAccountField('totalMarginBalance')) }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.initialMargin') }}</span>\n                      <span class=\"info-value\">${{ formatCurrency(getAccountField('totalInitialMargin')) }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.unrealizedPnL') }}</span>\n                      <span class=\"info-value\" [class]=\"getPnlColorClass(getAccountField('totalPerpUPL'))\">\n                        ${{ formatCurrency(getAccountField('totalPerpUPL')) }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"info-card\">\n                  <div class=\"card-header\">\n                    <h3>{{ translate('modal.quickStats') }}</h3>\n                  </div>\n                  <div class=\"card-body\">\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.activePositions') }}</span>\n                      <span class=\"info-value\">{{ activePositions().length }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.activeOrders') }}</span>\n                      <span class=\"info-value\">{{ activeOrders().length }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.nonZeroBalances') }}</span>\n                      <span class=\"info-value\">{{ nonZeroBalances().length }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <span class=\"info-label\">{{ translate('modal.lastUpdated') }}</span>\n                      <span class=\"info-value text-muted\">{{ userInfo()!.timestamp | date:'short' }}</span>\n                    </div>\n                  </div>\n                </div>\n              } @else {\n                <div class=\"error-message-inline\">\n                  <span class=\"error-icon\">⚠️</span>\n                  <p>{{ translate('modal.failedToLoadAccount') }}</p>\n                </div>\n              }\n            </div>\n          }\n\n          <!-- Balances Tab -->\n          @if (activeTab() === 'balances') {\n            <div class=\"balances-container\">\n              @if (nonZeroBalances().length > 0) {\n                <div class=\"balances-grid\">\n                  @for (balance of nonZeroBalances(); track balance.coin) {\n                    <div class=\"balance-card\">\n                      <div class=\"balance-header\">\n                        <div class=\"coin-info\">\n                          <h4>{{ balance.coin }}</h4>\n                          <span class=\"usd-value\">${{ formatCurrency(balance.usdValue) }}</span>\n                        </div>\n                      </div>\n                      <div class=\"balance-body\">\n                        <div class=\"balance-row\">\n                          <span class=\"label\">{{ translate('modal.walletBalance') }}</span>\n                          <span class=\"value\">{{ formatCurrency(balance.walletBalance, 8) }}</span>\n                        </div>\n                        <div class=\"balance-row\">\n                          <span class=\"label\">{{ translate('modal.available') }}</span>\n                          <span class=\"value text-success\">{{ formatCurrency(balance.availableToWithdraw, 8) }}</span>\n                        </div>\n                        <div class=\"balance-row\">\n                          <span class=\"label\">{{ translate('modal.equity') }}</span>\n                          <span class=\"value\">{{ formatCurrency(balance.equity, 8) }}</span>\n                        </div>\n                        @if (parseFloat(balance.unrealisedPnl) !== 0) {\n                          <div class=\"balance-row\">\n                            <span class=\"label\">{{ translate('modal.unrealizedPnL') }}</span>\n                            <span class=\"value\" [class]=\"getPnlColorClass(balance.unrealisedPnl)\">\n                              {{ formatCurrency(balance.unrealisedPnl, 8) }}\n                            </span>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  }\n                </div>\n              } @else {\n                <div class=\"empty-state\">\n                  <div class=\"empty-icon\">💰</div>\n                  <h3>{{ translate('modal.noBalances') }}</h3>\n                  <p>{{ translate('modal.noBalancesDesc') }}</p>\n                </div>\n              }\n            </div>\n          }\n\n          <!-- Positions Tab -->\n          @if (activeTab() === 'positions') {\n            <div class=\"positions-container\">\n              @if (activePositions().length > 0) {\n                <div class=\"table-responsive\">\n                  <table class=\"data-table\">\n                    <thead>\n                      <tr>\n                        <th>{{ translate('dashboard.symbol') }}</th>\n                        <th>{{ translate('modal.side') }}</th>\n                        <th>{{ translate('modal.size') }}</th>\n                        <th>{{ translate('modal.entryPrice') }}</th>\n                        <th>{{ translate('modal.markPrice') }}</th>\n                        <th>{{ translate('modal.leverage') }}</th>\n                        <th>{{ translate('modal.unrealizedPnL') }}</th>\n                        <th>{{ translate('modal.pnlPercent') }}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      @for (position of activePositions(); track position.symbol) {\n                        <tr>\n                          <td><strong>{{ position.symbol }}</strong></td>\n                          <td>\n                            <span class=\"badge\" [class]=\"getSideClass(getPositionSide(position))\">\n                              {{ getPositionSide(position) }}\n                            </span>\n                          </td>\n                          <td>{{ formatCurrency(getPositionSize(position), 4) }}</td>\n                          <td>${{ formatCurrency(position.entryPrice) }}</td>\n                          <td>${{ formatCurrency(position.markPrice) }}</td>\n                          <td>{{ position.leverage }}x</td>\n                          <td [class]=\"getPnlColorClass(getPositionUnrealizedPnl(position))\">\n                            ${{ formatCurrency(getPositionUnrealizedPnl(position)) }}\n                          </td>\n                          <td [class]=\"getPnlColorClass(calculatePositionProfitPct(position))\">\n                            {{ formatCurrency(calculatePositionProfitPct(position)) }}%\n                          </td>\n                        </tr>\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              } @else {\n                <div class=\"empty-state\">\n                  <div class=\"empty-icon\">📈</div>\n                  <h3>{{ translate('modal.noPositions') }}</h3>\n                  <p>{{ translate('modal.noPositionsDesc') }}</p>\n                </div>\n              }\n            </div>\n          }\n\n          <!-- Active Orders Tab -->\n          @if (activeTab() === 'orders') {\n            <div class=\"orders-container\">\n              @if (activeOrders().length > 0) {\n                <div class=\"table-responsive\">\n                  <table class=\"data-table\">\n                    <thead>\n                      <tr>\n                        <th>{{ translate('dashboard.symbol') }}</th>\n                        <th>{{ translate('modal.side') }}</th>\n                        <th>{{ translate('modal.type') }}</th>\n                        <th>{{ translate('modal.quantity') }}</th>\n                        <th>{{ translate('modal.price') }}</th>\n                        <th>{{ translate('modal.status') }}</th>\n                        <th>{{ translate('modal.created') }}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      @for (order of activeOrders(); track order.orderId) {\n                        <tr>\n                          <td><strong>{{ order.symbol }}</strong></td>\n                          <td>\n                            <span class=\"badge\" [class]=\"getSideClass(order.side)\">\n                              {{ order.side }}\n                            </span>\n                          </td>\n                          <td>{{ order.orderType }}</td>\n                          <td>{{ formatCurrency(order.qty, 4) }}</td>\n                          <td>${{ formatCurrency(order.price) }}</td>\n                          <td>\n                            <span class=\"badge\" [class]=\"getOrderStatusClass(order.orderStatus)\">\n                              {{ order.orderStatus }}\n                            </span>\n                          </td>\n                          <td class=\"text-muted\">{{ order.createdTime | date:'short' }}</td>\n                        </tr>\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              } @else {\n                <div class=\"empty-state\">\n                  <div class=\"empty-icon\">📋</div>\n                  <h3>{{ translate('modal.noActiveOrders') }}</h3>\n                  <p>{{ translate('modal.noOrdersDesc') }}</p>\n                </div>\n              }\n            </div>\n          }\n        </section>\n      }\n    </div>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { TranslationService } from '../../../services/translation.service';\n\n@Component({\n  selector: 'ui-confirmation-modal',\n  standalone: true,\n  imports: [CommonModule, DialogComponent, ButtonComponent],\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent {\n  @Input() open: boolean = false;\n  @Input() title: string = '';\n  @Input() message: string = '';\n  @Input() confirmText: string = '';\n  @Input() cancelText: string = '';\n  @Input() confirmVariant: 'primary' | 'danger' | 'warning' = 'primary';\n  @Input() loading: boolean = false;\n\n  @Output() openChange = new EventEmitter<boolean>();\n  @Output() confirm = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n\n  protected translationService = inject(TranslationService);\n\n  translate(key: string, params?: Record<string, string>): string {\n    return this.translationService.translate(key, params);\n  }\n\n  onConfirm(): void {\n    if (!this.loading) {\n      this.confirm.emit();\n    }\n  }\n\n  onCancel(): void {\n    if (!this.loading) {\n      this.cancel.emit();\n      this.closeModal();\n    }\n  }\n\n  onDialogClose(): void {\n    if (!this.loading) {\n      this.cancel.emit();\n      this.closeModal();\n    }\n  }\n\n  private closeModal(): void {\n    this.open = false;\n    this.openChange.emit(false);\n  }\n\n  getConfirmText(): string {\n    return this.confirmText || this.translate('modal.confirm');\n  }\n\n  getCancelText(): string {\n    return this.cancelText || this.translate('modal.cancel');\n  }\n\n  getTitle(): string {\n    return this.title || this.translate('modal.confirmTitle');\n  }\n}\n","<ui-dialog\n  [open]=\"open\"\n  [title]=\"getTitle()\"\n  [size]=\"'small'\"\n  [closable]=\"!loading\"\n  [closeOnBackdrop]=\"!loading\"\n  (close)=\"onDialogClose()\"\n>\n  <div class=\"confirmation-content\">\n    <p class=\"confirmation-message\">{{ message }}</p>\n  </div>\n\n  <div class=\"confirmation-actions\">\n    <ui-button\n      [variant]=\"'secondary'\"\n      [disabled]=\"loading\"\n      (clicked)=\"onCancel()\"\n    >\n      {{ getCancelText() }}\n    </ui-button>\n\n    <ui-button\n      [variant]=\"confirmVariant\"\n      [loading]=\"loading\"\n      [disabled]=\"loading\"\n      (clicked)=\"onConfirm()\"\n    >\n      {{ getConfirmText() }}\n    </ui-button>\n  </div>\n</ui-dialog>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  inject,\n  ElementRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TranslationService } from '../../../services/translation.service';\n\n/**\n * Professional Dialog Component\n *\n * A fully accessible, theme-aware modal dialog component with:\n * - Smooth animations (fade-in overlay, slide-up content)\n * - Focus trap for keyboard navigation\n * - ESC key to close\n * - Backdrop click to close\n * - Mobile-responsive with bottom sheet on small screens\n * - Light/dark theme support using CSS variables\n * - WCAG 2.1 AA compliant accessibility\n */\n@Component({\n  selector: 'ui-dialog',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css'],\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('250ms cubic-bezier(0.4, 0, 0.2, 1)', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        animate('200ms cubic-bezier(0.4, 0, 0.2, 1)', style({ opacity: 0 }))\n      ])\n    ]),\n    trigger('slideUp', [\n      transition(':enter', [\n        style({ opacity: 0, transform: 'translateY(20px) scale(0.96)' }),\n        animate('300ms cubic-bezier(0.4, 0, 0.2, 1)', style({ opacity: 1, transform: 'translateY(0) scale(1)' }))\n      ]),\n      transition(':leave', [\n        animate('200ms cubic-bezier(0.4, 0, 0.2, 1)', style({ opacity: 0, transform: 'translateY(20px) scale(0.96)' }))\n      ])\n    ])\n  ]\n})\nexport class DialogComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  @Input() open: boolean = false;\n  @Input() title: string = '';\n  @Input() size: 'small' | 'medium' | 'large' | 'fullscreen' = 'medium';\n  @Input() closable: boolean = true;\n  @Input() closeOnBackdrop: boolean = true;\n  @Input() showHeader: boolean = true;\n  @Input() showFooter: boolean = false;\n\n  @Output() openChange = new EventEmitter<boolean>();\n  @Output() close = new EventEmitter<void>();\n\n  @ViewChild('dialogElement') dialogElement?: ElementRef;\n\n  // Inject TranslationService\n  protected translationService = inject(TranslationService);\n\n  private previousActiveElement: HTMLElement | null = null;\n  private focusableElements: HTMLElement[] = [];\n  private scrollbarWidth: number = 0;\n\n  translate(key: string): string {\n    return this.translationService.translate(key);\n  }\n\n  ngOnInit(): void {\n    if (this.open) {\n      this.calculateScrollbarWidth();\n      this.addBodyClass();\n      this.addEscapeListener();\n      this.saveFocusState();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.open) {\n      setTimeout(() => this.setInitialFocus(), 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.removeBodyClass();\n    this.removeEscapeListener();\n    this.restoreFocusState();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['open']) {\n      if (this.open) {\n        this.calculateScrollbarWidth();\n        this.addBodyClass();\n        this.addEscapeListener();\n        this.saveFocusState();\n        setTimeout(() => this.setInitialFocus(), 100);\n      } else {\n        this.removeBodyClass();\n        this.removeEscapeListener();\n        this.restoreFocusState();\n      }\n    }\n  }\n\n  onBackdropClick(event: Event): void {\n    if (this.closeOnBackdrop && event.target === event.currentTarget) {\n      this.closeDialog();\n    }\n  }\n\n  onCloseClick(): void {\n    if (this.closable) {\n      this.closeDialog();\n    }\n  }\n\n  private closeDialog(): void {\n    this.open = false;\n    this.openChange.emit(false);\n    this.close.emit();\n  }\n\n  /**\n   * Handle keyboard events for accessibility\n   */\n  private handleEscape = (event: KeyboardEvent): void => {\n    if (event.key === 'Escape' && this.open && this.closable) {\n      event.preventDefault();\n      this.closeDialog();\n    }\n\n    // Focus trap - Tab navigation\n    if (event.key === 'Tab' && this.open) {\n      this.handleTabKey(event);\n    }\n  };\n\n  /**\n   * Implement focus trap for keyboard navigation\n   */\n  private handleTabKey(event: KeyboardEvent): void {\n    this.updateFocusableElements();\n\n    if (this.focusableElements.length === 0) return;\n\n    const firstElement = this.focusableElements[0];\n    const lastElement = this.focusableElements[this.focusableElements.length - 1];\n\n    if (event.shiftKey) {\n      // Shift + Tab: move focus backwards\n      if (document.activeElement === firstElement) {\n        event.preventDefault();\n        lastElement.focus();\n      }\n    } else {\n      // Tab: move focus forwards\n      if (document.activeElement === lastElement) {\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }\n\n  /**\n   * Update list of focusable elements within the dialog\n   */\n  private updateFocusableElements(): void {\n    const dialog = document.querySelector('.dialog');\n    if (!dialog) return;\n\n    const focusableSelectors = [\n      'button:not([disabled])',\n      'a[href]',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])',\n      '[contenteditable=\"true\"]'\n    ].join(', ');\n\n    this.focusableElements = Array.from(\n      dialog.querySelectorAll<HTMLElement>(focusableSelectors)\n    ).filter(el => {\n      return el.offsetParent !== null && // Element is visible\n             !el.hasAttribute('disabled') &&\n             el.tabIndex !== -1;\n    });\n  }\n\n  /**\n   * Set initial focus when dialog opens\n   */\n  private setInitialFocus(): void {\n    this.updateFocusableElements();\n\n    if (this.focusableElements.length > 0) {\n      // Focus the first focusable element (usually the close button or first input)\n      this.focusableElements[0].focus();\n    } else {\n      // If no focusable elements, focus the dialog itself\n      const dialog = document.querySelector('.dialog') as HTMLElement;\n      if (dialog) {\n        dialog.focus();\n      }\n    }\n  }\n\n  /**\n   * Save the currently focused element before opening dialog\n   */\n  private saveFocusState(): void {\n    this.previousActiveElement = document.activeElement as HTMLElement;\n  }\n\n  /**\n   * Restore focus to the previously focused element after closing dialog\n   */\n  private restoreFocusState(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      setTimeout(() => {\n        this.previousActiveElement?.focus();\n        this.previousActiveElement = null;\n      }, 0);\n    }\n  }\n\n  /**\n   * Calculate scrollbar width to prevent layout shift\n   */\n  private calculateScrollbarWidth(): void {\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll';\n    document.body.appendChild(outer);\n\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n\n    this.scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    document.body.removeChild(outer);\n  }\n\n  private addEscapeListener(): void {\n    document.addEventListener('keydown', this.handleEscape);\n  }\n\n  private removeEscapeListener(): void {\n    document.removeEventListener('keydown', this.handleEscape);\n  }\n\n  private addBodyClass(): void {\n    document.body.classList.add('dialog-open');\n    // Prevent layout shift by adding padding equal to scrollbar width\n    if (this.scrollbarWidth > 0) {\n      document.body.style.paddingRight = `${this.scrollbarWidth}px`;\n    }\n  }\n\n  private removeBodyClass(): void {\n    document.body.classList.remove('dialog-open');\n    document.body.style.paddingRight = '';\n  }\n\n  getDialogClasses(): string {\n    const classes = ['dialog'];\n    classes.push(`dialog-${this.size}`);\n    return classes.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ui-dialog-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog-header.component.html',\n  styleUrls: ['./dialog-header.component.css']\n})\nexport class DialogHeaderComponent {}\n\n@Component({\n  selector: 'ui-dialog-title',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog-title.component.html',\n  styleUrls: ['./dialog-title.component.css']\n})\nexport class DialogTitleComponent {}\n\n@Component({\n  selector: 'ui-dialog-content',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog-content.component.html',\n  styleUrls: ['./dialog-content.component.css']\n})\nexport class DialogContentComponent {}\n\n@Component({\n  selector: 'ui-dialog-footer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog-footer.component.html',\n  styleUrls: ['./dialog-footer.component.css']\n})\nexport class DialogFooterComponent {}","<div\n  *ngIf=\"open\"\n  class=\"dialog-overlay\"\n  role=\"presentation\"\n  (click)=\"onBackdropClick($event)\"\n  [@fadeIn]\n>\n  <div\n    [class]=\"getDialogClasses()\"\n    role=\"dialog\"\n    [attr.aria-labelledby]=\"title ? 'dialog-title' : null\"\n    [attr.aria-describedby]=\"'dialog-content'\"\n    [attr.aria-modal]=\"true\"\n    tabindex=\"-1\"\n    [@slideUp]\n  >\n    <!-- Header -->\n    <div *ngIf=\"showHeader\" class=\"dialog-header\">\n      <h2\n        *ngIf=\"title\"\n        id=\"dialog-title\"\n        class=\"dialog-title\"\n      >\n        {{ title }}\n      </h2>\n      <ng-content select=\"ui-dialog-header\"></ng-content>\n\n      <button\n        *ngIf=\"closable\"\n        class=\"dialog-close-button\"\n        type=\"button\"\n        [attr.aria-label]=\"translate('dialog.closeAriaLabel')\"\n        [disabled]=\"!closable\"\n        (click)=\"onCloseClick()\"\n      >\n        <span class=\"close-icon\" aria-hidden=\"true\">✕</span>\n      </button>\n    </div>\n\n    <!-- Content -->\n    <div\n      id=\"dialog-content\"\n      class=\"dialog-body\"\n      role=\"document\"\n    >\n      <ng-content select=\"ui-dialog-content\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n\n    <!-- Footer -->\n    <div\n      *ngIf=\"showFooter\"\n      class=\"dialog-footer\"\n      role=\"group\"\n      [attr.aria-label]=\"translate('dialog.actionsAriaLabel')\"\n    >\n      <ng-content select=\"ui-dialog-footer\"></ng-content>\n    </div>\n\n  </div>\n</div>","    <div class=\"dialog-header\">\n      <ng-content></ng-content>\n    </div>","    <h2 class=\"dialog-title\">\n      <ng-content></ng-content>\n    </h2>","    <div class=\"dialog-content\">\n      <ng-content></ng-content>\n    </div>","    <div class=\"dialog-footer\">\n      <ng-content></ng-content>\n    </div>","import { Injectable, effect } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { getEndpointUrl, buildUrlWithQuery } from '../config/app.config';\nimport { ExchangeEnvironmentService } from './exchange-environment.service';\n\n/**\n * BingX Account Information Interface\n */\nexport interface BingXAccountInfo {\n  balance: {\n    userId: string;\n    asset: string;\n    balance: string;\n    equity: string;\n    unrealizedProfit: string;\n    realisedProfit: string;\n    availableMargin: string;\n    usedMargin: string;\n    freezedMargin: string;\n  };\n}\n\n/**\n * BingX Wallet Balance Information\n */\nexport interface BingXWalletBalance {\n  asset: string;\n  balance: {\n    asset: string;\n    balance: string;\n    equity: string;\n    unrealizedProfit: string;\n    realisedProfit: string;\n    availableMargin: string;\n    usedMargin: string;\n    freezedMargin: string;\n  };\n}\n\n/**\n * BingX Position Information\n */\nexport interface BingXPosition {\n  symbol: string;\n  positionId: string;\n  positionSide: 'LONG' | 'SHORT';\n  isolated: boolean;\n  positionAmt: string;\n  availableAmt: string;\n  unrealizedProfit: string;\n  realisedProfit: string;\n  initialMargin: string;\n  markPrice: string;\n  entryPrice: string;\n  leverage: string;\n  isolatedWallet: string;\n}\n\n/**\n * BingX Ticker Information\n */\nexport interface BingXTicker {\n  symbol: string;\n  priceChange: string;\n  priceChangePercent: string;\n  lastPrice: string;\n  lastQty: string;\n  highPrice: string;\n  lowPrice: string;\n  volume: string;\n  quoteVolume: string;\n  openPrice: string;\n  openTime: number;\n  closeTime: number;\n}\n\n/**\n * Complete BingX User Information Response\n */\nexport interface BingXUserInfo {\n  success: boolean;\n  timestamp: string;\n  testnet: boolean;\n  data: {\n    accountInfo: BingXAccountInfo | { error: string };\n    walletBalance: BingXWalletBalance | { error: string };\n    positions: BingXPosition[];\n    positionsCount: number;\n    marketReference: BingXTicker | null;\n  };\n}\n\n/**\n * BingX User Service\n *\n * Handles all BingX user-related operations including:\n * - Fetching user account information\n * - Managing account balance data\n * - Retrieving positions\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BingXUserService {\n  private userInfoSubject = new BehaviorSubject<BingXUserInfo | null>(null);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  private errorSubject = new BehaviorSubject<string | null>(null);\n\n  public readonly userInfo$ = this.userInfoSubject.asObservable();\n  public readonly loading$ = this.loadingSubject.asObservable();\n  public readonly error$ = this.errorSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private environmentService: ExchangeEnvironmentService\n  ) {\n    // React to environment changes - clear cached data when environment switches\n    effect(() => {\n      const env = this.environmentService.currentEnvironment();\n      console.log('[BingXUserService] Environment changed to:', env);\n      this.clearUserInfo();\n    }, { allowSignalWrites: true });\n  }\n\n  /**\n   * Get comprehensive BingX user information using stored API keys\n   * This method uses the active BingX credentials from the backend\n   * @returns Observable<BingXUserInfo>\n   */\n  getUserInfo(): Observable<BingXUserInfo> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    const url = getEndpointUrl('bingx', 'userInfo');\n\n    return this.http.get<BingXUserInfo>(url).pipe(\n      tap(info => {\n        this.userInfoSubject.next(info);\n        this.loadingSubject.next(false);\n      }),\n      catchError(error => {\n        this.loadingSubject.next(false);\n        const errorMessage = this.handleError(error);\n        this.errorSubject.next(errorMessage);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Refresh user information using stored API keys\n   */\n  refreshUserInfo(): Observable<BingXUserInfo> {\n    return this.getUserInfo();\n  }\n\n  /**\n   * Get current user info from cache (if available)\n   */\n  getCurrentUserInfo(): BingXUserInfo | null {\n    return this.userInfoSubject.value;\n  }\n\n  /**\n   * Clear cached user info\n   */\n  clearUserInfo(): void {\n    this.userInfoSubject.next(null);\n    this.errorSubject.next(null);\n  }\n\n  /**\n   * Check if user info is currently loading\n   */\n  isLoading(): boolean {\n    return this.loadingSubject.value;\n  }\n\n  /**\n   * Get current error (if any)\n   */\n  getCurrentError(): string | null {\n    return this.errorSubject.value;\n  }\n\n  /**\n   * Calculate total portfolio value in USD\n   */\n  calculateTotalValue(userInfo: BingXUserInfo): number {\n    if (!userInfo.success || !userInfo.data.accountInfo) {\n      return 0;\n    }\n\n    const accountInfo = userInfo.data.accountInfo;\n    if ('error' in accountInfo) {\n      return 0;\n    }\n\n    return parseFloat(accountInfo.balance.equity || '0');\n  }\n\n  /**\n   * Get active (non-zero) positions\n   */\n  getActivePositions(userInfo: BingXUserInfo): BingXPosition[] {\n    if (!userInfo.success || !userInfo.data.positions) {\n      return [];\n    }\n\n    return userInfo.data.positions.filter(\n      position => parseFloat(position.positionAmt) > 0\n    );\n  }\n\n  /**\n   * Calculate total unrealized PnL from positions\n   */\n  calculateUnrealizedPnl(userInfo: BingXUserInfo): number {\n    const activePositions = this.getActivePositions(userInfo);\n    return activePositions.reduce(\n      (total, position) => total + parseFloat(position.unrealizedProfit || '0'),\n      0\n    );\n  }\n\n  /**\n   * Get wallet balance\n   */\n  getWalletBalance(): Observable<any> {\n    const baseUrl = getEndpointUrl('bingx', 'walletBalance');\n    const env = this.environmentService.currentEnvironment();\n    const params: Record<string, string> = {\n      environment: env\n    };\n    const url = buildUrlWithQuery(baseUrl, params);\n\n    return this.http.get<any>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching wallet balance:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Get tickers\n   */\n  getTickers(symbol?: string): Observable<any> {\n    const baseUrl = getEndpointUrl('bingx', 'tickers');\n    const env = this.environmentService.currentEnvironment();\n    const params: Record<string, string> = {\n      environment: env\n    };\n    if (symbol) {\n      params['symbol'] = symbol;\n    }\n    const url = buildUrlWithQuery(baseUrl, params);\n\n    return this.http.get<any>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching tickers:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Handle HTTP errors and return user-friendly messages\n   */\n  private handleError(error: HttpErrorResponse): string {\n    console.error('BingX User Service Error:', error);\n\n    if (error.error?.message) {\n      return error.error.message;\n    }\n\n    if (error.status === 0) {\n      return 'Unable to connect to the server. Please check your internet connection.';\n    }\n\n    if (error.status === 401) {\n      return 'Invalid API credentials. Please check your BingX API key and secret.';\n    }\n\n    if (error.status === 403) {\n      return 'Access forbidden. Please check your API key permissions.';\n    }\n\n    if (error.status === 429) {\n      return 'Too many requests. Please wait a moment and try again.';\n    }\n\n    if (error.status >= 500) {\n      return 'Server error. Please try again later.';\n    }\n\n    return error.message || 'An unexpected error occurred. Please try again.';\n  }\n}\n","import { Injectable, effect } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { getEndpointUrl, buildUrlWithQuery } from '../config/app.config';\nimport { ExchangeEnvironmentService } from './exchange-environment.service';\n\n/**\n * Bybit Account Information Interface\n */\nexport interface BybitAccountInfo {\n  totalEquity: string;\n  totalWalletBalance: string;\n  totalMarginBalance: string;\n  totalAvailableBalance: string;\n  totalPerpUPL: string;\n  totalInitialMargin: string;\n  totalMaintenanceMargin: string;\n  coin: BybitCoinBalance[];\n}\n\n/**\n * Individual coin balance in account\n */\nexport interface BybitCoinBalance {\n  coin: string;\n  equity: string;\n  usdValue: string;\n  walletBalance: string;\n  availableToWithdraw: string;\n  availableToBorrow: string;\n  borrowAmount: string;\n  accruedInterest: string;\n  totalOrderIM: string;\n  totalPositionIM: string;\n  totalPositionMM: string;\n  unrealisedPnl: string;\n  cumRealisedPnl: string;\n}\n\n/**\n * Bybit Wallet Balance Information\n */\nexport interface BybitWalletBalance {\n  accountType: string;\n  accountIMRate: string;\n  accountMMRate: string;\n  totalEquity: string;\n  totalWalletBalance: string;\n  totalMarginBalance: string;\n  totalAvailableBalance: string;\n  totalPerpUPL: string;\n  totalInitialMargin: string;\n  totalMaintenanceMargin: string;\n  accountLTV: string;\n  coin: BybitCoinBalance[];\n}\n\n/**\n * Bybit Position Information\n */\nexport interface BybitPosition {\n  symbol: string;\n  side: 'Buy' | 'Sell' | 'None';\n  size: string;\n  positionValue: string;\n  entryPrice: string;\n  markPrice: string;\n  liqPrice: string;\n  bustPrice: string;\n  positionMM: string;\n  positionIM: string;\n  tpslMode: string;\n  takeProfit: string;\n  stopLoss: string;\n  trailingStop: string;\n  unrealisedPnl: string;\n  cumRealisedPnl: string;\n  createdTime: string;\n  updatedTime: string;\n  leverage: string;\n}\n\n/**\n * Bybit Order Information\n */\nexport interface BybitOrder {\n  orderId: string;\n  orderLinkId: string;\n  symbol: string;\n  side: 'Buy' | 'Sell';\n  orderType: string;\n  qty: string;\n  price: string;\n  orderStatus: string;\n  timeInForce: string;\n  createdTime: string;\n  updatedTime: string;\n  avgPrice: string;\n  cumExecQty: string;\n  cumExecValue: string;\n  cumExecFee: string;\n}\n\n/**\n * Complete Bybit User Information Response\n */\nexport interface BybitUserInfo {\n  success: boolean;\n  timestamp: string;\n  testnet: boolean;\n  data: {\n    accountInfo: BybitAccountInfo | { error: string };\n    walletBalance: {\n      list: BybitWalletBalance[];\n    } | { error: string };\n    positions: BybitPosition[];\n    positionsCount: number;\n    activeOrders: BybitOrder[];\n    activeOrdersCount: number;\n    orderHistory: BybitOrder[];\n    marketReference: any;\n  };\n}\n\n/**\n * API Credentials Test Request\n */\nexport interface BybitCredentialsTest {\n  apiKey: string;\n  apiSecret: string;\n  testnet?: boolean;\n}\n\n/**\n * API Credentials Test Response\n */\nexport interface BybitCredentialsTestResponse {\n  success: boolean;\n  message: string;\n  testnet: boolean;\n  accountPreview?: {\n    totalEquity: string;\n    totalWalletBalance: string;\n    totalAvailableBalance: string;\n  };\n  timestamp: string;\n}\n\n/**\n * Stored API Keys Response\n */\nexport interface BybitStoredApiKeysResponse {\n  success: boolean;\n  data: {\n    hasKeys: boolean;\n    testnet: boolean;\n    apiKeyPreview: string;\n    createdAt?: string;\n    updatedAt?: string;\n  };\n  timestamp: string;\n}\n\n/**\n * API Keys Save Request\n */\nexport interface BybitSaveApiKeysRequest {\n  apiKey: string;\n  apiSecret: string;\n  testnet: boolean;\n}\n\n/**\n * API Keys Save Response\n */\nexport interface BybitSaveApiKeysResponse {\n  success: boolean;\n  message: string;\n}\n\n/**\n * Delete API Keys Response\n */\nexport interface BybitDeleteApiKeysResponse {\n  success: boolean;\n  message: string;\n}\n\n/**\n * Detailed Wallet Balance Response\n */\nexport interface BybitWalletBalanceResponse {\n  success: boolean;\n  data: {\n    list: Array<{\n      accountType: string;\n      totalEquity: string;\n      totalWalletBalance: string;\n      totalAvailableBalance: string;\n      totalMarginBalance?: string;\n      coin: Array<{\n        coin: string;\n        equity: string;\n        walletBalance: string;\n        availableToWithdraw: string;\n        locked: string;\n        usdValue: string;\n      }>;\n    }>;\n  };\n  accountType: string;\n  timestamp: string;\n}\n\n/**\n * Asset Information for a single coin\n */\nexport interface BybitAssetItem {\n  coin: string;\n  frozen: string;\n  free: string;\n  withdraw: string;\n  [key: string]: any; // Allow for additional fields from API\n}\n\n/**\n * Asset Information for an account type\n */\nexport interface BybitAccountAssetInfo {\n  status: string;\n  assets: BybitAssetItem[];\n}\n\n/**\n * Complete Asset Information Response\n */\nexport interface BybitAssetInfoResponse {\n  success: boolean;\n  data: {\n    spot?: BybitAccountAssetInfo;\n    contract?: BybitAccountAssetInfo;\n    unified?: BybitAccountAssetInfo;\n    investment?: BybitAccountAssetInfo;\n    option?: BybitAccountAssetInfo;\n    fund?: BybitAccountAssetInfo;\n    [key: string]: any; // Allow for dynamic account types\n  };\n  accountType?: string;\n  coin?: string;\n  testnet: boolean;\n  timestamp: string;\n}\n\n/**\n * Single coin balance in All Coins Balance response\n */\nexport interface BybitCoinBalanceItem {\n  coin: string;\n  transferBalance: string;\n  walletBalance: string;\n  bonus: string;\n}\n\n/**\n * All Coins Balance Response\n * Used for querying all coins in a specific account type (especially FUND)\n */\nexport interface BybitAllCoinsBalanceResponse {\n  success: boolean;\n  data: {\n    memberId: string;\n    accountType: string;\n    balance: BybitCoinBalanceItem[];\n  };\n  accountType: string;\n  coin?: string;\n  testnet: boolean;\n  timestamp: string;\n}\n\n/**\n * Bybit User Service\n *\n * Handles all Bybit user-related operations including:\n * - Fetching user account information\n * - Testing API credentials\n * - Managing account balance data\n * - Retrieving positions and orders\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BybitUserService {\n  private userInfoSubject = new BehaviorSubject<BybitUserInfo | null>(null);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  private errorSubject = new BehaviorSubject<string | null>(null);\n  private storedKeysSubject = new BehaviorSubject<BybitStoredApiKeysResponse | null>(null);\n\n  public readonly userInfo$ = this.userInfoSubject.asObservable();\n  public readonly loading$ = this.loadingSubject.asObservable();\n  public readonly error$ = this.errorSubject.asObservable();\n  public readonly storedKeys$ = this.storedKeysSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private environmentService: ExchangeEnvironmentService\n  ) {\n    // React to environment changes - clear cached data when environment switches\n    effect(() => {\n      const env = this.environmentService.currentEnvironment();\n      console.log('[BybitUserService] Environment changed to:', env);\n      this.clearUserInfo();\n    }, { allowSignalWrites: true });\n  }\n\n  /**\n   * Get comprehensive Bybit user information using stored API keys\n   * This method now only works with stored credentials in the backend\n   * @returns Observable<BybitUserInfo>\n   */\n  getUserInfo(): Observable<BybitUserInfo> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    const url = getEndpointUrl('bybit', 'userInfo');\n    const env = this.environmentService.currentEnvironment();\n\n    return this.http.get<BybitUserInfo>(url, {\n      params: { environment: env }\n    }).pipe(\n      tap(info => {\n        this.userInfoSubject.next(info);\n        this.loadingSubject.next(false);\n      }),\n      catchError(error => {\n        this.loadingSubject.next(false);\n        const errorMessage = this.handleError(error);\n        this.errorSubject.next(errorMessage);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Refresh user information using stored API keys\n   */\n  refreshUserInfo(): Observable<BybitUserInfo> {\n    return this.getUserInfo();\n  }\n\n  /**\n   * Get current user info from cache (if available)\n   */\n  getCurrentUserInfo(): BybitUserInfo | null {\n    return this.userInfoSubject.value;\n  }\n\n  /**\n   * Clear cached user info\n   */\n  clearUserInfo(): void {\n    this.userInfoSubject.next(null);\n    this.errorSubject.next(null);\n  }\n\n  /**\n   * Check if user info is currently loading\n   */\n  isLoading(): boolean {\n    return this.loadingSubject.value;\n  }\n\n  /**\n   * Get current error (if any)\n   */\n  getCurrentError(): string | null {\n    return this.errorSubject.value;\n  }\n\n  /**\n   * Calculate total portfolio value in USD\n   */\n  calculateTotalValue(userInfo: BybitUserInfo): number {\n    if (!userInfo.success || !userInfo.data.accountInfo) {\n      return 0;\n    }\n\n    const accountInfo = userInfo.data.accountInfo;\n    if ('error' in accountInfo) {\n      return 0;\n    }\n\n    return parseFloat(accountInfo.totalEquity || '0');\n  }\n\n  /**\n   * Get all non-zero coin balances\n   */\n  getNonZeroBalances(userInfo: BybitUserInfo): BybitCoinBalance[] {\n    if (!userInfo.success || !userInfo.data.walletBalance) {\n      return [];\n    }\n\n    const walletBalance = userInfo.data.walletBalance;\n    if ('error' in walletBalance || !walletBalance.list || walletBalance.list.length === 0) {\n      return [];\n    }\n\n    const coins = walletBalance.list[0].coin || [];\n    return coins.filter(coin => parseFloat(coin.walletBalance) > 0);\n  }\n\n  /**\n   * Get active (non-zero) positions\n   */\n  getActivePositions(userInfo: BybitUserInfo): BybitPosition[] {\n    if (!userInfo.success || !userInfo.data.positions) {\n      return [];\n    }\n\n    return userInfo.data.positions.filter(\n      position => parseFloat(position.size) > 0 && position.side !== 'None'\n    );\n  }\n\n  /**\n   * Calculate total unrealized PnL from positions\n   */\n  calculateUnrealizedPnl(userInfo: BybitUserInfo): number {\n    const activePositions = this.getActivePositions(userInfo);\n    return activePositions.reduce(\n      (total, position) => total + parseFloat(position.unrealisedPnl || '0'),\n      0\n    );\n  }\n\n  /**\n   * Save API keys to the database\n   * This method now validates AND saves the keys in a single operation\n   * The backend tests the credentials before storing them\n   * @param apiKey - Bybit API key\n   * @param apiSecret - Bybit API secret\n   * @param testnet - Whether to use testnet\n   * @returns Observable<BybitSaveApiKeysResponse>\n   */\n  saveApiKeys(apiKey: string, apiSecret: string, testnet: boolean): Observable<BybitSaveApiKeysResponse> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    const request: BybitSaveApiKeysRequest = {\n      apiKey,\n      apiSecret,\n      testnet\n    };\n\n    return this.http.post<BybitSaveApiKeysResponse>(\n      getEndpointUrl('bybit', 'apiKeys'),\n      request\n    ).pipe(\n      tap(response => {\n        this.loadingSubject.next(false);\n        if (response.success) {\n          // Update stored keys status\n          this.storedKeysSubject.next({\n            success: true,\n            data: {\n              hasKeys: true,\n              testnet,\n              apiKeyPreview: this.maskApiKey(apiKey)\n            },\n            timestamp: new Date().toISOString()\n          });\n        }\n      }),\n      catchError(error => {\n        this.loadingSubject.next(false);\n        const errorMessage = this.handleError(error);\n        this.errorSubject.next(errorMessage);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Get stored API keys information (without exposing actual keys)\n   * @returns Observable<BybitStoredApiKeysResponse>\n   */\n  getStoredApiKeys(): Observable<BybitStoredApiKeysResponse> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    return this.http.get<BybitStoredApiKeysResponse>(\n      getEndpointUrl('bybit', 'storedApiKeys')\n    ).pipe(\n      tap(response => {\n        this.loadingSubject.next(false);\n        this.storedKeysSubject.next(response);\n      }),\n      catchError(error => {\n        this.loadingSubject.next(false);\n        const errorMessage = this.handleError(error);\n        this.errorSubject.next(errorMessage);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Delete stored API keys from the database\n   * @returns Observable<BybitDeleteApiKeysResponse>\n   */\n  deleteApiKeys(): Observable<BybitDeleteApiKeysResponse> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    return this.http.delete<BybitDeleteApiKeysResponse>(\n      getEndpointUrl('bybit', 'deleteApiKeys')\n    ).pipe(\n      tap(response => {\n        this.loadingSubject.next(false);\n        if (response.success) {\n          // Clear stored keys status\n          this.storedKeysSubject.next(null);\n          // Clear user info as well\n          this.userInfoSubject.next(null);\n        }\n      }),\n      catchError(error => {\n        this.loadingSubject.next(false);\n        const errorMessage = this.handleError(error);\n        this.errorSubject.next(errorMessage);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Get current stored keys status\n   */\n  getStoredKeysStatus(): BybitStoredApiKeysResponse | null {\n    return this.storedKeysSubject.value;\n  }\n\n  /**\n   * Check if user has stored API keys\n   */\n  hasStoredKeys(): boolean {\n    const storedKeys = this.storedKeysSubject.value;\n    return storedKeys?.data?.hasKeys ?? false;\n  }\n\n  /**\n   * Get detailed wallet balance from Bybit\n   * @param accountType - Account type (UNIFIED or CONTRACT)\n   * @param coin - Optional specific coin to query\n   * @returns Observable<BybitWalletBalanceResponse>\n   */\n  getWalletBalance(accountType: 'UNIFIED' | 'CONTRACT' = 'UNIFIED', coin?: string): Observable<BybitWalletBalanceResponse> {\n    const baseUrl = getEndpointUrl('bybit', 'walletBalance');\n    const env = this.environmentService.currentEnvironment();\n    const params: Record<string, string> = {\n      accountType,\n      environment: env\n    };\n    if (coin) {\n      params['coin'] = coin;\n    }\n    const url = buildUrlWithQuery(baseUrl, params);\n\n    return this.http.get<BybitWalletBalanceResponse>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching wallet balance:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Get asset information from Bybit\n   * Retrieves detailed asset information for different account types\n   * @param accountType - Optional account type (SPOT, CONTRACT, UNIFIED, etc.)\n   * @param coin - Optional specific coin to query (BTC, ETH, USDT, etc.)\n   * @returns Observable<BybitAssetInfoResponse>\n   */\n  getAssetInfo(accountType?: string, coin?: string): Observable<BybitAssetInfoResponse> {\n    const baseUrl = getEndpointUrl('bybit', 'assetInfo');\n    const env = this.environmentService.currentEnvironment();\n    const params: Record<string, string> = {\n      environment: env\n    };\n    if (accountType) {\n      params['accountType'] = accountType.toUpperCase();\n    }\n    if (coin) {\n      params['coin'] = coin.toUpperCase();\n    }\n    const url = buildUrlWithQuery(baseUrl, params);\n\n    return this.http.get<BybitAssetInfoResponse>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching asset info:', error);\n        const errorMessage = this.handleError(error);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Get all coins balance from Bybit\n   * Retrieves comprehensive balance information for all coins in a specific account type.\n   * This endpoint can query the FUND (Funding wallet) where balances may be stored.\n   *\n   * @param accountType - Optional account type (UNIFIED, SPOT, CONTRACT, FUND, OPTION, etc.)\n   *                      Default: FUND (Funding wallet)\n   * @param coin - Optional specific coin to query (BTC, ETH, USDT, etc.)\n   * @returns Observable<BybitAllCoinsBalanceResponse>\n   */\n  getAllCoinsBalance(accountType?: string, coin?: string): Observable<BybitAllCoinsBalanceResponse> {\n    const baseUrl = getEndpointUrl('bybit', 'allCoinsBalance');\n    const env = this.environmentService.currentEnvironment();\n    const params: Record<string, string> = {\n      environment: env\n    };\n    if (accountType) {\n      params['accountType'] = accountType.toUpperCase();\n    }\n    if (coin) {\n      params['coin'] = coin.toUpperCase();\n    }\n    const url = buildUrlWithQuery(baseUrl, params);\n\n    return this.http.get<BybitAllCoinsBalanceResponse>(url).pipe(\n      catchError(error => {\n        console.error('Error fetching all coins balance:', error);\n        const errorMessage = this.handleError(error);\n        return throwError(() => new Error(errorMessage));\n      })\n    );\n  }\n\n  /**\n   * Mask API key for display (show only last 4 characters)\n   */\n  private maskApiKey(apiKey: string): string {\n    if (apiKey.length <= 4) {\n      return '****';\n    }\n    return '****' + apiKey.slice(-4);\n  }\n\n  /**\n   * Handle HTTP errors and return user-friendly messages\n   */\n  private handleError(error: HttpErrorResponse): string {\n    console.error('Bybit User Service Error:', error);\n\n    if (error.error?.message) {\n      return error.error.message;\n    }\n\n    if (error.status === 0) {\n      return 'Unable to connect to the server. Please check your internet connection.';\n    }\n\n    if (error.status === 401) {\n      return 'Invalid API credentials. Please check your Bybit API key and secret.';\n    }\n\n    if (error.status === 403) {\n      return 'Access forbidden. Please check your API key permissions.';\n    }\n\n    if (error.status === 429) {\n      return 'Too many requests. Please wait a moment and try again.';\n    }\n\n    if (error.status >= 500) {\n      return 'Server error. Please try again later.';\n    }\n\n    return error.message || 'An unexpected error occurred. Please try again.';\n  }\n}\n","import { Injectable, signal } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap, catchError, throwError } from 'rxjs';\nimport { getEndpointUrl } from '../config/app.config';\nimport { AuthService } from './auth.service';\nimport { environment } from '../../environments/environment';\n\nexport interface GoogleAuthResponse {\n  success: boolean;\n  user?: any;\n  message?: string;\n}\n\nexport interface GoogleLinkResponse {\n  success: boolean;\n  message: string;\n  googleEmail?: string;\n  linkedAt?: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleAuthService {\n  private isLinking = signal<boolean>(false);\n  private isUnlinking = signal<boolean>(false);\n\n  readonly isLinking$ = this.isLinking.asReadonly();\n  readonly isUnlinking$ = this.isUnlinking.asReadonly();\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getAuthHeaders(): HttpHeaders {\n    const token = this.authService.authState().token;\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n  }\n\n  /**\n   * Initiate Google OAuth login\n   * This should redirect to Google OAuth or return a URL for redirect\n   */\n  loginWithGoogle(): Observable<{ redirectUrl?: string; success?: boolean }> {\n    return this.http.post<{ redirectUrl?: string; success?: boolean }>(\n      getEndpointUrl('google', 'auth'),\n      {}\n    ).pipe(\n      catchError(error => {\n        console.error('Error initiating Google login:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Handle Google OAuth callback\n   * This processes the authorization code received from Google\n   */\n  handleGoogleCallback(code: string, state?: string): Observable<GoogleAuthResponse> {\n    return this.http.post<GoogleAuthResponse>(\n      `${getEndpointUrl('google', 'auth')}/callback`,\n      { code, state }\n    ).pipe(\n      catchError(error => {\n        console.error('Error handling Google callback:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Link existing account with Google\n   * For users who are already logged in and want to connect their Google account\n   */\n  linkGoogleAccount(googleToken?: string): Observable<GoogleLinkResponse> {\n    this.isLinking.set(true);\n    const headers = this.getAuthHeaders();\n    \n    return this.http.post<GoogleLinkResponse>(\n      getEndpointUrl('google', 'link'),\n      { googleToken },\n      { headers }\n    ).pipe(\n      tap(() => this.isLinking.set(false)),\n      catchError(error => {\n        this.isLinking.set(false);\n        console.error('Error linking Google account:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Unlink Google account from current user\n   */\n  unlinkGoogleAccount(): Observable<GoogleLinkResponse> {\n    this.isUnlinking.set(true);\n    const headers = this.getAuthHeaders();\n    \n    return this.http.post<GoogleLinkResponse>(\n      getEndpointUrl('google', 'unlink'),\n      {},\n      { headers }\n    ).pipe(\n      tap(() => this.isUnlinking.set(false)),\n      catchError(error => {\n        this.isUnlinking.set(false);\n        console.error('Error unlinking Google account:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Get Google account linking status\n   */\n  getGoogleLinkStatus(): Observable<{ linked: boolean; googleEmail?: string; linkedAt?: Date }> {\n    const headers = this.getAuthHeaders();\n    \n    return this.http.get<{ linked: boolean; googleEmail?: string; linkedAt?: Date }>(\n      `${getEndpointUrl('google', 'link')}/status`,\n      { headers }\n    ).pipe(\n      catchError(error => {\n        console.error('Error getting Google link status:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Initialize Google Sign-In button\n   * This sets up the Google Sign-In button for client-side authentication\n   */\n  initializeGoogleSignIn(containerId: string): void {\n    // Load Google Sign-In script if not already loaded\n    if (typeof window !== 'undefined' && !(window as any).google) {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        this.renderGoogleButton(containerId);\n      };\n      document.head.appendChild(script);\n    } else if ((window as any).google) {\n      this.renderGoogleButton(containerId);\n    }\n  }\n\n  private renderGoogleButton(containerId: string): void {\n    if (typeof window !== 'undefined' && (window as any).google) {\n      (window as any).google.accounts.id.initialize({\n        client_id: environment.googleClientId,\n        callback: (response: any) => {\n          this.handleClientSideGoogleResponse(response);\n        }\n      });\n\n      (window as any).google.accounts.id.renderButton(\n        document.getElementById(containerId),\n        {\n          theme: 'outline',\n          size: 'large',\n          type: 'standard',\n          text: 'continue_with',\n          shape: 'rectangular'\n        }\n      );\n    }\n  }\n\n  private handleClientSideGoogleResponse(response: any): void {\n    // Handle the JWT token from Google\n    const credential = response.credential;\n    if (credential) {\n      this.linkGoogleAccount(credential).subscribe({\n        next: (result) => {\n          console.log('Google account linked successfully:', result);\n          // Update user data or show success message\n        },\n        error: (error) => {\n          console.error('Failed to link Google account:', error);\n          // Show error message\n        }\n      });\n    }\n  }\n\n  /**\n   * Create Google OAuth URL for manual redirect\n   */\n  createGoogleAuthUrl(redirectUri: string, state?: string): string {\n    const params = new URLSearchParams({\n      client_id: environment.googleClientId,\n      redirect_uri: redirectUri,\n      response_type: 'code',\n      scope: 'openid email profile',\n      access_type: 'offline',\n      prompt: 'consent'\n    });\n\n    if (state) {\n      params.append('state', state);\n    }\n\n    return `https://accounts.google.com/o/oauth2/v2/auth?${params.toString()}`;\n  }\n}","import { Injectable, signal } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap, catchError, throwError } from 'rxjs';\nimport { getEndpointUrl } from '../config/app.config';\nimport { Language } from './translation.service';\n\nexport interface UserPreferences {\n  language: Language;\n  theme: 'light' | 'dark';\n  currency: string;\n  notifications: {\n    email: boolean;\n    priceAlerts: boolean;\n    tradingAlerts: boolean;\n    push: boolean;\n  };\n  trading: {\n    defaultAmount: number;\n    riskLevel: 'low' | 'medium' | 'high';\n    autoTrade: boolean;\n  };\n}\n\nexport interface Message {\n  id: string;\n  type: 'info' | 'warning' | 'success' | 'error' | 'trade';\n  title: string;\n  content: string;\n  timestamp: Date;\n  read: boolean;\n  actions?: MessageAction[];\n  metadata?: Record<string, any>;\n}\n\nexport interface MessageAction {\n  label: string;\n  type: 'primary' | 'secondary' | 'danger';\n  action: string;\n  data?: any;\n}\n\nexport interface NotificationSettings {\n  email: boolean;\n  push: boolean;\n  priceAlerts: boolean;\n  tradingAlerts: boolean;\n  securityAlerts: boolean;\n  marketUpdates: boolean;\n  portfolioReports: boolean;\n}\n\nexport interface UserProfile {\n  firstName?: string;\n  lastName?: string;\n  email: string;\n  phone?: string;\n  timezone?: string;\n  avatar?: string;\n  preferences: UserPreferences;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private isUpdatingPreferences = signal<boolean>(false);\n  private isLoadingMessages = signal<boolean>(false);\n\n  readonly isUpdatingPreferences$ = this.isUpdatingPreferences.asReadonly();\n  readonly isLoadingMessages$ = this.isLoadingMessages.asReadonly();\n\n  constructor(private http: HttpClient) {}\n\n\n  // Get user preferences\n  getPreferences(): Observable<UserPreferences> {\n    return this.http.get<UserPreferences>(\n      getEndpointUrl('user', 'preferences')\n    ).pipe(\n      catchError(error => {\n        console.error('Error fetching preferences:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Update user preferences\n  updatePreferences(preferences: Partial<UserPreferences>): Observable<UserPreferences> {\n    this.isUpdatingPreferences.set(true);\n\n    return this.http.put<UserPreferences>(\n      getEndpointUrl('user', 'preferences'),\n      preferences\n    ).pipe(\n      tap(() => this.isUpdatingPreferences.set(false)),\n      catchError(error => {\n        this.isUpdatingPreferences.set(false);\n        console.error('Error updating preferences:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Get user messages\n  getMessages(page = 1, limit = 20, unreadOnly = false): Observable<{ messages: Message[]; total: number; unreadCount: number }> {\n    this.isLoadingMessages.set(true);\n    const params = `?page=${page}&limit=${limit}&unreadOnly=${unreadOnly}`;\n\n    return this.http.get<{ messages: Message[]; total: number; unreadCount: number }>(\n      `${getEndpointUrl('user', 'messages')}${params}`\n    ).pipe(\n      tap(() => this.isLoadingMessages.set(false)),\n      catchError(error => {\n        this.isLoadingMessages.set(false);\n        console.error('Error fetching messages:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Mark message as read\n  markMessageAsRead(messageId: string): Observable<void> {\n    return this.http.patch<void>(\n      `${getEndpointUrl('user', 'messages')}/${messageId}/read`,\n      {}\n    ).pipe(\n      catchError(error => {\n        console.error('Error marking message as read:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Mark all messages as read\n  markAllMessagesAsRead(): Observable<void> {\n    return this.http.patch<void>(\n      `${getEndpointUrl('user', 'messages')}/read-all`,\n      {}\n    ).pipe(\n      catchError(error => {\n        console.error('Error marking all messages as read:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Delete message\n  deleteMessage(messageId: string): Observable<void> {\n    return this.http.delete<void>(\n      `${getEndpointUrl('user', 'messages')}/${messageId}`\n    ).pipe(\n      catchError(error => {\n        console.error('Error deleting message:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Get notification settings\n  getNotificationSettings(): Observable<NotificationSettings> {\n    return this.http.get<NotificationSettings>(\n      getEndpointUrl('user', 'notifications')\n    ).pipe(\n      catchError(error => {\n        console.error('Error fetching notification settings:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Update notification settings\n  updateNotificationSettings(settings: Partial<NotificationSettings>): Observable<NotificationSettings> {\n    return this.http.put<NotificationSettings>(\n      getEndpointUrl('user', 'notifications'),\n      settings\n    ).pipe(\n      catchError(error => {\n        console.error('Error updating notification settings:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Update user profile\n  updateProfile(profileData: Partial<UserProfile>): Observable<UserProfile> {\n    return this.http.put<UserProfile>(\n      getEndpointUrl('user', 'profile'),\n      profileData\n    ).pipe(\n      catchError(error => {\n        console.error('Error updating profile:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Upload avatar\n  uploadAvatar(file: File): Observable<{ avatarUrl: string }> {\n    const formData = new FormData();\n    formData.append('avatar', file);\n\n    return this.http.post<{ avatarUrl: string }>(\n      `${getEndpointUrl('user', 'profile')}/avatar`,\n      formData\n    ).pipe(\n      catchError(error => {\n        console.error('Error uploading avatar:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Execute message action\n  executeMessageAction(messageId: string, action: MessageAction): Observable<any> {\n    return this.http.post<any>(\n      `${getEndpointUrl('user', 'messages')}/${messageId}/action`,\n      { action: action.action, data: action.data }\n    ).pipe(\n      catchError(error => {\n        console.error('Error executing message action:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n}"],"names":["computed","signal","CommonModule","FormsModule","ReactiveFormsModule","Validators","EnvironmentType","EXCHANGE_METADATA","ExchangeType","getExchangeName","take","TradingPlatformInfoModalComponent","ConfirmationModalComponent","ButtonComponent","i0","ɵɵelementStart","ɵɵlistener","ProfileComponent_For_29_Template_ui_button_clicked_0_listener","tab_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","setActiveTab","id","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","activeTab","ɵɵadvance","ɵɵtextInterpolate","icon","translate","label","ɵɵproperty","lang_r5","code","ɵɵtextInterpolate2","flag","name","ɵɵtwoWayListener","ProfileComponent_Conditional_31_Template_select_ngModelChange_11_listener","$event","_r4","ɵɵtwoWayBindingSet","selectedLanguage","ProfileComponent_Conditional_31_Template_select_change_11_listener","changeLanguage","ɵɵrepeaterCreate","ProfileComponent_Conditional_31_For_13_Template","_forTrack1","ProfileComponent_Conditional_31_Template_ui_button_clicked_21_listener","toggleTheme","ProfileComponent_Conditional_31_Template_select_ngModelChange_30_listener","selectedCurrency","ProfileComponent_Conditional_31_Template_select_change_30_listener","changeCurrency","ProfileComponent_Conditional_31_Template_input_ngModelChange_56_listener","emailNotifications","ProfileComponent_Conditional_31_Template_input_change_56_listener","updateNotificationSettings","ɵɵelement","ProfileComponent_Conditional_31_Template_input_ngModelChange_66_listener","priceAlerts","ProfileComponent_Conditional_31_Template_input_change_66_listener","ProfileComponent_Conditional_31_Template_input_ngModelChange_76_listener","tradingAlerts","ProfileComponent_Conditional_31_Template_input_change_76_listener","ɵɵtwoWayProperty","ɵɵrepeater","availableLanguages","ɵɵtextInterpolate1","isDark","ProfileComponent_Conditional_32_Conditional_20_Template_ui_button_clicked_0_listener","_r7","linkGoogleAccount","ProfileComponent_Conditional_32_Template_form_ngSubmit_4_listener","_r6","updateUserInfo","ɵɵtemplate","ProfileComponent_Conditional_32_Conditional_19_Template","ProfileComponent_Conditional_32_Conditional_20_Template","ProfileComponent_Conditional_32_Template_ui_button_clicked_54_listener","resetUserInfo","userInfoForm","ɵɵconditional","tmp_6_0","currentUser","googleLinked","dirty","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_9_Template_input_input_0_listener","_r11","updateEditField","target","value","editFormData","credential_r10","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_12_Template_input_input_1_listener","_r12","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_12_Template_ui_button_clicked_2_listener","toggleApiKeyVisibility","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_12_Conditional_4_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_12_Conditional_5_Template","showApiSecret","revealedCredentials","apiKey","apiKeyPreview","getMaskedValue","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_15_Template_input_input_1_listener","_r13","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_15_Template_ui_button_clicked_2_listener","toggleApiSecretVisibility","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_15_Conditional_4_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_15_Conditional_5_Template","apiSecret","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Template_ui_button_clicked_1_listener","_r14","testEditConnection","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Conditional_2_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Conditional_3_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Template_ui_button_clicked_4_listener","saveCredential","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Conditional_5_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Template_ui_button_clicked_7_listener","cancelEdit","testingConnectionId","savingCredentialId","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_25_Template_ui_button_clicked_1_listener","_r15","startEditCredential","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_25_Template_ui_button_clicked_5_listener","deleteCredential","deletingCredentialId","ProfileComponent_Conditional_33_Conditional_11_For_19_Template_span_click_3_listener","_r9","openPlatformInfoModal","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_9_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_10_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_12_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_13_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_15_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_16_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Template_input_change_19_listener","toggleActive","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_24_Template","ProfileComponent_Conditional_33_Conditional_11_For_19_Conditional_25_Template","editingCredentialId","ɵɵstyleProp","exchange","color","environment","TESTNET","isActive","ProfileComponent_Conditional_33_Conditional_11_For_19_Template","_forTrack0","credentials","ProfileComponent_Conditional_33_Conditional_12_Template_ui_button_clicked_7_listener","_r16","openAddCredentialModal","exchange_r18","MAINNET","ProfileComponent_Conditional_33_Conditional_35_Template_div_click_0_listener","_r17","closeAddCredentialModal","ProfileComponent_Conditional_33_Conditional_35_Template_div_click_1_listener","stopPropagation","ProfileComponent_Conditional_33_Conditional_35_Template_ui_button_clicked_5_listener","ProfileComponent_Conditional_33_Conditional_35_Template_form_ngSubmit_9_listener","saveNewCredential","ProfileComponent_Conditional_33_Conditional_35_For_19_Template","ɵɵrepeaterTrackByIdentity","ProfileComponent_Conditional_33_Conditional_35_Conditional_20_Template","ProfileComponent_Conditional_33_Conditional_35_Conditional_21_Template","ProfileComponent_Conditional_33_Conditional_35_Conditional_34_Template","ProfileComponent_Conditional_33_Conditional_35_Template_ui_button_clicked_42_listener","toggleNewFormApiSecretVisibility","ProfileComponent_Conditional_33_Conditional_35_Conditional_43_Template","ProfileComponent_Conditional_33_Conditional_35_Conditional_44_Template","ProfileComponent_Conditional_33_Conditional_35_Conditional_45_Template","ProfileComponent_Conditional_33_Conditional_35_Template_ui_button_clicked_47_listener","testNewConnection","ProfileComponent_Conditional_33_Conditional_35_Conditional_48_Template","ProfileComponent_Conditional_33_Conditional_35_Conditional_49_Template","ProfileComponent_Conditional_33_Conditional_35_Template_ui_button_clicked_51_listener","newCredentialForm","exchanges","tmp_7_0","get","invalid","touched","isAdmin","tmp_14_0","tmp_19_0","ProfileComponent_Conditional_33_Template_ui_button_clicked_4_listener","_r8","ProfileComponent_Conditional_33_Conditional_10_Template","ProfileComponent_Conditional_33_Conditional_11_Template","ProfileComponent_Conditional_33_Conditional_12_Template","ProfileComponent_Conditional_33_Conditional_35_Template","exchangeCredentialsService","loading","length","showAddCredentialModal","ProfileComponent_Conditional_34_For_8_Conditional_17_For_2_Template_ui_button_clicked_0_listener","action_r21","_r20","executeMessageAction","type","ProfileComponent_Conditional_34_For_8_Conditional_17_For_2_Template","_forTrack2","message_r22","actions","ProfileComponent_Conditional_34_For_8_Conditional_18_Template_ui_button_clicked_0_listener","_r23","markAsRead","ProfileComponent_Conditional_34_For_8_Case_2_Template","ProfileComponent_Conditional_34_For_8_Case_3_Template","ProfileComponent_Conditional_34_For_8_Case_4_Template","ProfileComponent_Conditional_34_For_8_Case_5_Template","ProfileComponent_Conditional_34_For_8_Case_6_Template","ProfileComponent_Conditional_34_For_8_Case_7_Template","ProfileComponent_Conditional_34_For_8_Conditional_17_Template","ProfileComponent_Conditional_34_For_8_Conditional_18_Template","read","ɵɵclassMap","tmp_13_0","title","ɵɵpipeBind2","timestamp","content","ProfileComponent_Conditional_34_Template_ui_button_clicked_4_listener","_r19","markAllAsRead","ProfileComponent_Conditional_34_For_8_Template","ProfileComponent_Conditional_34_Conditional_9_Template","messages","ProfileComponent_Conditional_35_Template_ui_button_clicked_3_listener","_r24","showToastSignal","set","toastType","toastMessage","ProfileComponent_Conditional_36_Template_app_trading_platform_info_modal_closeModal_0_listener","_r25","closePlatformInfoModal","selectedCredentialForModal","ProfileComponent","constructor","fb","authService","translationService","themeService","userService","googleAuthService","exchangeEnvironmentService","router","currentTheme","hasRole","tabs","showPlatformInfoModal","showConfirmModal","confirmModalTitle","confirmModalMessage","confirmModalConfirmText","confirmModalCancelText","confirmModalVariant","confirmModalCallback","Object","values","Date","action","group","firstName","lastName","email","disabled","phone","timezone","required","maxLength","currentLanguage","ngOnInit","tabId","onPlatformsTabActivated","key","params","event","newLanguage","setLanguage","localStorage","setItem","settings","JSON","stringify","valid","console","log","showToast","markAsPristine","reset","changeAvatar","subscribe","next","response","success","message","error","messageId","find","m","forEach","logout","pipe","navigate","loadCredentials","fetchCredentials","creds","err","credential","_originalLabel","editData","revealed","trim","testData","testConnection","result","credentialId","updateRequest","undefined","updateCredential","updated","currentVisibility","updatedVisibility","field","exchangeName","labelPart","showConfirmation","confirmText","variant","onConfirm","e","isChecked","checked","keys","controls","markAsTouched","data","createCredential","newCred","current","newVisibility","fetchDecryptedCredential","getCredentialById","toggleApiSecretVisibilityLegacy","slice","setTimeout","config","cancelText","onConfirmModalConfirm","callback","closeConfirmModal","onConfirmModalCancel","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","TranslationService","i4","ThemeService","i5","UserService","i6","GoogleAuthService","i7","ExchangeCredentialsService","i8","ExchangeEnvironmentService","i9","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_Template_ui_button_clicked_5_listener","ProfileComponent_Template_ui_button_clicked_20_listener","ProfileComponent_For_29_Template","ProfileComponent_Conditional_31_Template","ProfileComponent_Conditional_32_Template","ProfileComponent_Conditional_33_Template","ProfileComponent_Conditional_34_Template","ProfileComponent_Conditional_35_Template","ProfileComponent_Conditional_36_Template","ProfileComponent_Template_ui_confirmation_modal_confirm_37_listener","ProfileComponent_Template_ui_confirmation_modal_cancel_37_listener","ProfileComponent_Template_ui_confirmation_modal_openChange_37_listener","tmp_0_0","avatar","ɵɵsanitizeUrl","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","subscriptionActive","tmp_5_0","role","toLowerCase","i10","DatePipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","NgModel","styles","input","output","inject","Subject","takeUntil","getExchangeLogo","ENVIRONMENT_METADATA","ctx_r0","TradingPlatformInfoModalComponent_Conditional_23_Template_ui_button_clicked_7_listener","_r2","retryLoad","TradingPlatformInfoModalComponent_Conditional_24_For_37_Template_ui_button_clicked_0_listener","tab_r4","_r3","formatCurrency","getAccountField","getPnlColorClass","activePositions","activeOrders","nonZeroBalances","userInfo","TradingPlatformInfoModalComponent_Conditional_24_Conditional_39_Conditional_1_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_39_Conditional_2_Template","accountInfo","balance_r5","unrealisedPnl","TradingPlatformInfoModalComponent_Conditional_24_Conditional_40_Conditional_1_For_2_Conditional_23_Template","coin","usdValue","walletBalance","availableToWithdraw","equity","parseFloat","TradingPlatformInfoModalComponent_Conditional_24_Conditional_40_Conditional_1_For_2_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_40_Conditional_1_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_40_Conditional_2_Template","position_r6","symbol","getSideClass","getPositionSide","getPositionSize","entryPrice","markPrice","leverage","getPositionUnrealizedPnl","calculatePositionProfitPct","TradingPlatformInfoModalComponent_Conditional_24_Conditional_41_Conditional_1_For_22_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_41_Conditional_1_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_41_Conditional_2_Template","order_r7","side","orderType","qty","price","getOrderStatusClass","orderStatus","createdTime","TradingPlatformInfoModalComponent_Conditional_24_Conditional_42_Conditional_1_For_20_Template","_forTrack3","TradingPlatformInfoModalComponent_Conditional_24_Conditional_42_Conditional_1_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_42_Conditional_2_Template","TradingPlatformInfoModalComponent_Conditional_24_For_37_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_39_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_40_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_41_Template","TradingPlatformInfoModalComponent_Conditional_24_Conditional_42_Template","totalEquity","availableBalance","unrealizedPnl","bybitUserService","bingxUserService","destroy$","closeModal","exchangeLogo","exchangeColor","isTestnet","environmentName","environmentColor","info","balance","totalAvailableBalance","availableMargin","totalWalletBalance","cred","BYBIT","calculateUnrealizedPnl","BINGX","getNonZeroBalances","getActivePositions","hasError","accInfo","handleKeyDown","close","loadUserInfo","document","addEventListener","ngOnDestroy","complete","removeEventListener","userInfo$","error$","getUserInfo","refreshUserInfo","emit","handleOverlayClick","handleContentClick","formatNumber","num","isNaN","absNum","Math","abs","toFixed","decimals","formatPercentage","pnl","status","statusClasses","position","pct","positionSide","size","positionAmt","unrealizedProfit","totalMarginBalance","totalInitialMargin","totalPerpUPL","usedMargin","clearError","BybitUserService","BingXUserService","inputs","outputs","TradingPlatformInfoModalComponent_Template","TradingPlatformInfoModalComponent_Template_div_click_0_listener","TradingPlatformInfoModalComponent_Template_div_click_1_listener","TradingPlatformInfoModalComponent_Conditional_13_Template","TradingPlatformInfoModalComponent_Template_ui_button_clicked_15_listener","TradingPlatformInfoModalComponent_Template_ui_button_clicked_18_listener","TradingPlatformInfoModalComponent_Conditional_22_Template","TradingPlatformInfoModalComponent_Conditional_23_Template","TradingPlatformInfoModalComponent_Conditional_24_Template","substring","EventEmitter","DialogComponent","open","confirmVariant","openChange","confirm","cancel","onCancel","onDialogClose","getConfirmText","getCancelText","getTitle","ConfirmationModalComponent_Template","ConfirmationModalComponent_Template_ui_dialog_close_0_listener","ConfirmationModalComponent_Template_ui_button_clicked_5_listener","ConfirmationModalComponent_Template_ui_button_clicked_7_listener","trigger","style","transition","animate","ctx_r1","DialogComponent_div_0_div_2_button_3_Template_button_click_0_listener","onCloseClick","closable","DialogComponent_div_0_div_2_h2_1_Template","ɵɵprojection","DialogComponent_div_0_div_2_button_3_Template","DialogComponent_div_0_Template_div_click_0_listener","onBackdropClick","DialogComponent_div_0_div_2_Template","DialogComponent_div_0_div_6_Template","getDialogClasses","showHeader","showFooter","closeOnBackdrop","previousActiveElement","focusableElements","scrollbarWidth","handleEscape","preventDefault","closeDialog","handleTabKey","calculateScrollbarWidth","addBodyClass","addEscapeListener","saveFocusState","ngAfterViewInit","setInitialFocus","removeBodyClass","removeEscapeListener","restoreFocusState","ngOnChanges","changes","currentTarget","updateFocusableElements","firstElement","lastElement","shiftKey","activeElement","focus","dialog","querySelector","focusableSelectors","join","Array","from","querySelectorAll","filter","el","offsetParent","hasAttribute","tabIndex","outer","createElement","visibility","overflow","body","appendChild","inner","offsetWidth","removeChild","classList","add","paddingRight","remove","classes","push","viewQuery","DialogComponent_Query","DialogComponent_div_0_Template","NgIf","animation","opacity","transform","DialogHeaderComponent","ngContentSelectors","_c3","DialogHeaderComponent_Template","DialogTitleComponent","DialogTitleComponent_Template","DialogContentComponent","DialogContentComponent_Template","DialogFooterComponent","DialogFooterComponent_Template","effect","throwError","BehaviorSubject","catchError","tap","getEndpointUrl","buildUrlWithQuery","http","environmentService","userInfoSubject","loadingSubject","errorSubject","asObservable","loading$","env","currentEnvironment","clearUserInfo","allowSignalWrites","url","errorMessage","handleError","Error","getCurrentUserInfo","isLoading","getCurrentError","calculateTotalValue","positions","reduce","total","getWalletBalance","baseUrl","getTickers","ɵɵinject","HttpClient","factory","ɵfac","providedIn","storedKeysSubject","storedKeys$","list","coins","saveApiKeys","testnet","request","post","hasKeys","maskApiKey","toISOString","getStoredApiKeys","deleteApiKeys","delete","getStoredKeysStatus","hasStoredKeys","storedKeys","accountType","getAssetInfo","toUpperCase","getAllCoinsBalance","HttpHeaders","isLinking","isUnlinking","isLinking$","asReadonly","isUnlinking$","getAuthHeaders","token","authState","loginWithGoogle","handleGoogleCallback","state","googleToken","headers","unlinkGoogleAccount","getGoogleLinkStatus","initializeGoogleSignIn","containerId","window","google","script","src","async","defer","onload","renderGoogleButton","head","accounts","initialize","client_id","googleClientId","handleClientSideGoogleResponse","renderButton","getElementById","theme","text","shape","createGoogleAuthUrl","redirectUri","URLSearchParams","redirect_uri","response_type","scope","access_type","prompt","append","toString","isUpdatingPreferences","isLoadingMessages","isUpdatingPreferences$","isLoadingMessages$","getPreferences","updatePreferences","preferences","put","getMessages","page","limit","unreadOnly","markMessageAsRead","patch","markAllMessagesAsRead","deleteMessage","getNotificationSettings","updateProfile","profileData","uploadAvatar","file","formData","FormData"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}