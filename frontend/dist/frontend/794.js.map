{"version":3,"file":"794.js","mappings":"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","sources":["./src/app/components/trading/funding-rates/funding-rates.component.ts","./src/app/components/trading/funding-rates/funding-rates.component.html","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js"],"sourcesContent":["import { Component, OnInit, OnDestroy, inject, signal, computed, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { interval, Subscription, of } from 'rxjs';\nimport { switchMap, startWith } from 'rxjs/operators';\nimport { AuthService } from '../../../services/auth.service';\nimport { TranslationService } from '../../../services/translation.service';\nimport { CardComponent, CardHeaderComponent, CardTitleComponent, CardContentComponent } from '../../ui/card/card.component';\nimport { ButtonComponent } from '../../ui/button/button.component';\nimport { DropdownComponent, DropdownOption } from '../../ui/dropdown/dropdown.component';\nimport { getEndpointUrl } from '../../../config/app.config';\n\n/**\n * Ticker data interface (Linear/Inverse)\n */\nexport interface TickerData {\n  symbol: string;\n  lastPrice: string;\n  indexPrice: string;\n  markPrice: string;\n  prevPrice24h: string;\n  price24hPcnt: string;\n  highPrice24h: string;\n  lowPrice24h: string;\n  prevPrice1h: string;\n  openInterest: string;\n  openInterestValue: string;\n  turnover24h: string;\n  volume24h: string;\n  fundingRate: string;\n  nextFundingTime: string;\n  predictedDeliveryPrice: string;\n  basisRate: string;\n  deliveryFeeRate: string;\n  deliveryTime: string;\n  ask1Size: string;\n  bid1Price: string;\n  ask1Price: string;\n  bid1Size: string;\n}\n\nexport interface ExchangeCredential {\n  id: string;\n  exchange: string;\n  environment: string;\n  label?: string;\n  isActive: boolean;\n}\n\nexport interface FundingSubscription {\n  subscriptionId: string;\n  symbol: string;\n  fundingRate: number;\n  nextFundingTime: number;\n  positionType: 'long' | 'short';\n  quantity: number;\n  status: string;\n  countdown?: number; // Seconds remaining\n  primaryExchange?: string; // Exchange where position is opened\n  primaryCredentialId?: string; // Credential used for primary exchange\n  hedgeExchange?: string; // Exchange for hedge position\n  hedgeCredentialId?: string; // Credential for hedge exchange\n  leverage?: number; // Leverage multiplier for this subscription\n  margin?: number; // Margin amount in USDT (the actual capital invested by user)\n}\n\nexport interface CompletedDeal {\n  subscriptionId: string;\n  symbol: string;\n  fundingRate: number;\n  positionType: 'long' | 'short';\n  quantity: number;\n  entryPrice: number;\n  hedgeEntryPrice: number;\n  fundingEarned: number;\n  realizedPnl: number;\n  executedAt: string;\n  createdAt: string;\n}\n\nexport interface SubscriptionSettings {\n  defaultQuantity: number;           // Default number of coins to trade\n  leverage: number;                   // Trading leverage (1-100x)\n  autoCancelThreshold: number | null; // Auto-cancel if funding rate falls below this (null = disabled)\n  enableAutoCancel: boolean;          // Enable/disable auto-cancel feature\n  executionDelay: number;             // Seconds before funding time to execute (default: 5)\n  arbitrageSpreadThreshold: number | null; // Minimum spread threshold for arbitrage opportunities (in %)\n}\n\n/**\n * Enhanced Funding Rates Component\n *\n * Displays real-time funding rates with advanced filtering and exchange selection.\n * Features:\n * - Multi-exchange credential selection\n * - Filter by funding rate (min/max)\n * - Filter by next funding time\n * - Auto-refresh every 30 seconds\n * - Sortable columns\n * - Annualized rate calculation\n */\n@Component({\n  selector: 'app-funding-rates',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    CardComponent,\n    CardHeaderComponent,\n    CardTitleComponent,\n    CardContentComponent,\n    ButtonComponent,\n    DropdownComponent\n  ],\n  templateUrl: './funding-rates.component.html',\n  styleUrl: './funding-rates.component.scss'\n})\nexport class FundingRatesComponent implements OnInit, OnDestroy {\n  private http = inject(HttpClient);\n  private authService = inject(AuthService);\n  private translationService = inject(TranslationService);\n  private cdr = inject(ChangeDetectorRef);\n\n  // Expose utilities to template\n  Array = Array;\n  parseFloat = parseFloat;\n\n  // State\n  tickers = signal<TickerData[]>([]);\n  credentials = signal<ExchangeCredential[]>([]);\n  isLoading = signal<boolean>(false);\n  isLoadingCredentials = signal<boolean>(false);\n  error = signal<string | null>(null);\n  selectedCredentialId = signal<string | null>(null);\n  hedgeCredentialId = signal<string | null>(null); // For arbitrage subscriptions\n  autoRefreshEnabled = signal<boolean>(true);\n\n  // Balance and position information for subscription dialog\n  primaryBalance = signal<number | null>(null);\n  hedgeBalance = signal<number | null>(null);\n  isLoadingBalances = signal<boolean>(false);\n\n  // Filter state\n  searchQuery = signal<string>('');\n  positionType = signal<'all' | 'long' | 'short'>('all');\n  minAbsFundingRate = signal<number | null>(null);\n  maxNextFundingHours = signal<number | null>(null);\n\n  // Subscription state\n  subscriptions = signal<Map<string, FundingSubscription>>(new Map());\n  completedDeals = signal<CompletedDeal[]>([]);\n  notifications = signal<string[]>([]);\n  showSubscriptionDialog = signal<boolean>(false);\n  selectedTicker = signal<TickerData | null>(null);\n  positionSizeUsdt = signal<number>(100); // Changed from subscriptionQuantity to USDT-based\n  dialogLeverage = signal<number>(3); // Dialog-specific leverage (separate from global settings)\n  isSubscribing = signal<boolean>(false);\n  editingSubscription = signal<FundingSubscription | null>(null);\n  startingSubscriptionId = signal<string | null>(null); // Track which subscription is being started\n\n  // Row expansion state\n  expandedRows = signal<Set<string>>(new Set());\n\n  // Arbitrage state\n  arbitrageOpportunities = signal<any[]>([]);\n  isLoadingArbitrage = signal<boolean>(false);\n  arbitrageError = signal<string | null>(null);\n  showArbitrageSection = signal<boolean>(true);\n  arbitrageFiltersCollapsed = signal<boolean>(false);\n  arbitrageSearchQuery = signal<string>(''); // Symbol search filter for arbitrage table\n  minSpreadThreshold = signal<number | null>(null); // Minimum spread threshold in percentage\n  showOnlySubscribedArbitrage = signal<boolean>(false); // Filter to show only subscribed pairs\n\n  // Subscription settings\n  subscriptionSettings = signal<SubscriptionSettings>({\n    defaultQuantity: 0.01,\n    leverage: 3,\n    autoCancelThreshold: 0.003,\n    enableAutoCancel: true,\n    executionDelay: 5, // Default: execute 5 seconds before funding\n    arbitrageSpreadThreshold: null // Default: no minimum spread threshold\n  });\n  showSettingsDialog = signal<boolean>(false);\n\n  // Multi-sort state\n  sortColumns = signal<Array<{ column: string; direction: 'asc' | 'desc' }>>([\n    { column: 'fundingRate', direction: 'desc' }\n  ]);\n\n  // UI state\n  isFiltersCollapsed = signal<boolean>(false);\n\n  // Computed\n  credentialOptions = computed(() => {\n    // Only show active credentials\n    return this.credentials()\n      .filter(cred => cred.isActive)\n      .map(cred => ({\n        value: cred.id,\n        label: cred.label || `${cred.exchange} (${cred.environment})`,\n        disabled: false\n      }));\n  });\n\n  selectedCredential = computed(() => {\n    const id = this.selectedCredentialId();\n    return this.credentials().find(c => c.id === id);\n  });\n\n  hedgeCredential = computed(() => {\n    const id = this.hedgeCredentialId();\n    return id ? this.credentials().find(c => c.id === id) : null;\n  });\n\n  filteredTickers = computed(() => {\n    let filtered = [...this.tickers()];\n\n    // Filter out pairs with no funding rate\n    filtered = filtered.filter(t => {\n      const fundingRate = parseFloat(t.fundingRate);\n      return !isNaN(fundingRate) && t.fundingRate !== '' && t.fundingRate !== null && t.fundingRate !== undefined;\n    });\n\n    // Filter out pairs with no price movement (0% change in 24h)\n    filtered = filtered.filter(t => {\n      const priceChange = parseFloat(t.price24hPcnt);\n      return !isNaN(priceChange) && priceChange !== 0;\n    });\n\n    // Filter by search query (symbol name)\n    const search = this.searchQuery().trim().toUpperCase();\n    if (search) {\n      filtered = filtered.filter(t => t.symbol.toUpperCase().includes(search));\n    }\n\n    // Filter by position type (long/short)\n    const posType = this.positionType();\n    if (posType === 'long') {\n      // Long positions: filter for NEGATIVE funding rates (you receive funding)\n      filtered = filtered.filter(t => parseFloat(t.fundingRate) < 0);\n    } else if (posType === 'short') {\n      // Short positions: filter for POSITIVE funding rates (you receive funding)\n      filtered = filtered.filter(t => parseFloat(t.fundingRate) > 0);\n    }\n\n    // Filter by minimum absolute funding rate\n    const minAbsRate = this.minAbsFundingRate();\n    if (minAbsRate !== null) {\n      filtered = filtered.filter(t => Math.abs(parseFloat(t.fundingRate) * 100) >= minAbsRate);\n    }\n\n    // Filter by next funding time\n    const maxHours = this.maxNextFundingHours();\n    if (maxHours !== null) {\n      const now = Date.now();\n      const maxTime = now + (maxHours * 60 * 60 * 1000);\n      filtered = filtered.filter(t => {\n        const fundingTime = parseInt(t.nextFundingTime);\n        return fundingTime <= maxTime;\n      });\n    }\n\n    return filtered;\n  });\n\n  sortedTickers = computed(() => {\n    const tickers = [...this.filteredTickers()];\n    const sortCols = this.sortColumns();\n\n    if (sortCols.length === 0) {\n      return tickers;\n    }\n\n    return tickers.sort((a, b) => {\n      // Apply each sort column in order\n      for (const { column, direction } of sortCols) {\n        let aVal: any = a[column as keyof TickerData];\n        let bVal: any = b[column as keyof TickerData];\n\n        // Parse numbers for numeric columns\n        if (column !== 'symbol') {\n          aVal = parseFloat(aVal) || 0;\n          bVal = parseFloat(bVal) || 0;\n        }\n\n        // Compare values\n        let comparison = 0;\n        if (aVal > bVal) {\n          comparison = 1;\n        } else if (aVal < bVal) {\n          comparison = -1;\n        }\n\n        // If values are different, apply direction and return\n        if (comparison !== 0) {\n          return direction === 'asc' ? comparison : -comparison;\n        }\n\n        // If values are equal, continue to next sort column\n      }\n\n      return 0; // All sort columns equal\n    });\n  });\n\n  /**\n   * Check if a ticker meets the auto-subscribe threshold\n   */\n  meetsAutoSubscribeThreshold = computed(() => {\n    const settings = this.subscriptionSettings();\n    const tickers = this.sortedTickers();\n    const threshold = settings.autoCancelThreshold;\n\n    if (threshold === null || threshold === undefined) {\n      return new Set<string>();\n    }\n\n    const eligibleSymbols = new Set<string>();\n\n    tickers.forEach(ticker => {\n      const fundingRate = parseFloat(ticker.fundingRate);\n      const absFundingRate = Math.abs(fundingRate);\n\n      // Symbol meets threshold if absolute funding rate is >= threshold\n      if (absFundingRate >= Math.abs(threshold)) {\n        eligibleSymbols.add(ticker.symbol);\n      }\n    });\n\n    return eligibleSymbols;\n  });\n\n  /**\n   * Filtered arbitrage opportunities based on symbol search, spread threshold, and subscription status\n   */\n  filteredArbitrageOpportunities = computed(() => {\n    let opportunities = [...this.arbitrageOpportunities()];\n\n    // Filter by symbol search query\n    const search = this.arbitrageSearchQuery().trim().toUpperCase();\n    if (search) {\n      opportunities = opportunities.filter(opp =>\n        opp.symbol.toUpperCase().includes(search)\n      );\n    }\n\n    // Filter by minimum spread threshold\n    const minSpread = this.minSpreadThreshold();\n    if (minSpread !== null && minSpread > 0) {\n      opportunities = opportunities.filter(opp => {\n        const spreadPercent = parseFloat(opp.spread) * 100;\n        return spreadPercent >= minSpread;\n      });\n    }\n\n    // Filter by subscription status (show only subscribed pairs)\n    if (this.showOnlySubscribedArbitrage()) {\n      opportunities = opportunities.filter(opp =>\n        this.hasArbitrageSubscription(opp.symbol)\n      );\n    }\n\n    return opportunities;\n  });\n\n  /**\n   * Set of symbols with active subscriptions for efficient lookup\n   */\n  subscribedSymbols = computed(() => {\n    const subs = Array.from(this.subscriptions().values());\n    const symbols = new Set(subs.map(sub => sub.symbol));\n    console.log('[subscribedSymbols] Computed signal updated. Active symbols:', Array.from(symbols));\n    return symbols;\n  });\n\n  /**\n   * Map of symbol to subscription for quick lookup in arbitrage table\n   */\n  symbolToSubscription = computed(() => {\n    const subs = Array.from(this.subscriptions().values());\n    const map = new Map<string, FundingSubscription>();\n    subs.forEach(sub => {\n      // Normalize symbol format (remove hyphens for comparison)\n      const normalizedSymbol = sub.symbol.replace(/-/g, '');\n      map.set(normalizedSymbol, sub);\n    });\n    console.log('[symbolToSubscription] Map keys:', Array.from(map.keys()));\n    return map;\n  });\n\n  /**\n   * Position validation error - tracks why position calculation might fail\n   */\n  positionValidationError = computed(() => {\n    const ticker = this.selectedTicker();\n    const positionSizeUsdt = this.positionSizeUsdt();\n\n    if (!ticker) {\n      return 'No symbol selected';\n    }\n\n    if (!positionSizeUsdt || positionSizeUsdt <= 0) {\n      return 'Invalid position size';\n    }\n\n    // Check if price data is available\n    const lastPrice = parseFloat(ticker.lastPrice) || 0;\n    const markPrice = parseFloat(ticker.markPrice) || 0;\n\n    if (lastPrice === 0 && markPrice === 0) {\n      return `No price data available for ${ticker.symbol}. This symbol may not be actively traded or may be delisted.`;\n    }\n\n    return null;\n  });\n\n  /**\n   * Position calculation computed signal - automatically recalculates when dependencies change\n   * Uses dialogLeverage for dialog-specific leverage (separate from global settings)\n   */\n  positionCalculation = computed(() => {\n    const ticker = this.selectedTicker();\n    const positionSizeUsdt = this.positionSizeUsdt();\n    const leverage = this.dialogLeverage(); // Use dialog-specific leverage\n\n    console.log('[positionCalculation] Computing with:', {\n      ticker: ticker?.symbol,\n      positionSizeUsdt,\n      leverage,\n      tickerLastPrice: ticker?.lastPrice,\n      tickerMarkPrice: ticker?.markPrice\n    });\n\n    if (!ticker || !positionSizeUsdt || positionSizeUsdt <= 0) {\n      console.log('[positionCalculation] Returning null - missing dependencies');\n      return null;\n    }\n\n    // Use last price or mark price as estimate\n    const estimatedPrice = parseFloat(ticker.lastPrice) || parseFloat(ticker.markPrice) || 0;\n\n    if (estimatedPrice === 0) {\n      console.log('[positionCalculation] Returning null - price is 0');\n      return null;\n    }\n\n    // positionSizeUsdt is the margin (your own money)\n    // With leverage, actual position value = margin * leverage\n    const margin = positionSizeUsdt;\n    const positionValue = margin * leverage;\n\n    // Calculate quantity from position value: quantity = positionValue / price\n    const quantity = positionValue / estimatedPrice;\n\n    // Estimate trading fee (typical taker fee: 0.055% for Bybit, 0.05% for BingX)\n    // For both entry and exit, fee = position value * 0.00055 * 2\n    const estimatedFee = positionValue * 0.00055 * 2; // Entry + Exit\n\n    const result = {\n      symbol: ticker.symbol,\n      quantity,\n      estimatedPrice,\n      positionValue,\n      requiredMargin: margin,\n      estimatedFee,\n      leverage\n    };\n\n    console.log('[positionCalculation] Returning:', result);\n    return result;\n  });\n\n  private refreshSubscription?: Subscription;\n\n  ngOnInit(): void {\n    this.loadSettings();\n    this.loadCredentials();\n    this.loadSubscriptions();\n    this.loadArbitrageOpportunities(); // Load cross-exchange arbitrage data\n    this.startAutoCancelChecker();\n    this.syncSettingsToFilters();\n  }\n\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n    if (this.autoCancelInterval) {\n      clearInterval(this.autoCancelInterval);\n    }\n  }\n\n  translate(key: string): string {\n    return this.translationService.translate(key);\n  }\n\n  loadCredentials(): void {\n    this.isLoadingCredentials.set(true);\n    const token = this.authService.authState().token;\n    if (!token) {\n      this.error.set('Authentication required');\n      this.isLoadingCredentials.set(false);\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get<any>('http://localhost:3000/api/exchange-credentials', { headers })\n      .subscribe({\n        next: (response) => {\n          console.log('Credentials response:', response);\n\n          if (response.success && response.data) {\n            // API returns { credentials: [], totalCount: number }\n            const credentialsArray = response.data.credentials || [];\n            console.log('Credentials array:', credentialsArray);\n\n            // Filter for Bybit and BingX credentials (supported exchanges)\n            // AND only active credentials\n            const supportedCreds = credentialsArray.filter((c: ExchangeCredential) =>\n              (c.exchange === 'BYBIT' || c.exchange === 'BINGX') && c.isActive === true\n            );\n            this.credentials.set(supportedCreds);\n\n            console.log('Active credentials:', supportedCreds);\n\n            // Auto-select first credential (all are active now)\n            const defaultCred = supportedCreds[0];\n            if (defaultCred) {\n              this.selectedCredentialId.set(defaultCred.id);\n              this.loadTickers();\n              this.setupAutoRefresh();\n            } else {\n              console.warn('No active Bybit or BingX credentials found');\n            }\n          }\n          this.isLoadingCredentials.set(false);\n        },\n        error: (err) => {\n          console.error('Failed to load credentials:', err);\n          this.error.set('Failed to load exchange credentials');\n          this.isLoadingCredentials.set(false);\n        }\n      });\n  }\n\n  onCredentialChange(credentialId: string): void {\n    this.selectedCredentialId.set(credentialId);\n    this.loadTickers();\n  }\n\n  setupAutoRefresh(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n\n    if (this.autoRefreshEnabled()) {\n      // Refresh every 3 minutes (180 seconds)\n      this.refreshSubscription = interval(180000)\n        .pipe(\n          startWith(0),\n          switchMap(() => this.loadTickersAsync())\n        )\n        .subscribe();\n    }\n  }\n\n  toggleAutoRefresh(): void {\n    this.autoRefreshEnabled.update(v => !v);\n    this.setupAutoRefresh();\n  }\n\n  loadTickers(): void {\n    this.loadTickersAsync().subscribe();\n  }\n\n  private loadTickersAsync() {\n    const credential = this.selectedCredential();\n    if (!credential) {\n      return of(null);\n    }\n\n    // Prevent concurrent loading - skip if already loading\n    if (this.isLoading()) {\n      console.log('[FundingRates] Skipping refresh - already loading');\n      return of(null);\n    }\n\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    const token = this.authService.authState().token;\n    if (!token) {\n      this.error.set('Authentication required');\n      this.isLoading.set(false);\n      return of(null);\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    const exchange = credential.exchange;\n    const credentialId = credential.id;\n\n    // Determine API endpoint based on exchange\n    // Pass credentialId to use the specific selected credential\n    let apiUrl = '';\n    if (exchange === 'BYBIT') {\n      apiUrl = `http://localhost:3000/api/bybit/tickers?category=linear&credentialId=${credentialId}`;\n    } else if (exchange === 'BINGX') {\n      apiUrl = `http://localhost:3000/api/bingx/tickers?credentialId=${credentialId}`;\n    } else {\n      this.error.set(`Unsupported exchange: ${exchange}`);\n      this.isLoading.set(false);\n      return of(null);\n    }\n\n    return this.http.get<any>(apiUrl, { headers }).pipe(\n      switchMap(async (response) => {\n        try {\n          if (response.success) {\n            // Map BingX ticker format to match Bybit format if needed\n            let tickers = exchange === 'BINGX'\n              ? this.mapBingXTickers(response.data)\n              : response.data;\n\n            // For BingX, fetch funding rates separately and merge\n            if (exchange === 'BINGX') {\n              console.log('[BingX] Starting to merge funding rates...');\n              tickers = await this.mergeBingXFundingRates(tickers, headers, credentialId);\n              console.log('[BingX] Funding rates merged, updating table...');\n            }\n\n            this.tickers.set(tickers);\n            this.isLoading.set(false);\n            console.log(`[FundingRates] Updated ${tickers.length} tickers`);\n          } else {\n            this.error.set(response.message || 'Failed to load tickers');\n            this.isLoading.set(false);\n          }\n          return response;\n        } catch (error: any) {\n          console.error('[FundingRates] Error in loadTickersAsync:', error);\n          this.error.set(error.message || 'Failed to load data');\n          this.isLoading.set(false);\n          return null;\n        }\n      })\n    );\n  }\n\n  /**\n   * Fetch BingX funding rates and merge with ticker data\n   */\n  private async mergeBingXFundingRates(tickers: TickerData[], headers: HttpHeaders, credentialId: string): Promise<TickerData[]> {\n    try {\n      console.log('[BingX] Fetching funding rates for', tickers.length, 'symbols...');\n      const fundingUrl = `${getEndpointUrl('bingx', 'fundingRates')}?credentialId=${credentialId}`;\n      const fundingResponse = await this.http.get<any>(\n        fundingUrl,\n        { headers }\n      ).toPromise();\n\n      console.log('[BingX] Funding rates response:', fundingResponse);\n\n      if (fundingResponse?.success && fundingResponse?.data) {\n        console.log('[BingX] Received', fundingResponse.data.length, 'funding rates');\n        const fundingMap = new Map<string, any>();\n        fundingResponse.data.forEach((fr: any) => {\n          fundingMap.set(fr.symbol, fr);\n        });\n\n        // Merge funding rates into tickers\n        const mergedTickers = tickers.map(ticker => {\n          const funding = fundingMap.get(ticker.symbol);\n          if (funding) {\n            return {\n              ...ticker,\n              fundingRate: funding.fundingRate || '0',\n              nextFundingTime: funding.fundingTime ? funding.fundingTime.toString() : '0'\n            };\n          }\n          return ticker;\n        });\n\n        console.log('[BingX] Merged funding rates into', mergedTickers.length, 'tickers');\n        return mergedTickers;\n      } else {\n        console.warn('[BingX] Invalid funding rates response:', fundingResponse);\n      }\n    } catch (error) {\n      console.error('[BingX] Failed to fetch funding rates:', error);\n    }\n\n    console.log('[BingX] Returning original tickers without funding rates');\n    return tickers;\n  }\n\n  /**\n   * Map BingX ticker format to Bybit ticker format for consistent display\n   */\n  private mapBingXTickers(bingxTickers: any[]): TickerData[] {\n    return bingxTickers.map(ticker => ({\n      symbol: ticker.symbol,\n      lastPrice: ticker.lastPrice || '0',\n      indexPrice: ticker.lastPrice || '0', // BingX doesn't have indexPrice, use lastPrice\n      markPrice: ticker.lastPrice || '0',\n      prevPrice24h: ticker.openPrice || '0',\n      price24hPcnt: ticker.priceChangePercent ? (parseFloat(ticker.priceChangePercent) / 100).toString() : '0',\n      highPrice24h: ticker.highPrice || '0',\n      lowPrice24h: ticker.lowPrice || '0',\n      prevPrice1h: ticker.openPrice || '0', // BingX doesn't have 1h price\n      openInterest: '0', // BingX doesn't provide this in ticker\n      openInterestValue: '0',\n      turnover24h: ticker.quoteVolume || '0',\n      volume24h: ticker.volume || '0',\n      fundingRate: '0', // BingX doesn't include funding rate in tickers - need separate call\n      nextFundingTime: '0',\n      predictedDeliveryPrice: '0',\n      basisRate: '0',\n      deliveryFeeRate: '0',\n      deliveryTime: '0',\n      ask1Size: '0',\n      bid1Price: '0',\n      ask1Price: '0',\n      bid1Size: '0'\n    }));\n  }\n\n  /**\n   * Load arbitrage opportunities from all exchanges\n   */\n  loadArbitrageOpportunities(): void {\n    const token = this.authService.authState().token;\n    if (!token) {\n      this.arbitrageError.set('Authentication required');\n      return;\n    }\n\n    this.isLoadingArbitrage.set(true);\n    this.arbitrageError.set(null);\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    const arbitrageUrl = getEndpointUrl('arbitrage', 'fundingRates');\n\n    this.http.get<any>(arbitrageUrl, { headers }).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.arbitrageOpportunities.set(response.data || []);\n          console.log(`[Arbitrage] Loaded ${response.data?.length || 0} opportunities`);\n          console.log('[Arbitrage] Opportunity symbols:', response.data?.map((o: any) => o.symbol));\n          console.log('[Arbitrage] First opportunity sample:', response.data?.[0]);\n        } else {\n          this.arbitrageError.set(response.message || 'Failed to load arbitrage data');\n        }\n        this.isLoadingArbitrage.set(false);\n      },\n      error: (error) => {\n        console.error('[Arbitrage] Error loading opportunities:', error);\n        this.arbitrageError.set(error.message || 'Failed to load arbitrage data');\n        this.isLoadingArbitrage.set(false);\n      }\n    });\n  }\n\n  toggleArbitrageSection(): void {\n    this.showArbitrageSection.update(v => !v);\n  }\n\n  toggleArbitrageFilters(): void {\n    this.arbitrageFiltersCollapsed.update(v => !v);\n  }\n\n  clearArbitrageFilters(): void {\n    this.arbitrageSearchQuery.set('');\n    this.minSpreadThreshold.set(null);\n    this.showOnlySubscribedArbitrage.set(false);\n  }\n\n  /**\n   * Cancel all active subscriptions\n   * Always fetches fresh subscription data from server and deletes all of them\n   */\n  async cancelAllSubscriptions(): Promise<void> {\n    try {\n      const token = this.authService.authState().token;\n      if (!token) {\n        this.showNotification('Authentication required', 'error');\n        return;\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      // Step 1: Fetch all subscriptions from server (to ensure we have the complete list)\n      const response = await this.http.get<any>(\n        'http://localhost:3000/api/funding-arbitrage/subscribe',\n        { headers }\n      ).toPromise();\n\n      if (!response?.success || !response?.data) {\n        this.showNotification('Failed to fetch subscriptions from server', 'error');\n        return;\n      }\n\n      // Filter only active subscriptions (not completed)\n      const serverSubscriptions = response.data.filter((sub: any) => sub.status !== 'COMPLETED');\n\n      if (serverSubscriptions.length === 0) {\n        this.showNotification('No active subscriptions found on server', 'info');\n        // Still clear local state\n        this.subscriptions.set(new Map());\n        return;\n      }\n\n      // Step 2: Show confirmation dialog with server count\n      const confirmed = confirm(\n        `Are you sure you want to cancel ALL ${serverSubscriptions.length} active subscriptions?\\n\\n` +\n        `This will delete all subscriptions from the database.\\n` +\n        `This action cannot be undone.`\n      );\n\n      if (!confirmed) {\n        return;\n      }\n\n      // Step 3: Delete all subscriptions in parallel\n      console.log('[cancelAllSubscriptions] Deleting', serverSubscriptions.length, 'subscriptions');\n      const cancelPromises = serverSubscriptions.map((sub: any) =>\n        this.http.delete<any>(\n          `http://localhost:3000/api/funding-arbitrage/subscribe?subscriptionId=${sub.subscriptionId}`,\n          { headers }\n        ).toPromise()\n      );\n\n      await Promise.all(cancelPromises);\n\n      // Step 4: Clear local state\n      this.subscriptions.set(new Map());\n\n      this.showNotification(`Successfully cancelled all ${serverSubscriptions.length} subscriptions`, 'success');\n\n      // Reload subscriptions to verify they're gone\n      this.loadSubscriptions();\n    } catch (error: any) {\n      console.error('Error cancelling all subscriptions:', error);\n      this.showNotification('Failed to cancel some subscriptions. Please try again.', 'error');\n\n      // Reload subscriptions to get current state\n      this.loadSubscriptions();\n    }\n  }\n\n  /**\n   * Sort by column with multi-sort support\n   * - Click: Single column sort (replaces all)\n   * - Shift+Click: Add column to multi-sort\n   * - Click same column: Toggle direction\n   */\n  sortBy(column: string, event?: MouseEvent): void {\n    const currentSorts = this.sortColumns();\n    const existingIndex = currentSorts.findIndex(s => s.column === column);\n\n    if (event?.shiftKey) {\n      // Shift+Click: Add to multi-sort or toggle existing\n      if (existingIndex >= 0) {\n        // Toggle direction of existing sort\n        const updated = [...currentSorts];\n        updated[existingIndex] = {\n          column,\n          direction: updated[existingIndex].direction === 'asc' ? 'desc' : 'asc'\n        };\n        this.sortColumns.set(updated);\n      } else {\n        // Add new sort column\n        this.sortColumns.set([...currentSorts, { column, direction: 'desc' }]);\n      }\n    } else {\n      // Regular click: Single column sort\n      if (existingIndex === 0 && currentSorts.length === 1) {\n        // Same column, toggle direction\n        this.sortColumns.set([{\n          column,\n          direction: currentSorts[0].direction === 'asc' ? 'desc' : 'asc'\n        }]);\n      } else {\n        // New column, default to descending\n        this.sortColumns.set([{ column, direction: 'desc' }]);\n      }\n    }\n  }\n\n  /**\n   * Get sort info for a column (for display)\n   */\n  getSortInfo(column: string): { index: number; direction: 'asc' | 'desc' } | null {\n    const sorts = this.sortColumns();\n    const index = sorts.findIndex(s => s.column === column);\n    if (index === -1) return null;\n    return { index, direction: sorts[index].direction };\n  }\n\n  /**\n   * Clear all sorting\n   */\n  clearSort(): void {\n    this.sortColumns.set([{ column: 'fundingRate', direction: 'desc' }]);\n  }\n\n  clearFilters(): void {\n    this.searchQuery.set('');\n    this.positionType.set('all');\n    this.minAbsFundingRate.set(null);\n    this.maxNextFundingHours.set(null);\n  }\n\n  toggleFiltersCollapsed(): void {\n    this.isFiltersCollapsed.update(v => !v);\n  }\n\n  formatPrice(price: string): string {\n    const num = parseFloat(price);\n    if (isNaN(num)) return '-';\n    return num.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 6\n    });\n  }\n\n  formatFundingRate(rate: string): string {\n    const num = parseFloat(rate);\n    if (isNaN(num)) return '-';\n    const percentage = (num * 100).toFixed(4);\n    return `${percentage}%`;\n  }\n\n  formatAnnualizedRate(rate: string): string {\n    const num = parseFloat(rate);\n    if (isNaN(num)) return '-';\n    // Bybit charges funding every 8 hours (3 times per day)\n    const annualized = num * 3 * 365 * 100;\n    return `${annualized.toFixed(2)}%`;\n  }\n\n  formatPercent(value: string): string {\n    const num = parseFloat(value);\n    if (isNaN(num)) return '-';\n    const percentage = (num * 100).toFixed(2);\n    return `${num >= 0 ? '+' : ''}${percentage}%`;\n  }\n\n  formatNextFundingTime(timestamp: string): string {\n    const ts = parseInt(timestamp);\n    if (isNaN(ts)) return '-';\n\n    const date = new Date(ts);\n    const now = new Date();\n    const diff = date.getTime() - now.getTime();\n\n    if (diff < 0) return 'Expired';\n\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n\n    return `${hours}h ${minutes}m`;\n  }\n\n  formatVolume(volume: string): string {\n    const num = parseFloat(volume);\n    if (isNaN(num)) return '-';\n\n    if (num >= 1000000000) {\n      return `$${(num / 1000000000).toFixed(2)}B`;\n    } else if (num >= 1000000) {\n      return `$${(num / 1000000).toFixed(2)}M`;\n    } else if (num >= 1000) {\n      return `$${(num / 1000).toFixed(2)}K`;\n    }\n    return `$${num.toFixed(2)}`;\n  }\n\n  getFundingRateClass(rate: string): string {\n    const num = parseFloat(rate);\n    if (isNaN(num)) return '';\n\n    if (num > 0) return 'funding-positive';\n    if (num < 0) return 'funding-negative';\n    return 'funding-neutral';\n  }\n\n  getPercentClass(value: string): string {\n    const num = parseFloat(value);\n    if (isNaN(num)) return '';\n\n    if (num > 0) return 'percent-positive';\n    if (num < 0) return 'percent-negative';\n    return '';\n  }\n\n  /**\n   * Check if a ticker meets the auto-subscribe threshold\n   */\n  tickerMeetsThreshold(symbol: string): boolean {\n    return this.meetsAutoSubscribeThreshold().has(symbol);\n  }\n\n  /**\n   * Get the recommended position type based on funding rate\n   * Long if funding is negative (you receive funding)\n   * Short if funding is positive (you receive funding)\n   */\n  getRecommendedPositionType(ticker: TickerData): 'long' | 'short' {\n    const fundingRate = parseFloat(ticker.fundingRate);\n    return fundingRate < 0 ? 'long' : 'short';\n  }\n\n  /**\n   * Start subscription execution immediately (manual trigger)\n   */\n  async startSubscriptionNow(subscriptionId: string): Promise<void> {\n    // Prevent duplicate executions\n    if (this.startingSubscriptionId() === subscriptionId) {\n      console.log('Already starting this subscription, ignoring duplicate request');\n      return;\n    }\n\n    try {\n      this.startingSubscriptionId.set(subscriptionId);\n\n      const token = this.authService.authState().token;\n      if (!token) {\n        this.showNotification('Authentication required', 'error');\n        this.startingSubscriptionId.set(null);\n        return;\n      }\n\n      const response = await fetch(`/api/funding-arbitrage/execute/${subscriptionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        this.showNotification('Subscription execution started!', 'success');\n        this.loadSubscriptions();\n      } else {\n        this.showNotification(`Failed to start: ${result.message || result.error}`, 'error');\n      }\n    } catch (error: any) {\n      console.error('Start subscription error:', error);\n      this.showNotification('Failed to start subscription execution', 'error');\n    } finally {\n      this.startingSubscriptionId.set(null);\n    }\n  }\n\n  /**\n   * Open subscription dialog for funding rate\n   */\n  openSubscriptionDialog(ticker: TickerData, event: Event): void {\n    event.stopPropagation();\n    this.selectedTicker.set(ticker);\n    this.dialogLeverage.set(this.subscriptionSettings().leverage); // Initialize with global setting\n    this.showSubscriptionDialog.set(true);\n    this.positionSizeUsdt.set(100); // Default position size in USDT\n  }\n\n  /**\n   * Close subscription dialog\n   */\n  closeSubscriptionDialog(): void {\n    this.showSubscriptionDialog.set(false);\n    this.selectedTicker.set(null);\n    this.editingSubscription.set(null);\n    this.isSubscribing.set(false);\n    this.hedgeCredentialId.set(null); // Clear hedge credential\n    this.dialogLeverage.set(this.subscriptionSettings().leverage); // Reset to global setting\n  }\n\n  /**\n   * Toggle row expansion for inline subscription form\n   */\n  toggleRowExpansion(symbol: string): void {\n    const expanded = new Set(this.expandedRows());\n    if (expanded.has(symbol)) {\n      expanded.delete(symbol);\n    } else {\n      expanded.add(symbol);\n      // Pre-fill quantity if there's an existing subscription\n      const subscription = this.getActiveSubscription(symbol);\n      if (subscription) {\n        // Convert quantity back to USDT based on current price (approximate)\n        const ticker = this.filteredTickers().find(t => t.symbol === symbol);\n        if (ticker) {\n          const price = parseFloat(ticker.lastPrice) || parseFloat(ticker.markPrice) || 0;\n          this.positionSizeUsdt.set(subscription.quantity * price);\n        }\n        this.editingSubscription.set(subscription);\n      }\n    }\n    this.expandedRows.set(expanded);\n  }\n\n  /**\n   * Check if row is expanded\n   */\n  isRowExpanded(symbol: string): boolean {\n    return this.expandedRows().has(symbol);\n  }\n\n  /**\n   * Get active subscription for a symbol\n   */\n  getActiveSubscription(symbol: string): FundingSubscription | undefined {\n    // Find subscription by symbol (subscriptions Map is keyed by subscriptionId)\n    const subs = Array.from(this.subscriptions().values());\n    return subs.find(sub => sub.symbol === symbol);\n  }\n\n  /**\n   * Subscribe from inline form or action button\n   */\n  subscribeFromInlineForm(ticker: TickerData): void {\n    this.selectedTicker.set(ticker);\n    // Use default quantity or the one set in expanded form\n    if (!this.isRowExpanded(ticker.symbol)) {\n      this.positionSizeUsdt.set(100); // Default position size in USDT\n    }\n    this.subscribeFundingRate();\n  }\n\n  /**\n   * Check if subscription can be started now\n   */\n  canStartNow(subscription: FundingSubscription): boolean {\n    // Can start now if waiting and more than 1 minute until funding\n    return subscription.countdown !== undefined && subscription.countdown > 60;\n  }\n\n  /**\n   * Cancel a subscription (wrapper for unsubscribe)\n   */\n  async cancelSubscription(subscriptionId: string): Promise<void> {\n    await this.unsubscribe(subscriptionId, false);\n  }\n\n  /**\n   * Load settings from localStorage\n   */\n  loadSettings(): void {\n    const saved = localStorage.getItem('fundingSubscriptionSettings');\n    if (saved) {\n      try {\n        const settings = JSON.parse(saved) as SubscriptionSettings;\n        this.subscriptionSettings.set(settings);\n        this.positionSizeUsdt.set(100); // Default position size in USDT\n      } catch (error) {\n        console.error('Failed to load settings:', error);\n      }\n    }\n  }\n\n  /**\n   * Save settings to localStorage\n   */\n  saveSettings(): void {\n    const settings = this.subscriptionSettings();\n    localStorage.setItem('fundingSubscriptionSettings', JSON.stringify(settings));\n    // Position size is now in USDT, not affected by settings.defaultQuantity\n    this.syncSettingsToFilters();\n    this.showSettingsDialog.set(false);\n    this.showNotification('Settings saved successfully', 'success');\n  }\n\n  /**\n   * Sync settings to filters (threshold becomes min funding rate filter AND min spread filter)\n   */\n  syncSettingsToFilters(): void {\n    const settings = this.subscriptionSettings();\n    if (settings.autoCancelThreshold !== null && settings.autoCancelThreshold !== undefined) {\n      // Convert from decimal (0.003) to percentage (0.3%) for the filter\n      const thresholdPercent = Math.abs(settings.autoCancelThreshold) * 100;\n      this.minAbsFundingRate.set(thresholdPercent);\n      // Also sync to arbitrage min spread filter\n      this.minSpreadThreshold.set(thresholdPercent);\n    }\n  }\n\n  /**\n   * Open settings dialog\n   */\n  openSettingsDialog(): void {\n    this.showSettingsDialog.set(true);\n  }\n\n  /**\n   * Close settings dialog\n   */\n  closeSettingsDialog(): void {\n    this.showSettingsDialog.set(false);\n    this.loadSettings(); // Reload to reset any unsaved changes\n  }\n\n  /**\n   * Start auto-cancel checker (runs every 30 seconds)\n   */\n  private autoCancelInterval?: any;\n\n  startAutoCancelChecker(): void {\n    this.autoCancelInterval = setInterval(() => {\n      this.checkAutoCancelConditions();\n    }, 30000); // Check every 30 seconds\n  }\n\n  /**\n   * Check if any subscriptions should be auto-cancelled based on funding rate threshold\n   * Only cancels if BOTH conditions are met:\n   * 1. Funding rate is below threshold\n   * 2. Less than 30 seconds remaining before execution\n   */\n  checkAutoCancelConditions(): void {\n    const settings = this.subscriptionSettings();\n    if (!settings.enableAutoCancel || settings.autoCancelThreshold === null) {\n      return; // Auto-cancel is disabled\n    }\n\n    const subscriptionsMap = this.subscriptions();\n    const tickers = this.tickers();\n    const now = Date.now();\n\n    subscriptionsMap.forEach((subscription, subscriptionId) => {\n      // Find current ticker data for this subscription\n      const ticker = tickers.find(t => t.symbol === subscription.symbol);\n      if (!ticker) return;\n\n      const currentFundingRate = parseFloat(ticker.fundingRate);\n      const absFundingRate = Math.abs(currentFundingRate);\n\n      // Calculate time remaining until execution\n      const timeRemaining = subscription.nextFundingTime - now;\n      const secondsRemaining = Math.floor(timeRemaining / 1000);\n\n      // Only cancel if funding rate is below threshold AND less than 30 seconds remaining\n      const isFundingBelowThreshold = absFundingRate < Math.abs(settings.autoCancelThreshold!);\n      const isCloseToExecution = secondsRemaining < 30 && secondsRemaining > 0;\n\n      if (isFundingBelowThreshold && isCloseToExecution) {\n        console.log(`Auto-cancelling ${subscription.symbol}: funding rate ${currentFundingRate} below threshold ${settings.autoCancelThreshold} with ${secondsRemaining}s remaining`);\n        this.unsubscribe(subscriptionId, false); // Cancel with notification\n        this.showNotification(\n          `Auto-cancelled ${subscription.symbol}: funding rate ${(currentFundingRate * 100).toFixed(4)}% below threshold (${secondsRemaining}s remaining)`,\n          'info'\n        );\n      }\n    });\n  }\n\n  /**\n   * Edit an existing subscription\n   */\n  async editSubscription(subscription: FundingSubscription): Promise<void> {\n    console.log('[DEBUG] editSubscription called with:', subscription);\n\n    // If subscription has primary credential, switch to it to load correct ticker data\n    if (subscription.primaryCredentialId) {\n      const currentCredId = this.selectedCredentialId();\n      if (currentCredId !== subscription.primaryCredentialId) {\n        console.log('[DEBUG] Switching credential from', currentCredId, 'to', subscription.primaryCredentialId);\n        this.selectedCredentialId.set(subscription.primaryCredentialId);\n        // Load tickers for this credential\n        await this.loadTickersAsync().toPromise();\n      }\n    }\n\n    // Find the ticker data for this subscription\n    let ticker = this.tickers().find(t => t.symbol === subscription.symbol);\n\n    if (!ticker) {\n      // Try with normalized symbol (remove/add hyphens)\n      const normalizedSymbol = subscription.symbol.includes('-')\n        ? subscription.symbol.replace(/-/g, '')\n        : subscription.symbol.replace('USDT', '-USDT');\n      ticker = this.tickers().find(t => t.symbol === normalizedSymbol);\n    }\n\n    if (!ticker) {\n      console.error('[ERROR] Cannot edit: ticker data not found for symbol:', subscription.symbol);\n      console.log('[DEBUG] Available tickers:', this.tickers().map(t => t.symbol));\n      this.showNotification(`[ERROR] Cannot find ticker data for ${subscription.symbol}. Please ensure the exchange is accessible.`, 'error');\n      return;\n    }\n\n    console.log('[DEBUG] Found ticker:', ticker);\n\n    this.editingSubscription.set(subscription);\n    this.selectedTicker.set(ticker);\n\n    // Set hedge credential if available\n    if (subscription.hedgeCredentialId) {\n      this.hedgeCredentialId.set(subscription.hedgeCredentialId);\n    }\n\n    // Use subscription's leverage if available, otherwise fall back to global setting\n    const leverage = subscription.leverage || this.subscriptionSettings().leverage;\n\n    // Use saved margin if available, otherwise recalculate from quantity\n    const savedMargin = subscription.margin;\n    if (savedMargin && savedMargin > 0) {\n      console.log('[Edit] Loaded saved margin:', savedMargin);\n      this.positionSizeUsdt.set(savedMargin);\n    } else {\n      // Fallback: recalculate from quantity (existing logic)\n      const price = parseFloat(ticker.lastPrice) || parseFloat(ticker.markPrice) || 0;\n      const estimatedMargin = subscription.quantity * price / leverage;\n      console.log('[Edit] Recalculated margin from quantity:', estimatedMargin, 'based on quantity:', subscription.quantity, 'price:', price, 'leverage:', leverage);\n      this.positionSizeUsdt.set(estimatedMargin);\n    }\n\n    // Set leverage for dialog (use subscription's leverage, not global)\n    this.dialogLeverage.set(leverage);\n    console.log('[DEBUG] Set dialogLeverage to:', leverage, '(from subscription)');\n\n    // Open the subscription dialog for editing\n    console.log('[DEBUG] Opening subscription dialog');\n    this.showSubscriptionDialog.set(true);\n\n    // Fetch balances for both primary and hedge exchanges\n    this.fetchBalancesAndCalculatePosition(ticker.symbol);\n  }\n\n  /**\n   * Save edited subscription\n   * Note: Backend doesn't support PATCH/PUT, so we need to cancel and recreate\n   */\n  saveEditedSubscription(): void {\n    const editingSub = this.editingSubscription();\n    if (!editingSub) {\n      return;\n    }\n\n    const positionCalc = this.positionCalculation();\n    if (!positionCalc) {\n      this.showNotification('Unable to calculate position. Please check your input.', 'error');\n      return;\n    }\n    const newQuantity = positionCalc.quantity;\n    if (newQuantity === editingSub.quantity) {\n      this.showNotification('[INFO] No changes to save', 'info');\n      this.cancelEdit();\n      return;\n    }\n\n    // Since backend doesn't have PUT endpoint, we need to cancel and recreate\n    const token = this.authService.authState().token;\n    if (!token) {\n      this.showNotification('[ERROR] Not authenticated', 'error');\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n\n    // Step 1: Cancel existing subscription\n    this.http.delete<any>(\n      `http://localhost:3000/api/funding-arbitrage/subscribe?subscriptionId=${editingSub.subscriptionId}`,\n      { headers }\n    ).subscribe({\n      next: (deleteResponse) => {\n        if (deleteResponse.success) {\n          // Step 2: Create new subscription with updated quantity\n          const credential = this.selectedCredential();\n          if (!credential) {\n            this.showNotification('[ERROR] No exchange credential selected', 'error');\n            return;\n          }\n\n          // Get hedge credential - REQUIRED\n          const hedgeCred = this.hedgeCredential();\n          if (!hedgeCred) {\n            this.showNotification('[ERROR] Hedge credential is required. Please select a hedge exchange.', 'error');\n            return;\n          }\n\n          const subscribeData = {\n            symbol: editingSub.symbol,\n            fundingRate: editingSub.fundingRate,\n            nextFundingTime: editingSub.nextFundingTime,\n            positionType: editingSub.positionType,\n            quantity: newQuantity,\n            primaryCredentialId: credential.id,\n            hedgeExchange: hedgeCred.exchange,\n            hedgeCredentialId: hedgeCred.id,\n            leverage: this.subscriptionSettings().leverage\n          };\n\n          this.http.post<any>(\n            'http://localhost:3000/api/funding-arbitrage/subscribe',\n            subscribeData,\n            { headers }\n          ).subscribe({\n            next: (createResponse) => {\n              if (createResponse.success) {\n                this.showNotification('[SUCCESS] Subscription updated successfully', 'success');\n                this.editingSubscription.set(null);\n                this.loadSubscriptions();\n              } else {\n                this.showNotification(`[ERROR] ${createResponse.message || 'Failed to recreate subscription'}`, 'error');\n              }\n            },\n            error: (error) => {\n              console.error('Recreate subscription error:', error);\n              this.showNotification(`[ERROR] ${error.error?.message || 'Failed to recreate subscription'}`, 'error');\n            }\n          });\n        } else {\n          this.showNotification(`[ERROR] ${deleteResponse.message || 'Failed to cancel old subscription'}`, 'error');\n        }\n      },\n      error: (error) => {\n        console.error('Cancel subscription error:', error);\n        this.showNotification(`[ERROR] ${error.error?.message || 'Failed to cancel old subscription'}`, 'error');\n      }\n    });\n  }\n\n  /**\n   * Cancel editing subscription\n   */\n  cancelEdit(): void {\n    this.editingSubscription.set(null);\n    this.positionSizeUsdt.set(100); // Reset to default USDT amount\n  }\n\n  /**\n   * Load existing subscriptions from the server\n   */\n  loadSubscriptions(): void {\n    const token = this.authService.authState().token;\n    if (!token) {\n      console.log('No auth token, skipping subscription load');\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get<any>('http://localhost:3000/api/funding-arbitrage/subscribe', { headers })\n      .subscribe({\n        next: (response) => {\n          console.log('Loaded subscriptions:', response);\n          if (response.success && response.data) {\n            const subsMap = new Map<string, FundingSubscription>();\n            const completedDealsList: CompletedDeal[] = [];\n\n            response.data.forEach((sub: any) => {\n              // Basic validation - symbol must be a non-empty string ending with USDT\n              const isValidSymbol = sub.symbol &&\n                                   typeof sub.symbol === 'string' &&\n                                   sub.symbol.length > 0 &&\n                                   (sub.symbol.endsWith('USDT') || sub.symbol.endsWith('-USDT'));\n\n              if (!isValidSymbol) {\n                console.warn(`[loadSubscriptions] Skipping subscription with invalid symbol: ${sub.symbol} (ID: ${sub.subscriptionId})`);\n                return; // Skip this subscription\n              }\n\n              // Check if subscription is completed\n              if (sub.status === 'COMPLETED' && sub.entryPrice) {\n                completedDealsList.push({\n                  subscriptionId: sub.subscriptionId,\n                  symbol: sub.symbol,\n                  fundingRate: sub.fundingRate,\n                  positionType: sub.positionType,\n                  quantity: sub.quantity,\n                  entryPrice: sub.entryPrice,\n                  hedgeEntryPrice: sub.hedgeEntryPrice,\n                  fundingEarned: sub.fundingEarned,\n                  realizedPnl: sub.realizedPnl,\n                  executedAt: sub.executedAt,\n                  createdAt: sub.createdAt,\n                });\n              } else if (sub.status !== 'COMPLETED') {\n                // Only add non-completed subscriptions to active list\n                subsMap.set(sub.subscriptionId, sub);\n              }\n            });\n\n            console.log('[loadSubscriptions] Active subscriptions map:', subsMap);\n            console.log('[loadSubscriptions] Active subscription symbols:', Array.from(subsMap.values()).map(s => s.symbol));\n            console.log('[loadSubscriptions] Completed deals:', completedDealsList.length);\n\n            this.subscriptions.set(subsMap);\n            this.completedDeals.set(completedDealsList);\n          }\n        },\n        error: (err) => {\n          console.error('Failed to load subscriptions:', err);\n        }\n      });\n  }\n\n  /**\n   * Subscribe to funding rate arbitrage\n   */\n  async subscribeFundingRate(): Promise<void> {\n    const ticker = this.selectedTicker();\n    const credential = this.selectedCredential();\n    const editingSub = this.editingSubscription();\n\n    if (!ticker || !credential) return;\n\n    this.isSubscribing.set(true);\n\n    try {\n      // If editing, cancel the old subscription first\n      if (editingSub) {\n        await this.unsubscribe(editingSub.subscriptionId, true); // true = silent mode\n      }\n      const token = this.authService.authState().token;\n      if (!token) {\n        this.showNotification('Authentication required', 'error');\n        return;\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      // Determine position type based on funding rate\n      const fundingRate = parseFloat(ticker.fundingRate);\n      const positionType = fundingRate < 0 ? 'long' : 'short';\n\n      // Debug: Log ticker price data\n      console.log(`[Subscribe ${ticker.symbol}] Price data - lastPrice: ${ticker.lastPrice}, markPrice: ${ticker.markPrice}`);\n\n      // Calculate quantity from position size in USDT\n      const positionCalc = this.positionCalculation();\n      if (!positionCalc) {\n        const errorMessage = this.positionValidationError() || 'Unable to calculate position details. Please check your input.';\n        console.log(`[Subscribe ${ticker.symbol}] Validation error: ${errorMessage}`);\n        this.showNotification(errorMessage, 'error');\n        return;\n      }\n\n      // Get hedge credential - REQUIRED (no mock exchange)\n      const hedgeCred = this.hedgeCredential();\n\n      if (!hedgeCred) {\n        this.showNotification('Hedge credential is required for funding arbitrage. Please select a hedge exchange.', 'error');\n        return;\n      }\n\n      const currentMargin = this.positionSizeUsdt();\n\n      const body: any = {\n        symbol: ticker.symbol,\n        fundingRate: fundingRate,\n        nextFundingTime: parseInt(ticker.nextFundingTime),\n        positionType: positionType,\n        quantity: positionCalc.quantity, // Use calculated quantity from USDT amount\n        primaryCredentialId: credential.id,\n        hedgeExchange: hedgeCred.exchange,\n        hedgeCredentialId: hedgeCred.id,\n        executionDelay: this.subscriptionSettings().executionDelay,\n        leverage: this.dialogLeverage(), // Use dialog-specific leverage\n        margin: currentMargin // Current margin/position size in USDT\n      };\n\n      console.log('[Subscribe] Saving margin:', currentMargin);\n      console.log('Creating funding subscription:', body);\n\n      const response = await this.http.post<any>(\n        'http://localhost:3000/api/funding-arbitrage/subscribe',\n        body,\n        { headers }\n      ).toPromise();\n\n      if (response.success) {\n        const subscription: FundingSubscription = {\n          subscriptionId: response.data.subscriptionId,\n          symbol: response.data.symbol,\n          fundingRate: response.data.fundingRate,\n          nextFundingTime: response.data.nextFundingTime,\n          positionType: response.data.positionType,\n          quantity: response.data.quantity,\n          status: response.data.status\n        };\n\n        const subs = this.subscriptions();\n        subs.set(subscription.subscriptionId, subscription);\n        this.subscriptions.set(new Map(subs));\n\n        const message = editingSub\n          ? `✅ Updated subscription for ${ticker.symbol}`\n          : `✅ Subscribed to ${ticker.symbol} funding arbitrage`;\n\n        this.showNotification(message, 'success');\n\n        this.closeSubscriptionDialog();\n        this.startCountdownMonitoring(subscription);\n      }\n    } catch (error: any) {\n      console.error('Error subscribing to funding rate:', error);\n      this.showNotification(\n        `Failed to subscribe: ${error.error?.message || error.message}`,\n        'error'\n      );\n    } finally {\n      this.isSubscribing.set(false);\n    }\n  }\n\n  /**\n   * Start countdown monitoring for a subscription\n   */\n  private startCountdownMonitoring(subscription: FundingSubscription): void {\n    const updateCountdown = () => {\n      const now = Date.now();\n      const timeRemaining = subscription.nextFundingTime - now;\n      const secondsRemaining = Math.floor(timeRemaining / 1000);\n\n      if (secondsRemaining <= 0) {\n        return;\n      }\n\n      // Update countdown\n      const subs = this.subscriptions();\n      const sub = subs.get(subscription.subscriptionId);\n      if (sub) {\n        sub.countdown = secondsRemaining;\n        this.subscriptions.set(new Map(subs));\n        // Manually trigger change detection to avoid ExpressionChangedAfterItHasBeenCheckedError\n        this.cdr.detectChanges();\n      }\n\n      // Notify at key moments\n      if (secondsRemaining === 10) {\n        this.showNotification(`⏰ 10 seconds until funding for ${subscription.symbol}`, 'info');\n      } else if (secondsRemaining === 5) {\n        this.showNotification(`🚀 Opening positions for ${subscription.symbol}...`, 'info');\n      }\n\n      // Schedule next update\n      setTimeout(updateCountdown, 1000);\n    };\n\n    // Start the countdown\n    updateCountdown();\n  }\n\n  /**\n   * Unsubscribe from funding arbitrage\n   */\n  async unsubscribe(subscriptionId: string, silent: boolean = false): Promise<void> {\n    try {\n      const token = this.authService.authState().token;\n      if (!token) return;\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      const response = await this.http.delete<any>(\n        `http://localhost:3000/api/funding-arbitrage/subscribe?subscriptionId=${subscriptionId}`,\n        { headers }\n      ).toPromise();\n\n      // Remove from local state\n      const subs = this.subscriptions();\n      subs.delete(subscriptionId);\n      this.subscriptions.set(new Map(subs));\n\n      if (!silent) {\n        this.showNotification('Subscription canceled', 'info');\n      }\n    } catch (error: any) {\n      console.error('Error unsubscribing:', error);\n\n      // Check if subscription was already removed (404 or \"not found\" error)\n      const isNotFound = error.status === 404 ||\n                         error.error?.message?.includes('not found') ||\n                         error.error?.error?.includes('not found');\n\n      if (isNotFound) {\n        // Subscription already gone from backend, just remove from frontend\n        const subs = this.subscriptions();\n        subs.delete(subscriptionId);\n        this.subscriptions.set(new Map(subs));\n\n        if (!silent) {\n          this.showNotification('Subscription already removed', 'info');\n        }\n      } else {\n        // Real error\n        if (!silent) {\n          this.showNotification('Failed to cancel subscription', 'error');\n        }\n      }\n    }\n  }\n\n  /**\n   * Show notification\n   */\n  private showNotification(message: string, type: 'success' | 'error' | 'info'): void {\n    const notifications = this.notifications();\n    notifications.push(`[${type.toUpperCase()}] ${message}`);\n    this.notifications.set([...notifications]);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      const notifs = this.notifications();\n      const index = notifs.indexOf(`[${type.toUpperCase()}] ${message}`);\n      if (index > -1) {\n        notifs.splice(index, 1);\n        this.notifications.set([...notifs]);\n      }\n    }, 5000);\n  }\n\n  /**\n   * Calculate countdown from funding time\n   */\n  calculateCountdown(nextFundingTime: number): number {\n    const now = Date.now();\n    const timeRemaining = nextFundingTime - now;\n    return Math.max(0, Math.floor(timeRemaining / 1000));\n  }\n\n  /**\n   * Format countdown time\n   */\n  formatCountdown(seconds: number): string {\n    if (seconds <= 0) return 'Executing...';\n\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${secs}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${secs}s`;\n    } else {\n      return `${secs}s`;\n    }\n  }\n\n  /**\n   * Check if a symbol has an active subscription\n   */\n  hasActiveSubscription(symbol: string): boolean {\n    const hasSubscription = this.subscribedSymbols().has(symbol);\n\n    // Debug logging\n    if (hasSubscription) {\n      console.log('[hasActiveSubscription] Symbol has subscription:', symbol);\n    }\n\n    return hasSubscription;\n  }\n\n  /**\n   * Format timestamp for display\n   */\n  formatTimestamp(timestamp: string | Date): string {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n\n    return date.toLocaleString();\n  }\n\n  /**\n   * Get subscription for an arbitrage opportunity by symbol\n   */\n  getArbitrageSubscription(symbol: string): FundingSubscription | undefined {\n    // Normalize symbol (remove hyphens)\n    const normalizedSymbol = symbol.replace(/-/g, '');\n    return this.symbolToSubscription().get(normalizedSymbol);\n  }\n\n  /**\n   * Check if arbitrage opportunity has an active subscription\n   */\n  hasArbitrageSubscription(symbol: string): boolean {\n    return this.getArbitrageSubscription(symbol) !== undefined;\n  }\n\n  /**\n   * Start arbitrage subscription execution (for already subscribed symbols)\n   */\n  async startArbitrageSubscription(opportunity: any): Promise<void> {\n    const subscription = this.getArbitrageSubscription(opportunity.symbol);\n    if (!subscription) {\n      this.showNotification('No active subscription found for this symbol', 'error');\n      return;\n    }\n\n    await this.startSubscriptionNow(subscription.subscriptionId);\n  }\n\n  /**\n   * Edit arbitrage subscription (for already subscribed symbols)\n   */\n  async editArbitrageSubscription(opportunity: any): Promise<void> {\n    const subscription = this.getArbitrageSubscription(opportunity.symbol);\n    if (!subscription) {\n      this.showNotification('No active subscription found for this symbol', 'error');\n      return;\n    }\n\n    console.log('[editArbitrageSubscription] === DEBUGGING MARGIN CALCULATION ===');\n    console.log('[editArbitrageSubscription] Opportunity data:', opportunity);\n    console.log('[editArbitrageSubscription] Subscription data:', subscription);\n\n    // Set hedge credential if available\n    if (subscription.hedgeCredentialId) {\n      this.hedgeCredentialId.set(subscription.hedgeCredentialId);\n      console.log('[editArbitrageSubscription] Set hedge credential:', subscription.hedgeCredentialId);\n    }\n\n    // Switch to primary credential if needed and load tickers to get current price\n    if (subscription.primaryCredentialId) {\n      const currentCredId = this.selectedCredentialId();\n      if (currentCredId !== subscription.primaryCredentialId) {\n        console.log('[editArbitrageSubscription] Switching credential from', currentCredId, 'to', subscription.primaryCredentialId);\n        this.selectedCredentialId.set(subscription.primaryCredentialId);\n        // Load tickers for this credential to get current price\n        await this.loadTickersAsync().toPromise();\n      }\n    }\n\n    // Find the actual ticker data from loaded tickers (has current price)\n    let ticker = this.tickers().find(t => t.symbol === subscription.symbol);\n\n    if (!ticker) {\n      // Try with normalized symbol (BingX uses hyphens, Bybit doesn't)\n      const normalizedSymbol = subscription.symbol.includes('-')\n        ? subscription.symbol.replace(/-/g, '')\n        : subscription.symbol.replace('USDT', '-USDT');\n      ticker = this.tickers().find(t => t.symbol === normalizedSymbol);\n    }\n\n    if (!ticker) {\n      console.error('[editArbitrageSubscription] ERROR: Cannot find ticker data for symbol:', subscription.symbol);\n      console.log('[editArbitrageSubscription] Available tickers:', this.tickers().map(t => t.symbol));\n      this.showNotification(`Cannot find current price for ${subscription.symbol}. Please try again.`, 'error');\n      return;\n    }\n\n    console.log('[editArbitrageSubscription] Found ticker with price:', {\n      symbol: ticker.symbol,\n      lastPrice: ticker.lastPrice,\n      markPrice: ticker.markPrice\n    });\n\n    this.editingSubscription.set(subscription);\n    this.selectedTicker.set(ticker);\n\n    // Use subscription's leverage if available, otherwise fall back to global setting\n    const leverage = subscription.leverage || this.subscriptionSettings().leverage;\n\n    // Use saved margin if available, otherwise recalculate from quantity\n    const savedMargin = subscription.margin;\n    if (savedMargin && savedMargin > 0) {\n      console.log('[editArbitrageSubscription] Loaded saved margin:', savedMargin);\n      this.positionSizeUsdt.set(savedMargin);\n    } else {\n      // Fallback: recalculate from quantity and current price\n      const price = parseFloat(ticker.lastPrice) || parseFloat(ticker.markPrice) || 0;\n      const estimatedMargin = subscription.quantity * price / leverage;\n\n      console.log('[editArbitrageSubscription] Recalculated margin from quantity:', estimatedMargin);\n      console.log('[editArbitrageSubscription] Margin calculation:', {\n        quantity: subscription.quantity,\n        price: price,\n        subscriptionLeverage: subscription.leverage,\n        globalLeverage: this.subscriptionSettings().leverage,\n        usedLeverage: leverage,\n        calculation: `${subscription.quantity} * ${price} / ${leverage}`,\n        estimatedMargin: estimatedMargin\n      });\n\n      this.positionSizeUsdt.set(estimatedMargin);\n    }\n\n    // Set leverage from subscription (use subscription's leverage, not global)\n    this.dialogLeverage.set(leverage);\n    console.log('[editArbitrageSubscription] Set dialogLeverage to:', leverage, '(from subscription)');\n\n    // Open the subscription dialog for editing\n    this.showSubscriptionDialog.set(true);\n\n    // Fetch balances for both exchanges\n    console.log('[editArbitrageSubscription] Calling fetchBalancesAndCalculatePosition...');\n    this.fetchBalancesAndCalculatePosition(ticker.symbol);\n  }\n\n  /**\n   * Cancel arbitrage subscription (for already subscribed symbols)\n   */\n  async cancelArbitrageSubscription(opportunity: any): Promise<void> {\n    const subscription = this.getArbitrageSubscription(opportunity.symbol);\n    if (!subscription) {\n      this.showNotification('No active subscription found for this symbol', 'error');\n      return;\n    }\n\n    // Show confirmation dialog\n    const confirmed = confirm(\n      `Are you sure you want to cancel the subscription for ${opportunity.symbol}?\\n\\n` +\n      `Position: ${subscription.positionType.toUpperCase()}\\n` +\n      `Quantity: ${subscription.quantity}\\n` +\n      `Funding Rate: ${(subscription.fundingRate * 100).toFixed(4)}%`\n    );\n\n    if (!confirmed) {\n      return;\n    }\n\n    await this.cancelSubscription(subscription.subscriptionId);\n  }\n\n  /**\n   * Subscribe to arbitrage opportunity\n   * Opens the subscription dialog for the best long position exchange\n   */\n  subscribeToArbitrage(opportunity: any): void {\n    console.log('[subscribeToArbitrage] Called with opportunity:', opportunity);\n\n    // Find the ticker for the best long exchange (lowest funding rate)\n    const bestLongExchange = opportunity.bestLong.exchange;\n    const bestLongCredentialId = opportunity.bestLong.credentialId;\n    console.log('[subscribeToArbitrage] Best long:', { bestLongExchange, bestLongCredentialId });\n\n    // Find the matching credential\n    const credential = this.credentials().find(c => c.id === bestLongCredentialId);\n    console.log('[subscribeToArbitrage] Found credential:', credential);\n    console.log('[subscribeToArbitrage] All credentials:', this.credentials());\n\n    if (!credential) {\n      console.error('[subscribeToArbitrage] Credential not found for ID:', bestLongCredentialId);\n      this.showNotification('Exchange credential not found for ' + bestLongExchange, 'error');\n      return;\n    }\n\n    // Switch to the best long exchange's credential\n    this.selectedCredentialId.set(bestLongCredentialId);\n    console.log('[subscribeToArbitrage] Switched to credential:', bestLongCredentialId);\n\n    // Set the hedge exchange credential (best short)\n    const bestShortCredentialId = opportunity.bestShort.credentialId;\n    this.hedgeCredentialId.set(bestShortCredentialId);\n    console.log('[subscribeToArbitrage] Set hedge credential:', bestShortCredentialId);\n\n    // Find the ticker data from the exchanges array\n    const exchangeData = opportunity.exchanges.find(\n      (ex: any) => ex.exchange === bestLongExchange && ex.credentialId === bestLongCredentialId\n    );\n    console.log('[subscribeToArbitrage] Found exchange data:', exchangeData);\n    console.log('[subscribeToArbitrage] All exchanges:', opportunity.exchanges);\n\n    if (!exchangeData) {\n      console.error('[subscribeToArbitrage] Exchange data not found');\n      this.showNotification('Ticker data not found for ' + opportunity.symbol, 'error');\n      return;\n    }\n\n    // Try to find the actual ticker from loaded tickers (after switching credential)\n    // We need to load tickers for this credential first\n    this.loadTickers();\n\n    // Wait a moment for tickers to load, then find the ticker\n    setTimeout(() => {\n      let ticker = this.tickers().find(t => t.symbol === opportunity.symbol);\n\n      if (!ticker) {\n        console.warn('[subscribeToArbitrage] Ticker not found in loaded tickers, creating from exchange data');\n        // Fallback: Create a ticker object from exchange data with better price handling\n        ticker = {\n          symbol: opportunity.symbol,\n          fundingRate: opportunity.bestLong.fundingRate,\n          nextFundingTime: exchangeData.nextFundingTime?.toString() || '0',\n          lastPrice: (exchangeData.lastPrice || exchangeData.price || '0').toString(),\n          indexPrice: (exchangeData.indexPrice || exchangeData.lastPrice || exchangeData.price || '0').toString(),\n          markPrice: (exchangeData.markPrice || exchangeData.lastPrice || exchangeData.price || '0').toString(),\n          prevPrice24h: '0',\n          price24hPcnt: '0',\n          highPrice24h: '0',\n          lowPrice24h: '0',\n          prevPrice1h: '0',\n          openInterest: exchangeData.openInterest?.toString() || '0',\n          openInterestValue: '0',\n          turnover24h: '0',\n          volume24h: exchangeData.volume24h?.toString() || '0',\n          predictedDeliveryPrice: '0',\n          basisRate: '0',\n          deliveryFeeRate: '0',\n          deliveryTime: '0',\n          ask1Size: '0',\n          bid1Price: '0',\n          ask1Price: '0',\n          bid1Size: '0'\n        };\n      }\n\n      // Update the ticker's funding rate from arbitrage data\n      ticker = {\n        ...ticker,\n        fundingRate: opportunity.bestLong.fundingRate,\n        nextFundingTime: exchangeData.nextFundingTime?.toString() || ticker.nextFundingTime\n      };\n\n      console.log('[subscribeToArbitrage] Using ticker:', ticker);\n      this.selectedTicker.set(ticker);\n      this.positionSizeUsdt.set(100); // Default position size in USDT\n      this.dialogLeverage.set(this.subscriptionSettings().leverage); // Initialize with global setting\n      this.showSubscriptionDialog.set(true);\n      this.fetchBalancesAndCalculatePosition(ticker.symbol);\n\n      // Show notification about the arbitrage opportunity\n      const spreadPercent = (parseFloat(opportunity.spread) * 100).toFixed(4);\n      const notificationMsg = `Subscribing to ${opportunity.symbol} arbitrage: ${spreadPercent}% spread between ${bestLongExchange} and ${opportunity.bestShort.exchange}`;\n      console.log('[subscribeToArbitrage] Showing notification:', notificationMsg);\n      this.showNotification(notificationMsg, 'info');\n\n      console.log('[subscribeToArbitrage] Completed successfully');\n    }, 500); // Give tickers time to load\n  }\n\n  /**\n   * Fetch balances for primary and hedge exchanges and calculate position details\n   */\n  async fetchBalancesAndCalculatePosition(symbol: string): Promise<void> {\n    const primaryCred = this.selectedCredential();\n    const hedgeCred = this.hedgeCredential();\n    const ticker = this.selectedTicker();\n\n    if (!primaryCred || !ticker) {\n      console.error('[fetchBalances] Missing primary credential or ticker');\n      return;\n    }\n\n    this.isLoadingBalances.set(true);\n\n    try {\n      const token = this.authService.authState().token;\n      if (!token) {\n        this.showNotification('Authentication required', 'error');\n        return;\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      // Fetch primary balance\n      let primaryBalanceUrl: string;\n\n      // Use correct endpoint based on exchange\n      if (primaryCred.exchange === 'BYBIT') {\n        primaryBalanceUrl = `http://localhost:3000/api/bybit/wallet-balance?accountType=UNIFIED&environment=${primaryCred.environment}&credentialId=${primaryCred.id}`;\n      } else if (primaryCred.exchange === 'BINGX') {\n        primaryBalanceUrl = `http://localhost:3000/api/bingx/wallet-balance?environment=${primaryCred.environment}&credentialId=${primaryCred.id}`;\n      } else {\n        console.warn('[fetchBalances] Unsupported primary exchange:', primaryCred.exchange);\n        this.primaryBalance.set(null);\n        return;\n      }\n\n      const primaryBalanceResponse = await this.http.get<any>(primaryBalanceUrl, { headers }).toPromise();\n\n      console.log('[fetchBalances] Primary balance response:', JSON.stringify(primaryBalanceResponse, null, 2));\n\n      if (primaryBalanceResponse?.success && primaryBalanceResponse.data) {\n        let balance = 0;\n\n        // Extract balance based on exchange type\n        if (primaryCred.exchange === 'BYBIT') {\n          console.log('[fetchBalances] Bybit data structure:', primaryBalanceResponse.data);\n          // Bybit returns: data.list[0].totalAvailableBalance\n          const list = primaryBalanceResponse.data.list;\n          if (list && list.length > 0) {\n            balance = parseFloat(list[0].totalAvailableBalance || '0');\n            console.log('[fetchBalances] Bybit balance from list[0]:', balance);\n          } else {\n            console.warn('[fetchBalances] Bybit list is empty or undefined:', list);\n          }\n        } else if (primaryCred.exchange === 'BINGX') {\n          // BingX response: data.balance.availableMargin or data.balance.balance\n          console.log('[fetchBalances] BingX FULL response:', primaryBalanceResponse);\n          console.log('[fetchBalances] BingX data:', primaryBalanceResponse.data);\n          console.log('[fetchBalances] BingX data.balance:', primaryBalanceResponse.data?.balance);\n\n          const bingxBalance = primaryBalanceResponse.data?.balance;\n          if (bingxBalance) {\n            console.log('[fetchBalances] BingX balance object keys:', Object.keys(bingxBalance));\n            console.log('[fetchBalances] BingX balance.availableMargin:', bingxBalance.availableMargin);\n            console.log('[fetchBalances] BingX balance.balance:', bingxBalance.balance);\n            balance = parseFloat(bingxBalance.availableMargin || bingxBalance.balance || '0');\n          } else {\n            console.error('[fetchBalances] BingX balance object is null/undefined');\n          }\n          console.log('[fetchBalances] Final extracted balance:', balance);\n        }\n\n        this.primaryBalance.set(balance);\n        console.log('[fetchBalances] Primary balance set to:', balance, 'for', primaryCred.exchange);\n        this.cdr.detectChanges(); // Trigger change detection to update computed signals in UI\n        console.log('[fetchBalances] Change detection triggered after primary balance update');\n      }\n\n      // Fetch hedge balance if available\n      if (hedgeCred) {\n        let hedgeBalanceUrl: string;\n\n        // Use correct endpoint based on exchange\n        if (hedgeCred.exchange === 'BYBIT') {\n          hedgeBalanceUrl = `http://localhost:3000/api/bybit/wallet-balance?accountType=UNIFIED&environment=${hedgeCred.environment}&credentialId=${hedgeCred.id}`;\n        } else if (hedgeCred.exchange === 'BINGX') {\n          hedgeBalanceUrl = `http://localhost:3000/api/bingx/wallet-balance?environment=${hedgeCred.environment}&credentialId=${hedgeCred.id}`;\n        } else {\n          console.warn('[fetchBalances] Unsupported hedge exchange:', hedgeCred.exchange);\n          this.hedgeBalance.set(null);\n          return;\n        }\n\n        const hedgeBalanceResponse = await this.http.get<any>(hedgeBalanceUrl, { headers }).toPromise();\n\n        console.log('[fetchBalances] Hedge balance response:', JSON.stringify(hedgeBalanceResponse, null, 2));\n\n        if (hedgeBalanceResponse?.success && hedgeBalanceResponse.data) {\n          let balance = 0;\n\n          // Extract balance based on exchange type\n          if (hedgeCred.exchange === 'BYBIT') {\n            // Bybit returns: data.list[0].totalAvailableBalance\n            const list = hedgeBalanceResponse.data.list;\n            if (list && list.length > 0) {\n              balance = parseFloat(list[0].totalAvailableBalance || '0');\n              console.log('[fetchBalances] Hedge Bybit balance from list[0]:', balance);\n            } else {\n              console.warn('[fetchBalances] Hedge Bybit list is empty or undefined:', list);\n            }\n          } else if (hedgeCred.exchange === 'BINGX') {\n            // BingX response: data.balance.availableMargin or data.balance.balance\n            console.log('[fetchBalances] Hedge BingX data structure:', hedgeBalanceResponse.data);\n            const bingxBalance = hedgeBalanceResponse.data.balance;\n            console.log('[fetchBalances] Hedge BingX balance object:', bingxBalance);\n            balance = parseFloat(bingxBalance?.availableMargin || bingxBalance?.balance || '0');\n            console.log('[fetchBalances] Hedge extracted balance:', balance);\n          }\n\n          this.hedgeBalance.set(balance);\n          console.log('[fetchBalances] Hedge balance set to:', balance, 'for', hedgeCred.exchange);\n          this.cdr.detectChanges(); // Trigger change detection to update computed signals in UI\n          console.log('[fetchBalances] Change detection triggered after hedge balance update');\n        }\n      } else {\n        // No hedge credential selected\n        this.hedgeBalance.set(null);\n      }\n\n      // Position calculation is now automatic via computed signal\n\n    } catch (error: any) {\n      console.error('[fetchBalances] Error fetching balances:', error);\n      this.primaryBalance.set(null);\n      this.hedgeBalance.set(null);\n    } finally {\n      this.isLoadingBalances.set(false);\n      this.cdr.detectChanges(); // Trigger final change detection after loading completes\n      console.log('[fetchBalances] Final change detection triggered after loading completion');\n    }\n  }\n\n  /**\n   * Opens the trading pair's futures page on the exchange platform\n   */\n  openTradingPair(symbol: string): void {\n    const credential = this.selectedCredential();\n    if (!credential) return;\n\n    const exchange = credential.exchange;\n    const environment = credential.environment;\n\n    let url = '';\n\n    switch (exchange) {\n      case 'BYBIT':\n        if (environment === 'TESTNET') {\n          // Bybit Testnet futures trading page\n          url = `https://testnet.bybit.com/trade/usdt/${symbol}`;\n        } else {\n          // Bybit Mainnet futures trading page\n          url = `https://www.bybit.com/trade/usdt/${symbol}`;\n        }\n        break;\n\n      case 'BINANCE':\n        if (environment === 'TESTNET') {\n          // Binance Testnet futures\n          url = `https://testnet.binancefuture.com/en/futures/${symbol}`;\n        } else {\n          // Binance Mainnet futures\n          url = `https://www.binance.com/en/futures/${symbol}`;\n        }\n        break;\n\n      case 'OKX':\n        // OKX doesn't have separate testnet URLs for trading\n        url = `https://www.okx.com/trade-swap/${symbol.toLowerCase()}`;\n        break;\n\n      case 'KRAKEN':\n        // Kraken futures\n        url = `https://futures.kraken.com/trade/${symbol}`;\n        break;\n\n      case 'COINBASE':\n        // Coinbase doesn't have futures trading in the same way\n        url = `https://www.coinbase.com/advanced-trade/spot/${symbol}`;\n        break;\n\n      case 'BINGX':\n        if (environment === 'TESTNET') {\n          // BingX Testnet perpetual trading page\n          url = `https://testnet-futures.bingx.com/en/perpetual/${symbol}`;\n        } else {\n          // BingX Mainnet perpetual trading page\n          url = `https://bingx.com/en/perpetual/${symbol}`;\n        }\n        break;\n\n      default:\n        console.warn('Unknown exchange:', exchange);\n        return;\n    }\n\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  }\n\n  /**\n   * Opens the trading pair's futures page on a specific exchange platform\n   * Used by arbitrage table where exchange is passed explicitly\n   */\n  openTradingPairForExchange(symbol: string, exchange: string, environment: string, originalSymbol?: string): void {\n    let url = '';\n\n    // Use originalSymbol for exchanges that need specific formatting (e.g., BingX uses hyphens)\n    const displaySymbol = originalSymbol || symbol;\n\n    switch (exchange) {\n      case 'BYBIT':\n        if (environment === 'TESTNET') {\n          url = `https://testnet.bybit.com/trade/usdt/${symbol}`;\n        } else {\n          url = `https://www.bybit.com/trade/usdt/${symbol}`;\n        }\n        break;\n\n      case 'BINANCE':\n        if (environment === 'TESTNET') {\n          url = `https://testnet.binancefuture.com/en/futures/${symbol}`;\n        } else {\n          url = `https://www.binance.com/en/futures/${symbol}`;\n        }\n        break;\n\n      case 'OKX':\n        url = `https://www.okx.com/trade-swap/${symbol.toLowerCase()}`;\n        break;\n\n      case 'KRAKEN':\n        url = `https://futures.kraken.com/trade/${symbol}`;\n        break;\n\n      case 'COINBASE':\n        url = `https://www.coinbase.com/advanced-trade/spot/${symbol}`;\n        break;\n\n      case 'BINGX':\n        // BingX uses hyphens in their URLs (e.g., DOOD-USDT instead of DOODUSDT)\n        if (environment === 'TESTNET') {\n          url = `https://testnet-futures.bingx.com/en/perpetual/${displaySymbol}`;\n        } else {\n          url = `https://bingx.com/en/perpetual/${displaySymbol}`;\n        }\n        break;\n\n      default:\n        console.warn('Unknown exchange:', exchange);\n        return;\n    }\n\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  }\n}\n","<div class=\"funding-rates-container\">\n  <!-- Header -->\n  <div class=\"funding-rates-header\">\n    <h2 class=\"funding-rates-title\">{{ translate('funding.title') }}</h2>\n    <div class=\"funding-rates-actions\">\n      <!-- Settings -->\n      <ui-button\n        variant=\"ghost\"\n        size=\"small\"\n        (clicked)=\"openSettingsDialog()\"\n        aria-label=\"Subscription settings\">\n        <span>⚙️ {{ translate('fundingRates.filters.settings') }}</span>\n      </ui-button>\n\n      <!-- Clear Sort (only show if multi-sort active) -->\n      @if (sortColumns().length > 1) {\n        <ui-button\n          variant=\"ghost\"\n          size=\"small\"\n          (clicked)=\"clearSort()\"\n          aria-label=\"Clear sort\">\n          <span>{{ translate('fundingRates.actions.clearSort') }}</span>\n        </ui-button>\n      }\n    </div>\n  </div>\n\n  <!-- Arbitrage Opportunities Section -->\n  <ui-card variant=\"outlined\" class=\"arbitrage-card\">\n    <ui-card-header>\n      <div class=\"card-header-content\">\n        <ui-card-title>{{ translate('arbitrage.title') }}</ui-card-title>\n        <div class=\"header-actions\">\n          <!-- Symbol Search Input -->\n          <div class=\"filter-control\">\n            <div class=\"filter-input-wrapper\">\n              <svg class=\"filter-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              <input\n                type=\"text\"\n                class=\"filter-input\"\n                [(ngModel)]=\"arbitrageSearchQuery\"\n                placeholder=\"Search symbol (e.g., BTC-USDT)\"\n                aria-label=\"Filter by symbol\"\n              />\n              @if (arbitrageSearchQuery()) {\n                <button\n                  class=\"filter-clear-btn\"\n                  (click)=\"arbitrageSearchQuery.set('')\"\n                  aria-label=\"Clear symbol filter\"\n                  type=\"button\">\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                </button>\n              }\n            </div>\n          </div>\n\n          <!-- Spread Filter Input -->\n          <div class=\"filter-control\">\n            <div class=\"filter-input-wrapper\">\n              <svg class=\"filter-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M3 6L5 8L9 4M3 12H9M15 12H21M3 18H13M17 18H21\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              <input\n                type=\"number\"\n                class=\"filter-input\"\n                [(ngModel)]=\"minSpreadThreshold\"\n                step=\"0.001\"\n                min=\"0\"\n                placeholder=\"Min spread % (e.g., 0.01)\"\n                aria-label=\"Minimum spread percentage\"\n              />\n              @if (minSpreadThreshold() !== null && minSpreadThreshold()! > 0) {\n                <button\n                  class=\"filter-clear-btn\"\n                  (click)=\"minSpreadThreshold.set(null)\"\n                  aria-label=\"Clear spread filter\"\n                  type=\"button\">\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                </button>\n              }\n              @if (minSpreadThreshold() !== null && minSpreadThreshold()! > 0) {\n                <span class=\"filter-badge\">{{ minSpreadThreshold() }}%+</span>\n              }\n            </div>\n          </div>\n\n          <!-- Show Only Subscribed Checkbox -->\n          <div class=\"filter-control\">\n            <label class=\"checkbox-filter\">\n              <input\n                type=\"checkbox\"\n                [ngModel]=\"showOnlySubscribedArbitrage()\"\n                (ngModelChange)=\"showOnlySubscribedArbitrage.set($event)\"\n                class=\"checkbox-input\"\n                aria-label=\"Show only subscribed pairs\"\n              />\n              <span class=\"checkbox-label\">Only Subscribed</span>\n            </label>\n          </div>\n\n          <!-- Action Buttons -->\n          <div class=\"header-actions-group\">\n            @if (arbitrageSearchQuery() || (minSpreadThreshold() !== null && minSpreadThreshold()! > 0) || showOnlySubscribedArbitrage()) {\n              <ui-button\n                variant=\"ghost\"\n                size=\"small\"\n                (clicked)=\"clearArbitrageFilters()\"\n                aria-label=\"Clear all filters\">\n                <span class=\"button-content\">\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                  Clear\n                </span>\n              </ui-button>\n            }\n\n            <ui-button\n              variant=\"ghost\"\n              size=\"small\"\n              (clicked)=\"cancelAllSubscriptions()\"\n              aria-label=\"Cancel all subscriptions\">\n              <span class=\"button-content\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  <path d=\"M2 17L12 22L22 17\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  <path d=\"M2 12L12 17L22 12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  <path d=\"M4 9L20 9\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                </svg>\n                Cancel All ({{ subscriptions().size }})\n              </span>\n            </ui-button>\n\n            <ui-button\n              variant=\"ghost\"\n              size=\"small\"\n              (clicked)=\"loadArbitrageOpportunities()\"\n              [loading]=\"isLoadingArbitrage()\"\n              aria-label=\"Refresh arbitrage opportunities\">\n              <span class=\"button-content\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M21.5 2V8M21.5 8H15.5M21.5 8L18.5 5C17.3 3.8 15.7 3 14 3C10.1 3 7 6.1 7 10M2.5 22V16M2.5 16H8.5M2.5 16L5.5 19C6.7 20.2 8.3 21 10 21C13.9 21 17 17.9 17 14\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n                {{ translate('funding.refresh') }}\n              </span>\n            </ui-button>\n\n            <button\n              class=\"toggle-section-btn\"\n              (click)=\"toggleArbitrageSection()\"\n              [attr.aria-expanded]=\"!showArbitrageSection()\"\n              [attr.aria-label]=\"showArbitrageSection() ? 'Collapse section' : 'Expand section'\"\n              type=\"button\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [class.rotate-180]=\"!showArbitrageSection()\">\n                <path d=\"M18 15L12 9L6 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ui-card-header>\n    <ui-card-content>\n      @if (!showArbitrageSection()) {\n        <div class=\"collapsed-summary\">\n          <span>{{ translate('arbitrage.collapsed') }} ({{ filteredArbitrageOpportunities().length }} {{ translate('fundingRates.info.pairs') }})</span>\n        </div>\n      } @else {\n        @if (isLoadingArbitrage()) {\n          <div class=\"loading-state\">\n            <span>{{ translate('arbitrage.loading') }}</span>\n          </div>\n        } @else if (arbitrageError()) {\n          <div class=\"error-state\">\n            <p>{{ arbitrageError() }}</p>\n            <ui-button variant=\"primary\" size=\"small\" (clicked)=\"loadArbitrageOpportunities()\">\n              {{ translate('funding.retry') }}\n            </ui-button>\n          </div>\n        } @else if (arbitrageOpportunities().length === 0) {\n          <div class=\"empty-state\">\n            <p>{{ translate('arbitrage.empty') }}</p>\n            <p class=\"help-text\">{{ translate('arbitrage.emptyHelp') }}</p>\n          </div>\n        } @else if (filteredArbitrageOpportunities().length === 0) {\n          <div class=\"empty-state\">\n            <p>{{ translate('arbitrage.noMatches') }}</p>\n            <ui-button variant=\"secondary\" size=\"small\" (clicked)=\"clearArbitrageFilters()\">\n              {{ translate('fundingRates.filters.clearFilters') }}\n            </ui-button>\n          </div>\n        } @else {\n        <!-- Arbitrage Opportunities Table -->\n        <div class=\"arbitrage-table-wrapper\">\n          <table class=\"arbitrage-table\" role=\"table\" aria-label=\"Arbitrage opportunities\">\n            <thead>\n              <tr>\n                <th>{{ translate('arbitrage.table.symbol') }}</th>\n                <th class=\"text-center\">{{ translate('arbitrage.table.exchanges') }}</th>\n                <th class=\"text-right\">{{ translate('arbitrage.table.bestLong') }}</th>\n                <th class=\"text-right\">{{ translate('arbitrage.table.bestShort') }}</th>\n                <th class=\"text-right\">{{ translate('arbitrage.table.nextFunding') }}</th>\n                <th class=\"text-right\">{{ translate('arbitrage.table.spread') }}</th>\n                <th class=\"text-center\">{{ translate('arbitrage.table.opportunity') }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              @for (opportunity of filteredArbitrageOpportunities(); track opportunity.symbol) {\n                <tr [class.opportunity-row]=\"opportunity.arbitrageOpportunity\" [class.has-subscription]=\"hasActiveSubscription(opportunity.symbol)\">\n                  <!-- Symbol -->\n                  <td class=\"symbol-cell\">\n                    <span class=\"symbol-text\">{{ opportunity.symbol }}</span>\n                  </td>\n\n                  <!-- Exchanges -->\n                  <td class=\"exchanges-cell text-center\">\n                    <div class=\"exchanges-badges\">\n                      @for (exchange of opportunity.exchanges; track exchange.exchange + exchange.credentialId) {\n                        <button\n                          class=\"exchange-badge exchange-badge-button\"\n                          [class]=\"'badge-' + exchange.exchange.toLowerCase()\"\n                          (click)=\"openTradingPairForExchange(opportunity.symbol, exchange.exchange, exchange.environment, exchange.originalSymbol)\"\n                          [title]=\"'Open ' + opportunity.symbol + ' on ' + exchange.exchange\">\n                          {{ exchange.exchange }}\n                        </button>\n                      }\n                    </div>\n                  </td>\n\n                  <!-- Best Long (Lowest Rate) -->\n                  <td class=\"text-right\">\n                    <div class=\"position-info\">\n                      <div class=\"exchange-label\">{{ opportunity.bestLong.exchange }}</div>\n                      <div class=\"rate-value\" [class.negative]=\"parseFloat(opportunity.bestLong.fundingRate) < 0\">\n                        {{ (parseFloat(opportunity.bestLong.fundingRate) * 100).toFixed(4) }}%\n                      </div>\n                      <div class=\"environment-tag\">{{ opportunity.bestLong.environment }}</div>\n                    </div>\n                  </td>\n\n                  <!-- Best Short (Highest Rate) -->\n                  <td class=\"text-right\">\n                    <div class=\"position-info\">\n                      <div class=\"exchange-label\">{{ opportunity.bestShort.exchange }}</div>\n                      <div class=\"rate-value\" [class.positive]=\"parseFloat(opportunity.bestShort.fundingRate) > 0\">\n                        {{ (parseFloat(opportunity.bestShort.fundingRate) * 100).toFixed(4) }}%\n                      </div>\n                      <div class=\"environment-tag\">{{ opportunity.bestShort.environment }}</div>\n                    </div>\n                  </td>\n\n                  <!-- Next Funding Time (from both exchanges) -->\n                  <td class=\"text-right\">\n                    <div class=\"funding-time-info\">\n                      @if (opportunity.exchanges && opportunity.exchanges.length > 0) {\n                        <!-- Best Long Exchange Funding Time -->\n                        @for (exchange of opportunity.exchanges; track exchange.exchange + exchange.credentialId) {\n                          @if (exchange.exchange === opportunity.bestLong.exchange && exchange.credentialId === opportunity.bestLong.credentialId) {\n                            <div class=\"funding-time-entry\">\n                              <span class=\"exchange-label-small\">{{ exchange.exchange }}</span>\n                              <span class=\"funding-time-value\" [class.negative]=\"parseFloat(opportunity.bestLong.fundingRate) < 0\">\n                                {{ formatNextFundingTime(exchange.nextFundingTime?.toString() || '0') }}\n                              </span>\n                            </div>\n                          }\n                        }\n                        <!-- Best Short Exchange Funding Time -->\n                        @for (exchange of opportunity.exchanges; track exchange.exchange + exchange.credentialId) {\n                          @if (exchange.exchange === opportunity.bestShort.exchange && exchange.credentialId === opportunity.bestShort.credentialId) {\n                            <div class=\"funding-time-entry\">\n                              <span class=\"exchange-label-small\">{{ exchange.exchange }}</span>\n                              <span class=\"funding-time-value\" [class.positive]=\"parseFloat(opportunity.bestShort.fundingRate) > 0\">\n                                {{ formatNextFundingTime(exchange.nextFundingTime?.toString() || '0') }}\n                              </span>\n                            </div>\n                          }\n                        }\n                      }\n                    </div>\n                  </td>\n\n                  <!-- Spread -->\n                  <td class=\"text-right\">\n                    <div class=\"spread-info\">\n                      <div class=\"spread-value\" [class.high-spread]=\"parseFloat(opportunity.spreadPercent) > 50\">\n                        {{ (parseFloat(opportunity.spread) * 100).toFixed(4) }}%\n                      </div>\n                      <div class=\"spread-percent\">\n                        ({{ opportunity.spreadPercent }}%)\n                      </div>\n                    </div>\n                  </td>\n\n                  <!-- Action Buttons -->\n                  <td class=\"text-center action-cell\">\n                    @if (hasArbitrageSubscription(opportunity.symbol)) {\n                      <!-- Show Start, Edit, Cancel for subscribed symbols -->\n                      <div class=\"subscription-action-buttons\">\n                        <ui-button\n                          variant=\"tertiary\"\n                          size=\"small\"\n                          [iconOnly]=\"true\"\n                          [disabled]=\"startingSubscriptionId() === getArbitrageSubscription(opportunity.symbol)?.subscriptionId\"\n                          (clicked)=\"startArbitrageSubscription(opportunity)\"\n                          className=\"action-btn start-btn\"\n                          title=\"Start Arbitrage\">\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M5 3L19 12L5 21V3Z\" fill=\"currentColor\"/>\n                          </svg>\n                        </ui-button>\n                        <ui-button\n                          variant=\"tertiary\"\n                          size=\"small\"\n                          [iconOnly]=\"true\"\n                          (clicked)=\"editArbitrageSubscription(opportunity)\"\n                          className=\"action-btn edit-btn\"\n                          title=\"Edit Subscription\">\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            <path d=\"M18.5 2.50001C18.8978 2.10219 19.4374 1.87869 20 1.87869C20.5626 1.87869 21.1022 2.10219 21.5 2.50001C21.8978 2.89784 22.1213 3.4374 22.1213 4.00001C22.1213 4.56262 21.8978 5.10219 21.5 5.50001L12 15L8 16L9 12L18.5 2.50001Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                          </svg>\n                        </ui-button>\n                        <ui-button\n                          variant=\"tertiary\"\n                          size=\"small\"\n                          [iconOnly]=\"true\"\n                          (clicked)=\"cancelArbitrageSubscription(opportunity)\"\n                          className=\"action-btn cancel-btn\"\n                          title=\"Cancel Subscription\">\n                          <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                          </svg>\n                        </ui-button>\n                      </div>\n                    } @else {\n                      <!-- Show Subscribe button for non-subscribed symbols -->\n                      @if (opportunity.arbitrageOpportunity) {\n                        <ui-button\n                          variant=\"primary\"\n                          size=\"small\"\n                          (clicked)=\"subscribeToArbitrage(opportunity)\"\n                          className=\"action-btn subscribe-arbitrage-btn\">\n                          <span>⚡ {{ translate('fundingRates.actions.subscribe') }}</span>\n                        </ui-button>\n                      } @else {\n                        <ui-button\n                          variant=\"ghost\"\n                          size=\"small\"\n                          (clicked)=\"subscribeToArbitrage(opportunity)\"\n                          className=\"action-btn subscribe-arbitrage-btn\">\n                          <span>{{ translate('fundingRates.actions.subscribe') }}</span>\n                        </ui-button>\n                      }\n                    }\n                  </td>\n                </tr>\n              }\n            </tbody>\n          </table>\n        </div>\n        }\n      }\n    </ui-card-content>\n  </ui-card>\n\n  <!-- Active Subscriptions Panel -->\n  @if (subscriptions().size > 0) {\n    <ui-card variant=\"elevated\" class=\"subscriptions-card\">\n      <ui-card-header>\n        <ui-card-title>{{ translate('fundingRates.subscriptions.title') }}</ui-card-title>\n      </ui-card-header>\n      <ui-card-content>\n        <div class=\"subscriptions-list\">\n          @for (sub of Array.from(subscriptions().values()); track sub.subscriptionId) {\n            <div class=\"subscription-item\">\n              <div class=\"subscription-info\">\n                <div class=\"subscription-symbol\">{{ sub.symbol }}</div>\n                <div class=\"subscription-details\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.subscriptions.type') }}:</span>\n                  <span class=\"detail-value\" [class.positive]=\"sub.positionType === 'short'\" [class.negative]=\"sub.positionType === 'long'\">\n                    {{ sub.positionType.toUpperCase() }}\n                  </span>\n                  <span class=\"detail-separator\">•</span>\n                  <span class=\"detail-label\">{{ translate('fundingRates.subscriptions.rate') }}:</span>\n                  <span class=\"detail-value\">{{ formatFundingRate(sub.fundingRate.toString()) }}</span>\n                  <span class=\"detail-separator\">•</span>\n                  <span class=\"detail-label\">{{ translate('fundingRates.subscriptions.quantity') }}:</span>\n                  <span class=\"detail-value\">{{ sub.quantity }}</span>\n                </div>\n              </div>\n              <div class=\"subscription-countdown\">\n                @if (sub.countdown !== undefined) {\n                  <div class=\"countdown-display\" [class.urgent]=\"sub.countdown && sub.countdown <= 10\">\n                    {{ formatCountdown(sub.countdown) }}\n                  </div>\n                } @else {\n                  <div class=\"countdown-display\" [class.urgent]=\"calculateCountdown(sub.nextFundingTime) <= 10\">\n                    {{ formatCountdown(calculateCountdown(sub.nextFundingTime)) }}\n                  </div>\n                }\n              </div>\n              <div class=\"subscription-actions\">\n                <ui-button\n                  variant=\"primary\"\n                  size=\"small\"\n                  (clicked)=\"startSubscriptionNow(sub.subscriptionId)\">\n                  {{ translate('fundingRates.actions.startNow') }}\n                </ui-button>\n                <ui-button\n                  variant=\"ghost\"\n                  size=\"small\"\n                  (clicked)=\"editSubscription(sub)\">\n                  {{ translate('fundingRates.actions.edit') }}\n                </ui-button>\n                <ui-button\n                  variant=\"ghost\"\n                  size=\"small\"\n                  (clicked)=\"unsubscribe(sub.subscriptionId)\">\n                  {{ translate('fundingRates.actions.cancel') }}\n                </ui-button>\n              </div>\n            </div>\n          }\n        </div>\n      </ui-card-content>\n    </ui-card>\n  }\n\n  <!-- Completed Deals Panel -->\n  @if (completedDeals().length > 0) {\n    <ui-card variant=\"elevated\" class=\"deals-card\">\n      <ui-card-header>\n        <ui-card-title>{{ translate('fundingRates.deals.title') }}</ui-card-title>\n      </ui-card-header>\n      <ui-card-content>\n        <div class=\"deals-list\">\n          @for (deal of completedDeals(); track deal.subscriptionId) {\n            <div class=\"deal-item\">\n              <div class=\"deal-header\">\n                <div class=\"deal-symbol\">{{ deal.symbol }}</div>\n                <div class=\"deal-type\" [class.positive]=\"deal.positionType === 'short'\" [class.negative]=\"deal.positionType === 'long'\">\n                  {{ deal.positionType.toUpperCase() }}\n                </div>\n              </div>\n              <div class=\"deal-details\">\n                <div class=\"deal-row\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.fundingRate') }}:</span>\n                  <span class=\"detail-value\">{{ formatFundingRate(deal.fundingRate.toString()) }}</span>\n                </div>\n                <div class=\"deal-row\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.quantity') }}:</span>\n                  <span class=\"detail-value\">{{ deal.quantity }}</span>\n                </div>\n                <div class=\"deal-row\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.entryPrice') }}:</span>\n                  <span class=\"detail-value\">${{ deal.entryPrice.toFixed(2) }}</span>\n                </div>\n                <div class=\"deal-row\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.hedgeEntry') }}:</span>\n                  <span class=\"detail-value\">${{ deal.hedgeEntryPrice.toFixed(2) }}</span>\n                </div>\n                <div class=\"deal-row highlight\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.fundingEarned') }}:</span>\n                  <span class=\"detail-value\" [class.positive]=\"deal.fundingEarned > 0\" [class.negative]=\"deal.fundingEarned < 0\">\n                    ${{ deal.fundingEarned.toFixed(4) }}\n                  </span>\n                </div>\n                <div class=\"deal-row highlight\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.realizedPnl') }}:</span>\n                  <span class=\"detail-value\" [class.positive]=\"deal.realizedPnl > 0\" [class.negative]=\"deal.realizedPnl < 0\">\n                    ${{ deal.realizedPnl.toFixed(4) }}\n                  </span>\n                </div>\n                <div class=\"deal-row\">\n                  <span class=\"detail-label\">{{ translate('fundingRates.deals.executed') }}:</span>\n                  <span class=\"detail-value\">{{ formatTimestamp(deal.executedAt) }}</span>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </ui-card-content>\n    </ui-card>\n  }\n\n  <!-- Subscription Dialog -->\n  @if (showSubscriptionDialog() && selectedTicker()) {\n    <div class=\"dialog-overlay\" (click)=\"closeSubscriptionDialog()\">\n      <div class=\"dialog-content\" (click)=\"$event.stopPropagation()\">\n        <div class=\"dialog-header\">\n          <h3>{{ editingSubscription() ? 'Edit Subscription' : translate('fundingRates.dialog.title') }}</h3>\n          <button class=\"dialog-close\" (click)=\"closeSubscriptionDialog()\">×</button>\n        </div>\n\n        <div class=\"dialog-body\">\n          <div class=\"dialog-info\">\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ translate('fundingRates.dialog.symbol') }}:</span>\n              <span class=\"info-value\">{{ selectedTicker()!.symbol }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ translate('fundingRates.dialog.fundingRate') }}:</span>\n              <span class=\"info-value\" [ngClass]=\"getFundingRateClass(selectedTicker()!.fundingRate)\">\n                {{ formatFundingRate(selectedTicker()!.fundingRate) }}\n              </span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ translate('fundingRates.dialog.nextFunding') }}:</span>\n              <span class=\"info-value\">{{ formatNextFundingTime(selectedTicker()!.nextFundingTime) }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ translate('fundingRates.dialog.positionType') }}:</span>\n              <span class=\"info-value\">\n                {{ parseFloat(selectedTicker()!.fundingRate) < 0 ? translate('fundingRates.dialog.longReceive') : translate('fundingRates.dialog.shortReceive') }}\n              </span>\n            </div>\n          </div>\n\n          <!-- Positions to Open -->\n          <div class=\"positions-info\">\n            <h4 class=\"positions-title\">{{ translate('fundingRates.dialog.positionsToOpen') }}</h4>\n            <div class=\"positions-grid\">\n              <div class=\"position-item primary-position\">\n                <div class=\"position-label\">{{ translate('fundingRates.dialog.primaryPosition') }}</div>\n                <div class=\"position-type\" [class.long-position]=\"parseFloat(selectedTicker()!.fundingRate) < 0\" [class.short-position]=\"parseFloat(selectedTicker()!.fundingRate) >= 0\">\n                  {{ parseFloat(selectedTicker()!.fundingRate) < 0 ? 'LONG' : 'SHORT' }}\n                </div>\n                <div class=\"position-amount\">\n                  ${{ (positionSizeUsdt() || 0) * dialogLeverage() }} USDT\n                </div>\n                <div class=\"position-margin\">\n                  Margin: ${{ positionSizeUsdt() || 0 }} USDT\n                </div>\n                <div class=\"position-explanation\">\n                  {{ parseFloat(selectedTicker()!.fundingRate) < 0 ? 'Receive funding payments' : 'Pay funding to receive later' }}\n                </div>\n              </div>\n              <div class=\"position-arrow\">⇄</div>\n              <div class=\"position-item hedge-position\">\n                <div class=\"position-label\">{{ translate('fundingRates.dialog.hedgePosition') }}</div>\n                <div class=\"position-type\" [class.long-position]=\"parseFloat(selectedTicker()!.fundingRate) >= 0\" [class.short-position]=\"parseFloat(selectedTicker()!.fundingRate) < 0\">\n                  {{ parseFloat(selectedTicker()!.fundingRate) < 0 ? 'SHORT' : 'LONG' }}\n                </div>\n                <div class=\"position-amount\">\n                  ${{ (positionSizeUsdt() || 0) * dialogLeverage() }} USDT\n                </div>\n                <div class=\"position-margin\">\n                  Margin: ${{ positionSizeUsdt() || 0 }} USDT\n                </div>\n                <div class=\"position-explanation\">\n                  Hedge position (opposite direction)\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Balance Information -->\n          @if (isLoadingBalances()) {\n            <div class=\"balance-info loading\">\n              <p>{{ translate('fundingRates.dialog.loadingBalances') || 'Loading balances...' }}</p>\n            </div>\n          } @else {\n            <div class=\"balance-info\">\n              <div class=\"balance-row\">\n                <span class=\"balance-label\">{{ translate('fundingRates.dialog.primary') }} {{ translate('fundingRates.dialog.balance') || 'Balance' }}:</span>\n                <span class=\"balance-value\" [class.low-balance]=\"primaryBalance() !== null && primaryBalance()! < 10\">\n                  @if (primaryBalance() !== null) {\n                    ${{ primaryBalance()!.toFixed(2) }} USDT\n                  } @else {\n                    {{ translate('fundingRates.dialog.unavailable') || 'N/A' }}\n                  }\n                </span>\n              </div>\n              <div class=\"balance-row\">\n                <span class=\"balance-label\">{{ translate('fundingRates.dialog.hedge') }} {{ translate('fundingRates.dialog.balance') || 'Balance' }}:</span>\n                <span class=\"balance-value\" [class.low-balance]=\"hedgeBalance() !== null && hedgeBalance()! < 10 && hedgeBalance()! !== 999999\">\n                  @if (hedgeBalance() !== null) {\n                    @if (hedgeBalance() === 999999) {\n                      ∞ ({{ translate('fundingRates.dialog.mockExchange') }})\n                    } @else {\n                      ${{ hedgeBalance()!.toFixed(2) }} USDT\n                    }\n                  } @else {\n                    {{ translate('fundingRates.dialog.unavailable') || 'N/A' }}\n                  }\n                </span>\n              </div>\n            </div>\n          }\n\n          <div class=\"dialog-form\">\n            <div class=\"form-group\">\n              <label class=\"form-label\">Margin (USDT)</label>\n              <input\n                type=\"number\"\n                class=\"form-input\"\n                [ngModel]=\"positionSizeUsdt()\"\n                (ngModelChange)=\"positionSizeUsdt.set($event)\"\n                step=\"10\"\n                min=\"10\"\n                placeholder=\"e.g., 100\"\n              />\n              <p class=\"form-hint\">Your collateral amount. With {{ dialogLeverage() }}x leverage, this will open a position worth ${{ (positionSizeUsdt() || 0) * dialogLeverage() }} USDT</p>\n            </div>\n\n            <div class=\"form-group\">\n              <label class=\"form-label\">{{ translate('fundingRates.settings.leverage') }}</label>\n              <input\n                type=\"number\"\n                class=\"form-input\"\n                [ngModel]=\"dialogLeverage()\"\n                (ngModelChange)=\"dialogLeverage.set($event)\"\n                min=\"1\"\n                max=\"125\"\n                step=\"1\"\n                placeholder=\"3\"\n              />\n              <p class=\"form-hint\">Leverage for this position (1-125x). With {{ dialogLeverage() }}x leverage, ${{ positionSizeUsdt() || 0 }} margin opens a ${{ (positionSizeUsdt() || 0) * dialogLeverage() }} USDT position.</p>\n            </div>\n          </div>\n\n          <!-- Position Calculation -->\n          @if (positionCalculation()) {\n            <div class=\"position-calculation\">\n              <h4 class=\"calculation-title\">Position Details</h4>\n              <div class=\"calculation-grid\">\n                <div class=\"calc-row\">\n                  <span class=\"calc-label\">Coin Quantity:</span>\n                  <span class=\"calc-value\">{{ positionCalculation()!.quantity.toFixed(6) }} {{ positionCalculation()!.symbol.replace('USDT', '') }}</span>\n                </div>\n                <div class=\"calc-row\">\n                  <span class=\"calc-label\">Estimated Price:</span>\n                  <span class=\"calc-value\">${{ positionCalculation()!.estimatedPrice.toFixed(2) }}</span>\n                </div>\n                <div class=\"calc-row\">\n                  <span class=\"calc-label\">Position Value:</span>\n                  <span class=\"calc-value\">${{ positionCalculation()!.positionValue.toFixed(2) }} USDT</span>\n                </div>\n                <div class=\"calc-row\">\n                  <span class=\"calc-label\">Leverage:</span>\n                  <span class=\"calc-value\">{{ positionCalculation()!.leverage }}x</span>\n                </div>\n                <div class=\"calc-row important\">\n                  <span class=\"calc-label\">Required Margin (per exchange):</span>\n                  <span class=\"calc-value\">${{ positionCalculation()!.requiredMargin.toFixed(2) }} USDT</span>\n                </div>\n                <div class=\"calc-row\">\n                  <span class=\"calc-label\">Est. Fees (Entry+Exit):</span>\n                  <span class=\"calc-value\">${{ positionCalculation()!.estimatedFee.toFixed(2) }} USDT</span>\n                </div>\n              </div>\n              <p class=\"calculation-note\">\n                💡 Each exchange needs <strong>${{ positionCalculation()!.requiredMargin.toFixed(2) }} USDT</strong> margin\n              </p>\n            </div>\n          }\n\n          <div class=\"dialog-warning\">\n            <p>⚠️ {{ translate('fundingRates.dialog.warning') }}</p>\n            <ul>\n              <li>{{ translate('fundingRates.dialog.primary') }}: {{ selectedCredential()?.exchange }} {{ selectedCredential()?.environment }}</li>\n              <li>{{ translate('fundingRates.dialog.hedge') }}:\n                @if (hedgeCredential()) {\n                  {{ hedgeCredential()!.exchange }} {{ hedgeCredential()!.environment }}\n                } @else {\n                  {{ translate('fundingRates.dialog.mockExchange') }}\n                }\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"dialog-footer\">\n          <ui-button variant=\"ghost\" (clicked)=\"closeSubscriptionDialog()\">\n            {{ translate('fundingRates.actions.cancel') }}\n          </ui-button>\n          <ui-button\n            variant=\"primary\"\n            (clicked)=\"subscribeFundingRate()\"\n            [loading]=\"isSubscribing()\">\n            {{ editingSubscription() ? 'Save Changes' : translate('fundingRates.actions.subscribe') }}\n          </ui-button>\n        </div>\n      </div>\n    </div>\n  }\n\n  <!-- Toast Notifications -->\n  @if (notifications().length > 0) {\n    <div class=\"notifications-container\">\n      @for (notification of notifications(); track notification) {\n        <div class=\"notification-toast\"\n             [class.success]=\"notification.includes('[SUCCESS]')\"\n             [class.error]=\"notification.includes('[ERROR]')\"\n             [class.info]=\"notification.includes('[INFO]')\">\n          {{ notification.replace('[SUCCESS] ', '').replace('[ERROR] ', '').replace('[INFO] ', '') }}\n        </div>\n      }\n    </div>\n  }\n\n  <!-- Settings Dialog -->\n  @if (showSettingsDialog()) {\n    <div class=\"settings-overlay\" (click)=\"closeSettingsDialog()\">\n      <div class=\"settings-modal\" (click)=\"$event.stopPropagation()\">\n        <!-- Header with Gradient -->\n        <div class=\"settings-header\">\n          <div class=\"settings-header-content\">\n            <div class=\"settings-icon\">\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M19.4 15C19.2669 15.3016 19.2272 15.6362 19.286 15.9606C19.3448 16.285 19.4995 16.5843 19.73 16.82L19.79 16.88C19.976 17.0657 20.1235 17.2863 20.2241 17.5291C20.3248 17.7719 20.3766 18.0322 20.3766 18.295C20.3766 18.5578 20.3248 18.8181 20.2241 19.0609C20.1235 19.3037 19.976 19.5243 19.79 19.71C19.6043 19.896 19.3837 20.0435 19.1409 20.1441C18.8981 20.2448 18.6378 20.2966 18.375 20.2966C18.1122 20.2966 17.8519 20.2448 17.6091 20.1441C17.3663 20.0435 17.1457 19.896 16.96 19.71L16.9 19.65C16.6643 19.4195 16.365 19.2648 16.0406 19.206C15.7162 19.1472 15.3816 19.1869 15.08 19.32C14.7842 19.4468 14.532 19.6572 14.3543 19.9255C14.1766 20.1938 14.0813 20.5082 14.08 20.83V21C14.08 21.5304 13.8693 22.0391 13.4942 22.4142C13.1191 22.7893 12.6104 23 12.08 23C11.5496 23 11.0409 22.7893 10.6658 22.4142C10.2907 22.0391 10.08 21.5304 10.08 21V20.91C10.0723 20.579 9.96512 20.258 9.77251 19.9887C9.5799 19.7194 9.31074 19.5143 9 19.4C8.69838 19.2669 8.36381 19.2272 8.03941 19.286C7.71502 19.3448 7.41568 19.4995 7.18 19.73L7.12 19.79C6.93425 19.976 6.71368 20.1235 6.47088 20.2241C6.22808 20.3248 5.96783 20.3766 5.705 20.3766C5.44217 20.3766 5.18192 20.3248 4.93912 20.2241C4.69632 20.1235 4.47575 19.976 4.29 19.79C4.10405 19.6043 3.95653 19.3837 3.85588 19.1409C3.75523 18.8981 3.70343 18.6378 3.70343 18.375C3.70343 18.1122 3.75523 17.8519 3.85588 17.6091C3.95653 17.3663 4.10405 17.1457 4.29 16.96L4.35 16.9C4.58054 16.6643 4.73519 16.365 4.794 16.0406C4.85282 15.7162 4.81312 15.3816 4.68 15.08C4.55324 14.7842 4.34276 14.532 4.07447 14.3543C3.80618 14.1766 3.49179 14.0813 3.17 14.08H3C2.46957 14.08 1.96086 13.8693 1.58579 13.4942C1.21071 13.1191 1 12.6104 1 12.08C1 11.5496 1.21071 11.0409 1.58579 10.6658C1.96086 10.2907 2.46957 10.08 3 10.08H3.09C3.42099 10.0723 3.742 9.96512 4.0113 9.77251C4.28059 9.5799 4.48572 9.31074 4.6 9C4.73312 8.69838 4.77282 8.36381 4.714 8.03941C4.65519 7.71502 4.50054 7.41568 4.27 7.18L4.21 7.12C4.02405 6.93425 3.87653 6.71368 3.77588 6.47088C3.67523 6.22808 3.62343 5.96783 3.62343 5.705C3.62343 5.44217 3.67523 5.18192 3.77588 4.93912C3.87653 4.69632 4.02405 4.47575 4.21 4.29C4.39575 4.10405 4.61632 3.95653 4.85912 3.85588C5.10192 3.75523 5.36217 3.70343 5.625 3.70343C5.88783 3.70343 6.14808 3.75523 6.39088 3.85588C6.63368 3.95653 6.85425 4.10405 7.04 4.29L7.1 4.35C7.33568 4.58054 7.63502 4.73519 7.95941 4.794C8.28381 4.85282 8.61838 4.81312 8.92 4.68H9C9.29577 4.55324 9.54802 4.34276 9.72569 4.07447C9.90337 3.80618 9.99872 3.49179 10 3.17V3C10 2.46957 10.2107 1.96086 10.5858 1.58579C10.9609 1.21071 11.4696 1 12 1C12.5304 1 13.0391 1.21071 13.4142 1.58579C13.7893 1.96086 14 2.46957 14 3V3.09C14.0013 3.41179 14.0966 3.72618 14.2743 3.99447C14.452 4.26276 14.7042 4.47324 15 4.6C15.3016 4.73312 15.6362 4.77282 15.9606 4.714C16.285 4.65519 16.5843 4.50054 16.82 4.27L16.88 4.21C17.0657 4.02405 17.2863 3.87653 17.5291 3.77588C17.7719 3.67523 18.0322 3.62343 18.295 3.62343C18.5578 3.62343 18.8181 3.67523 19.0609 3.77588C19.3037 3.87653 19.5243 4.02405 19.71 4.21C19.896 4.39575 20.0435 4.61632 20.1441 4.85912C20.2448 5.10192 20.2966 5.36217 20.2966 5.625C20.2966 5.88783 20.2448 6.14808 20.1441 6.39088C20.0435 6.63368 19.896 6.85425 19.71 7.04L19.65 7.1C19.4195 7.33568 19.2648 7.63502 19.206 7.95941C19.1472 8.28381 19.1869 8.61838 19.32 8.92V9C19.4468 9.29577 19.6572 9.54802 19.9255 9.72569C20.1938 9.90337 20.5082 9.99872 20.83 10H21C21.5304 10 22.0391 10.2107 22.4142 10.5858C22.7893 10.9609 23 11.4696 23 12C23 12.5304 22.7893 13.0391 22.4142 13.4142C22.0391 13.7893 21.5304 14 21 14H20.91C20.5882 14.0013 20.2738 14.0966 20.0055 14.2743C19.7372 14.452 19.5268 14.7042 19.4 15Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </div>\n            <h3 class=\"settings-title\">{{ translate('fundingRates.settings.title') }}</h3>\n          </div>\n          <button class=\"settings-close\" (click)=\"closeSettingsDialog()\" aria-label=\"Close\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Body with Organized Sections -->\n        <div class=\"settings-body\">\n          <!-- Trading Configuration Section -->\n          <div class=\"settings-section\">\n            <div class=\"section-header\">\n              <svg class=\"section-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M16 21V5C16 4.46957 15.7893 3.96086 15.4142 3.58579C15.0391 3.21071 14.5304 3 14 3H10C9.46957 3 8.96086 3.21071 8.58579 3.58579C8.21071 3.96086 8 4.46957 8 5V21M4 7H20M4 15H20M3 21H21\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              <h4 class=\"section-title\">Trading Configuration</h4>\n            </div>\n\n            <!-- Default Quantity -->\n            <div class=\"settings-field\">\n              <label class=\"field-label\">\n                <svg class=\"field-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 2V22M17 5H9.5C8.57174 5 7.6815 5.36875 7.02513 6.02513C6.36875 6.6815 6 7.57174 6 8.5C6 9.42826 6.36875 10.3185 7.02513 10.9749C7.6815 11.6313 8.57174 12 9.5 12H14.5C15.4283 12 16.3185 12.3687 16.9749 13.0251C17.6313 13.6815 18 14.5717 18 15.5C18 16.4283 17.6313 17.3185 16.9749 17.9749C16.3185 18.6313 15.4283 19 14.5 19H6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n                {{ translate('fundingRates.settings.defaultQuantity') }} ({{ translate('fundingRates.dialog.coins') }})\n              </label>\n              <input\n                type=\"number\"\n                class=\"field-input\"\n                [(ngModel)]=\"subscriptionSettings().defaultQuantity\"\n                step=\"0.001\"\n                min=\"0.001\"\n                placeholder=\"0.01\"\n                aria-label=\"Default quantity\">\n              <p class=\"field-help\">{{ translate('fundingRates.settings.defaultQuantityHelp') }}</p>\n            </div>\n\n            <!-- Leverage -->\n            <div class=\"settings-field\">\n              <label class=\"field-label\">\n                <svg class=\"field-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M13 2L3 14H12L11 22L21 10H12L13 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n                {{ translate('fundingRates.settings.leverage') }}\n              </label>\n              <input\n                type=\"number\"\n                class=\"field-input\"\n                [(ngModel)]=\"subscriptionSettings().leverage\"\n                min=\"1\"\n                max=\"20\"\n                step=\"1\"\n                placeholder=\"3\"\n                aria-label=\"Leverage\">\n              <p class=\"field-help\">{{ translate('fundingRates.settings.leverageHelp') }}</p>\n            </div>\n          </div>\n\n          <!-- Auto-Cancel Configuration Section -->\n          <div class=\"settings-section\">\n            <div class=\"section-header\">\n              <svg class=\"section-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              <h4 class=\"section-title\">Auto-Cancel Settings</h4>\n            </div>\n\n            <!-- Auto-Cancel Toggle -->\n            <div class=\"settings-field\">\n              <label class=\"field-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"subscriptionSettings().enableAutoCancel\"\n                  class=\"checkbox-input\">\n                <span class=\"checkbox-custom\"></span>\n                <span class=\"checkbox-label\">{{ translate('fundingRates.settings.enableAutoCancel') }}</span>\n              </label>\n              <p class=\"field-help\">{{ translate('fundingRates.settings.autoCancelHelp') }}</p>\n            </div>\n\n            <!-- Auto-Cancel Threshold (only show if enabled) -->\n            @if (subscriptionSettings().enableAutoCancel) {\n              <div class=\"settings-field\">\n                <label class=\"field-label\">\n                  <svg class=\"field-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.7088 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.76489 14.1003 1.98232 16.07 2.86\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    <path d=\"M22 4L12 14.01L9 11.01\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                  {{ translate('fundingRates.settings.autoCancelThreshold') }} (%)\n                </label>\n                <input\n                  type=\"number\"\n                  class=\"field-input\"\n                  [(ngModel)]=\"subscriptionSettings().autoCancelThreshold\"\n                  step=\"0.0001\"\n                  placeholder=\"0.01\"\n                  aria-label=\"Auto-cancel threshold\">\n                <p class=\"field-help\">{{ translate('fundingRates.settings.autoCancelThresholdHelp') }}</p>\n              </div>\n            }\n          </div>\n\n          <!-- Execution Settings Section -->\n          <div class=\"settings-section\">\n            <div class=\"section-header\">\n              <svg class=\"section-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M13 2L3 14H12L11 22L21 10H12L13 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              <h4 class=\"section-title\">Execution Settings</h4>\n            </div>\n\n            <!-- Execution Delay -->\n            <div class=\"settings-field\">\n              <label class=\"field-label\">\n                <svg class=\"field-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 6V12L16 14\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n                {{ translate('fundingRates.settings.executionDelay') }} ({{ translate('fundingRates.dialog.seconds') }})\n              </label>\n              <input\n                type=\"number\"\n                class=\"field-input\"\n                [(ngModel)]=\"subscriptionSettings().executionDelay\"\n                min=\"1\"\n                max=\"60\"\n                step=\"1\"\n                placeholder=\"5\"\n                aria-label=\"Execution delay\">\n              <p class=\"field-help\">{{ translate('fundingRates.settings.executionDelayHelp') }}</p>\n            </div>\n\n            <!-- Arbitrage Spread Threshold -->\n            <div class=\"settings-field\">\n              <label class=\"field-label\">\n                <svg class=\"field-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M3 3V21M21 21V3M7 8H17M7 12H17M7 16H17\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n                {{ translate('fundingRates.settings.arbitrageSpreadThreshold') }} (%)\n              </label>\n              <input\n                type=\"number\"\n                class=\"field-input\"\n                [(ngModel)]=\"subscriptionSettings().arbitrageSpreadThreshold\"\n                step=\"0.001\"\n                min=\"0\"\n                placeholder=\"0.01\"\n                aria-label=\"Arbitrage spread threshold\">\n              <p class=\"field-help\">{{ translate('fundingRates.settings.arbitrageSpreadThresholdHelp') }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Footer with Action Buttons -->\n        <div class=\"settings-footer\">\n          <ui-button\n            variant=\"ghost\"\n            (clicked)=\"closeSettingsDialog()\">\n            {{ translate('fundingRates.actions.cancel') }}\n          </ui-button>\n          <ui-button\n            variant=\"primary\"\n            (clicked)=\"saveSettings()\">\n            <span class=\"button-with-icon\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H16L21 8V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M17 21V13H7V21M7 3V8H15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n              {{ translate('fundingRates.actions.save') }}\n            </span>\n          </ui-button>\n        </div>\n      </div>\n    </div>\n  }\n</div>\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n"],"names":["inject","signal","computed","ChangeDetectorRef","CommonModule","FormsModule","HttpClient","HttpHeaders","interval","of","switchMap","startWith","AuthService","TranslationService","CardComponent","CardHeaderComponent","CardTitleComponent","CardContentComponent","ButtonComponent","getEndpointUrl","i0","ɵɵelementStart","ɵɵlistener","FundingRatesComponent_Conditional_8_Template_ui_button_clicked_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","clearSort","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","translate","FundingRatesComponent_Conditional_20_Template_button_click_0_listener","_r3","arbitrageSearchQuery","set","ɵɵelement","FundingRatesComponent_Conditional_26_Template_button_click_0_listener","_r4","minSpreadThreshold","ɵɵtextInterpolate1","FundingRatesComponent_Conditional_34_Template_ui_button_clicked_0_listener","_r5","clearArbitrageFilters","ɵɵtextInterpolate3","filteredArbitrageOpportunities","length","FundingRatesComponent_Conditional_53_Conditional_1_Template_ui_button_clicked_3_listener","_r6","loadArbitrageOpportunities","arbitrageError","FundingRatesComponent_Conditional_53_Conditional_3_Template_ui_button_clicked_3_listener","_r7","FundingRatesComponent_Conditional_53_Conditional_4_For_20_For_7_Template_button_click_0_listener","exchange_r9","_r8","$implicit","opportunity_r10","openTradingPairForExchange","symbol","exchange","environment","originalSymbol","ɵɵclassMap","toLowerCase","ɵɵproperty","exchange_r11","ɵɵclassProp","parseFloat","bestLong","fundingRate","formatNextFundingTime","nextFundingTime","toString","ɵɵtemplate","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_26_For_1_Conditional_0_Template","ɵɵconditional","credentialId","exchange_r12","bestShort","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_26_For_3_Conditional_0_Template","ɵɵrepeaterCreate","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_26_For_1_Template","_forTrack1","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_26_For_3_Template","ɵɵrepeater","exchanges","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_34_Template_ui_button_clicked_1_listener","_r13","startArbitrageSubscription","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_34_Template_ui_button_clicked_4_listener","editArbitrageSubscription","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_34_Template_ui_button_clicked_8_listener","cancelArbitrageSubscription","startingSubscriptionId","tmp_14_0","getArbitrageSubscription","subscriptionId","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_35_Conditional_0_Template_ui_button_clicked_0_listener","_r14","subscribeToArbitrage","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_35_Conditional_1_Template_ui_button_clicked_0_listener","_r15","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_35_Conditional_0_Template","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_35_Conditional_1_Template","arbitrageOpportunity","FundingRatesComponent_Conditional_53_Conditional_4_For_20_For_7_Template","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_26_Template","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_34_Template","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Conditional_35_Template","hasActiveSubscription","toFixed","spreadPercent","spread","hasArbitrageSubscription","FundingRatesComponent_Conditional_53_Conditional_4_For_20_Template","_forTrack0","FundingRatesComponent_Conditional_53_Conditional_0_Template","FundingRatesComponent_Conditional_53_Conditional_1_Template","FundingRatesComponent_Conditional_53_Conditional_2_Template","FundingRatesComponent_Conditional_53_Conditional_3_Template","FundingRatesComponent_Conditional_53_Conditional_4_Template","isLoadingArbitrage","arbitrageOpportunities","sub_r17","countdown","formatCountdown","calculateCountdown","FundingRatesComponent_Conditional_54_For_7_Conditional_22_Template","FundingRatesComponent_Conditional_54_For_7_Conditional_23_Template","FundingRatesComponent_Conditional_54_For_7_Template_ui_button_clicked_25_listener","_r16","startSubscriptionNow","FundingRatesComponent_Conditional_54_For_7_Template_ui_button_clicked_27_listener","editSubscription","FundingRatesComponent_Conditional_54_For_7_Template_ui_button_clicked_29_listener","unsubscribe","positionType","toUpperCase","formatFundingRate","quantity","undefined","FundingRatesComponent_Conditional_54_For_7_Template","_forTrack2","Array","from","subscriptions","values","deal_r18","entryPrice","hedgeEntryPrice","fundingEarned","realizedPnl","formatTimestamp","executedAt","FundingRatesComponent_Conditional_55_For_7_Template","completedDeals","primaryBalance","hedgeBalance","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_11_Conditional_0_Template","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_11_Conditional_1_Template","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_5_Template","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_6_Template","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_11_Template","FundingRatesComponent_Conditional_56_Conditional_58_Conditional_12_Template","ɵɵtextInterpolate2","positionCalculation","replace","estimatedPrice","positionValue","leverage","requiredMargin","estimatedFee","hedgeCredential","FundingRatesComponent_Conditional_56_Template_div_click_0_listener","_r19","closeSubscriptionDialog","FundingRatesComponent_Conditional_56_Template_div_click_1_listener","$event","stopPropagation","FundingRatesComponent_Conditional_56_Template_button_click_5_listener","FundingRatesComponent_Conditional_56_Conditional_57_Template","FundingRatesComponent_Conditional_56_Conditional_58_Template","FundingRatesComponent_Conditional_56_Template_input_ngModelChange_63_listener","positionSizeUsdt","FundingRatesComponent_Conditional_56_Template_input_ngModelChange_69_listener","dialogLeverage","FundingRatesComponent_Conditional_56_Conditional_72_Template","FundingRatesComponent_Conditional_56_Conditional_81_Template","FundingRatesComponent_Conditional_56_Conditional_82_Template","FundingRatesComponent_Conditional_56_Template_ui_button_clicked_84_listener","FundingRatesComponent_Conditional_56_Template_ui_button_clicked_86_listener","subscribeFundingRate","editingSubscription","selectedTicker","getFundingRateClass","isLoadingBalances","tmp_33_0","selectedCredential","isSubscribing","notification_r20","includes","FundingRatesComponent_Conditional_57_For_2_Template","ɵɵrepeaterTrackByIdentity","notifications","ɵɵtwoWayListener","FundingRatesComponent_Conditional_58_Conditional_50_Template_input_ngModelChange_6_listener","_r22","ɵɵtwoWayBindingSet","subscriptionSettings","autoCancelThreshold","ɵɵtwoWayProperty","FundingRatesComponent_Conditional_58_Template_div_click_0_listener","_r21","closeSettingsDialog","FundingRatesComponent_Conditional_58_Template_div_click_1_listener","FundingRatesComponent_Conditional_58_Template_button_click_10_listener","FundingRatesComponent_Conditional_58_Template_input_ngModelChange_25_listener","defaultQuantity","FundingRatesComponent_Conditional_58_Template_input_ngModelChange_33_listener","FundingRatesComponent_Conditional_58_Template_input_ngModelChange_44_listener","enableAutoCancel","FundingRatesComponent_Conditional_58_Conditional_50_Template","FundingRatesComponent_Conditional_58_Template_input_ngModelChange_63_listener","executionDelay","FundingRatesComponent_Conditional_58_Template_input_ngModelChange_71_listener","arbitrageSpreadThreshold","FundingRatesComponent_Conditional_58_Template_ui_button_clicked_75_listener","FundingRatesComponent_Conditional_58_Template_ui_button_clicked_77_listener","saveSettings","FundingRatesComponent","constructor","http","authService","translationService","cdr","tickers","credentials","isLoading","isLoadingCredentials","error","selectedCredentialId","hedgeCredentialId","autoRefreshEnabled","searchQuery","minAbsFundingRate","maxNextFundingHours","Map","showSubscriptionDialog","expandedRows","Set","showArbitrageSection","arbitrageFiltersCollapsed","showOnlySubscribedArbitrage","showSettingsDialog","sortColumns","column","direction","isFiltersCollapsed","credentialOptions","filter","cred","isActive","map","value","id","label","disabled","find","c","filteredTickers","filtered","t","isNaN","priceChange","price24hPcnt","search","trim","posType","minAbsRate","Math","abs","maxHours","now","Date","maxTime","fundingTime","parseInt","sortedTickers","sortCols","sort","a","b","aVal","bVal","comparison","meetsAutoSubscribeThreshold","settings","threshold","eligibleSymbols","forEach","ticker","absFundingRate","add","opportunities","opp","minSpread","subscribedSymbols","subs","symbols","sub","console","log","symbolToSubscription","normalizedSymbol","keys","positionValidationError","lastPrice","markPrice","tickerLastPrice","tickerMarkPrice","margin","result","ngOnInit","loadSettings","loadCredentials","loadSubscriptions","startAutoCancelChecker","syncSettingsToFilters","ngOnDestroy","refreshSubscription","autoCancelInterval","clearInterval","key","token","authState","headers","get","subscribe","next","response","success","data","credentialsArray","supportedCreds","defaultCred","loadTickers","setupAutoRefresh","warn","err","onCredentialChange","pipe","loadTickersAsync","toggleAutoRefresh","update","v","_this","credential","apiUrl","_ref","_asyncToGenerator","mapBingXTickers","mergeBingXFundingRates","message","_x","apply","arguments","_this2","fundingUrl","fundingResponse","toPromise","fundingMap","fr","mergedTickers","funding","bingxTickers","indexPrice","prevPrice24h","openPrice","priceChangePercent","highPrice24h","highPrice","lowPrice24h","lowPrice","prevPrice1h","openInterest","openInterestValue","turnover24h","quoteVolume","volume24h","volume","predictedDeliveryPrice","basisRate","deliveryFeeRate","deliveryTime","ask1Size","bid1Price","ask1Price","bid1Size","arbitrageUrl","o","toggleArbitrageSection","toggleArbitrageFilters","cancelAllSubscriptions","_this3","showNotification","serverSubscriptions","status","confirmed","confirm","cancelPromises","delete","Promise","all","sortBy","event","currentSorts","existingIndex","findIndex","s","shiftKey","updated","getSortInfo","sorts","index","clearFilters","toggleFiltersCollapsed","formatPrice","price","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","rate","percentage","formatAnnualizedRate","annualized","formatPercent","timestamp","ts","date","diff","getTime","hours","floor","minutes","formatVolume","getPercentClass","tickerMeetsThreshold","has","getRecommendedPositionType","_this4","fetch","method","Authorization","json","openSubscriptionDialog","toggleRowExpansion","expanded","subscription","getActiveSubscription","isRowExpanded","subscribeFromInlineForm","canStartNow","cancelSubscription","_this5","saved","localStorage","getItem","JSON","parse","setItem","stringify","thresholdPercent","openSettingsDialog","setInterval","checkAutoCancelConditions","subscriptionsMap","currentFundingRate","timeRemaining","secondsRemaining","isFundingBelowThreshold","isCloseToExecution","_this6","primaryCredentialId","currentCredId","savedMargin","estimatedMargin","fetchBalancesAndCalculatePosition","saveEditedSubscription","editingSub","positionCalc","newQuantity","cancelEdit","deleteResponse","hedgeCred","subscribeData","hedgeExchange","post","createResponse","subsMap","completedDealsList","isValidSymbol","endsWith","push","createdAt","_this7","errorMessage","currentMargin","body","startCountdownMonitoring","updateCountdown","detectChanges","setTimeout","_x2","_this8","silent","isNotFound","type","notifs","indexOf","splice","max","seconds","secs","hasSubscription","diffMs","diffMins","diffHours","diffDays","opportunity","_this9","_this0","subscriptionLeverage","globalLeverage","usedLeverage","calculation","_this1","bestLongExchange","bestLongCredentialId","bestShortCredentialId","exchangeData","ex","notificationMsg","_this10","primaryCred","primaryBalanceUrl","primaryBalanceResponse","balance","list","totalAvailableBalance","bingxBalance","Object","availableMargin","hedgeBalanceUrl","hedgeBalanceResponse","openTradingPair","url","window","open","displaySymbol","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FundingRatesComponent_Template","rf","ctx","FundingRatesComponent_Template_ui_button_clicked_5_listener","FundingRatesComponent_Conditional_8_Template","FundingRatesComponent_Template_input_ngModelChange_19_listener","FundingRatesComponent_Conditional_20_Template","FundingRatesComponent_Template_input_ngModelChange_25_listener","FundingRatesComponent_Conditional_26_Template","FundingRatesComponent_Conditional_27_Template","FundingRatesComponent_Template_input_ngModelChange_30_listener","FundingRatesComponent_Conditional_34_Template","FundingRatesComponent_Template_ui_button_clicked_35_listener","FundingRatesComponent_Template_ui_button_clicked_43_listener","FundingRatesComponent_Template_button_click_48_listener","FundingRatesComponent_Conditional_52_Template","FundingRatesComponent_Conditional_53_Template","FundingRatesComponent_Conditional_54_Template","FundingRatesComponent_Conditional_55_Template","FundingRatesComponent_Conditional_56_Template","FundingRatesComponent_Conditional_57_Template","FundingRatesComponent_Conditional_58_Template","size","i1","NgClass","i2","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","MinValidator","MaxValidator","NgModel","styles","dateTimestampProvider","Scheduler","schedulerActionCtor","schedule","work","delay","state","Observable","async","asyncScheduler","isScheduler","isValidDate","timer","dueTime","intervalOrScheduler","scheduler","intervalDuration","subscriber","due","n","closed","complete","Subscription","Action","intervalProvider","arrRemove","AsyncAction","pending","_a","recycleAsyncId","requestAsyncId","_id","flush","bind","_scheduler","execute","Error","_execute","_delay","errored","errorValue","e","actions","AsyncScheduler","SchedulerAction","_active","action","shift","delegate","handler","timeout","args","handle"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4,5,6,7,8,9,10]}