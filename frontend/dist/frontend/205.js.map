{"version":3,"file":"205.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAoE;AACrB;AAC0C;AAIzB;;;;;;;;ICGxDO,4DADF,aAAiC,eACN;IAAAA,oDAAA,aAAC;IAAAA,0DAAA,EAAO;IACjCA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAM,MAAA,CAAAC,cAAA,QACF;;;;;;IAKEP,4DADF,aAA+B,eACJ;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAO;IAClCA,oDAAA,GACA;IAAAA,4DAAA,oBAAuG;IAAzBA,wDAAA,qBAAAS,mEAAA;MAAAT,2DAAA,CAAAW,GAAA;MAAA,MAAAL,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAAWM,MAAA,CAAAQ,UAAA,EAAY;IAAA,EAAC;IAACd,oDAAA,aAAC;IAC1GA,0DAD0G,EAAY,EAChH;;;;IAFJA,uDAAA,GACA;IADAA,gEAAA,MAAAM,MAAA,CAAAS,SAAA,QACA;;;;;IAoBQf,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,kCACF;;;;;IAEEhB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,+BACF;;;;;IANFhB,4DAAA,cAA8B;IAI5BA,wDAHA,IAAAkB,iEAAA,OAAoD,IAAAC,iEAAA,OAGH;IAGnDnB,0DAAA,EAAM;;;;;;IANJA,uDAAA,EAEC;IAFDA,2DAAA,GAAAqB,OAAA,GAAAf,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAF,OAAA,CAAAG,QAAA,uBAEC;IACDxB,uDAAA,EAEC;IAFDA,2DAAA,GAAAyB,OAAA,GAAAnB,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAD,QAAA,oBAEC;;;;;IAgBHxB,4DAAA,cAA8B;IAC5BA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,qCACF;;;;;IAYAhB,uDAAA,eAA6B;IAC7BA,oDAAA,GACF;;;;IADEA,uDAAA,EACF;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,yBACF;;;;;IACEhB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,sBACF;;;;;;IApDJhB,4DAAA,eAAuE;IAAzCA,wDAAA,sBAAA2B,+DAAA;MAAA3B,2DAAA,CAAA4B,GAAA;MAAA,MAAAtB,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAAYM,MAAA,CAAAuB,OAAA,EAAS;IAAA,EAAC;IAEhD7B,4DADF,cAAwB,gBACqB;IAAAA,oDAAA,GAAqC;IAAAA,0DAAA,EAAQ;IACxFA,uDAAA,gBAOE;IACFA,wDAAA,IAAA8B,mDAAA,kBAA0E;IAU5E9B,0DAAA,EAAM;IAGJA,4DADF,cAAwB,gBACwB;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAQ;IACvFA,uDAAA,gBAOE;IACFA,wDAAA,KAAA+B,oDAAA,kBAAgF;IAKlF/B,0DAAA,EAAM;IAENA,4DAAA,qBAMC;IAIGA,wDAHF,KAAAgC,oDAAA,OAAmB,KAAAC,oDAAA,OAGV;IAIbjC,0DADE,EAAY,EACP;;;;;;;;IAtDDA,wDAAA,cAAAM,MAAA,CAAAgB,SAAA,CAAuB;IAEkBtB,uDAAA,GAAqC;IAArCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,uBAAqC;IAK9EhB,uDAAA,EAAuF;IAAvFA,yDAAA,iBAAAyB,OAAA,GAAAnB,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAAnB,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAa,OAAA,EAAuF;IAEvFtC,wDAAA,gBAAAM,MAAA,CAAAU,SAAA,qBAA6C;IAE/ChB,uDAAA,EASC;IATDA,2DAAA,GAAAuC,OAAA,GAAAjC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAjC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,4BAAAgB,OAAA,CAAAD,OAAA,WASC;IAI6CtC,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,mBAAiC;IAK7EhB,uDAAA,EAA6F;IAA7FA,yDAAA,iBAAAwC,OAAA,GAAAlC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,+BAAAiB,OAAA,CAAAH,OAAA,OAAAG,OAAA,GAAAlC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,+BAAAiB,OAAA,CAAAF,OAAA,EAA6F;IAE7FtC,wDAAA,gBAAAM,MAAA,CAAAU,SAAA,wBAAgD;IAElDhB,uDAAA,EAIC;IAJDA,2DAAA,GAAAyC,OAAA,GAAAnC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,+BAAAkB,OAAA,CAAAJ,OAAA,OAAAI,OAAA,GAAAnC,MAAA,CAAAgB,SAAA,CAAAC,GAAA,+BAAAkB,OAAA,CAAAH,OAAA,YAIC;IAQDtC,uDAAA,EAA6C;IAA7CA,wDAAA,aAAAM,MAAA,CAAAgB,SAAA,CAAAe,OAAA,IAAA/B,MAAA,CAAAoC,SAAA,GAA6C;IAE7C1C,uDAAA,EAKC;IALDA,2DAAA,CAAAM,MAAA,CAAAoC,SAAA,aAKC;;;;;IAgCK1C,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,kCACF;;;;;IAEEhB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,+BACF;;;;;IANFhB,4DAAA,cAA8B;IAI5BA,wDAHA,IAAA2C,kEAAA,OAAuD,IAAAC,kEAAA,OAGH;IAGtD5C,0DAAA,EAAM;;;;;;IANJA,uDAAA,EAEC;IAFDA,2DAAA,GAAAqB,OAAA,GAAAf,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAF,OAAA,CAAAG,QAAA,uBAEC;IACDxB,uDAAA,EAEC;IAFDA,2DAAA,GAAAyB,OAAA,GAAAnB,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAE,OAAA,CAAAD,QAAA,oBAEC;;;;;IAkBCxB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,qCACF;;;;;IAEEhB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,sCACF;;;;;IANFhB,4DAAA,cAA8B;IAI5BA,wDAHA,IAAA8C,mEAAA,OAA0D,IAAAC,mEAAA,OAGC;IAG7D/C,0DAAA,EAAM;;;;;;IANJA,uDAAA,EAEC;IAFDA,2DAAA,GAAAqB,OAAA,GAAAf,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAF,OAAA,CAAAG,QAAA,uBAEC;IACDxB,uDAAA,EAEC;IAFDA,2DAAA,GAAAyB,OAAA,GAAAnB,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAE,OAAA,CAAAD,QAAA,wBAEC;;;;;IAaHxB,uDAAA,eAA6B;IAC7BA,oDAAA,GACF;;;;IADEA,uDAAA,EACF;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,+BACF;;;;;IACEhB,oDAAA,GACF;;;;IADEA,gEAAA,MAAAM,MAAA,CAAAU,SAAA,gCACF;;;;;;IApEJhB,4DAAA,eAA6E;IAA5CA,wDAAA,sBAAAgD,gEAAA;MAAAhD,2DAAA,CAAAiD,GAAA;MAAA,MAAA3C,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAAYM,MAAA,CAAA4C,UAAA,EAAY;IAAA,EAAC;IAEtDlD,4DADF,cAAwB,gBACuB;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAQ;IACtFA,uDAAA,gBAME;IACJA,0DAAA,EAAM;IAGJA,4DADF,cAAwB,gBACwB;IAAAA,oDAAA,GAAqC;IAAAA,0DAAA,EAAQ;IAC3FA,uDAAA,gBAOE;IACFA,wDAAA,IAAAmD,oDAAA,kBAAgF;IAUlFnD,0DAAA,EAAM;IAGJA,4DADF,eAAwB,iBAC2B;IAAAA,oDAAA,IAAiC;IAAAA,0DAAA,EAAQ;IAC1FA,uDAAA,iBAOE;IACFA,wDAAA,KAAAoD,qDAAA,kBAAsF;IAUxFpD,0DAAA,EAAM;IAENA,4DAAA,qBAMC;IAIGA,wDAHF,KAAAqD,qDAAA,OAAmB,KAAAC,qDAAA,OAGV;IAIbtD,0DADE,EAAY,EACP;;;;;;;;IAtEDA,wDAAA,cAAAM,MAAA,CAAAuC,YAAA,CAA0B;IAEiB7C,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,mBAAiC;IAM5EhB,uDAAA,EAAgD;IAAhDA,wDAAA,gBAAAM,MAAA,CAAAU,SAAA,wBAAgD;IAKJhB,uDAAA,GAAqC;IAArCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,uBAAqC;IAKjFhB,uDAAA,EAA6F;IAA7FA,yDAAA,iBAAAuC,OAAA,GAAAjC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAjC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAgB,OAAA,CAAAD,OAAA,EAA6F;IAE7FtC,wDAAA,gBAAAM,MAAA,CAAAU,SAAA,qBAA6C;IAE/ChB,uDAAA,EASC;IATDA,2DAAA,GAAAwC,OAAA,GAAAlC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAiB,OAAA,CAAAH,OAAA,OAAAG,OAAA,GAAAlC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,4BAAAiB,OAAA,CAAAF,OAAA,WASC;IAIgDtC,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,mBAAiC;IAKhFhB,uDAAA,EAAmG;IAAnGA,yDAAA,iBAAAyC,OAAA,GAAAnC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAkB,OAAA,CAAAJ,OAAA,OAAAI,OAAA,GAAAnC,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAkB,OAAA,CAAAH,OAAA,EAAmG;IAEnGtC,wDAAA,gBAAAM,MAAA,CAAAU,SAAA,+BAAuD;IAEzDhB,uDAAA,EASC;IATDA,2DAAA,GAAAuD,QAAA,GAAAjD,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAgC,QAAA,CAAAlB,OAAA,OAAAkB,QAAA,GAAAjD,MAAA,CAAAuC,YAAA,CAAAtB,GAAA,+BAAAgC,QAAA,CAAAjB,OAAA,YASC;IAQDtC,uDAAA,EAAgD;IAAhDA,wDAAA,aAAAM,MAAA,CAAAuC,YAAA,CAAAR,OAAA,IAAA/B,MAAA,CAAAoC,SAAA,GAAgD;IAEhD1C,uDAAA,EAKC;IALDA,2DAAA,CAAAM,MAAA,CAAAoC,SAAA,aAKC;;;;;;IAgBH1C,4DAAA,QAAG;IAAAA,oDAAA,GACD;IAAAA,4DAAA,YAAuC;IAApCA,wDAAA,mBAAAwD,0DAAA;MAAAxD,2DAAA,CAAAyD,GAAA;MAAA,MAAAnD,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAoD,UAAA,EAAY;IAAA,EAAC;IAAc1D,oDAAA,GAAmC;IAC5EA,0DAD4E,EAAI,EAC5E;;;;IAFDA,uDAAA,EACD;IADCA,gEAAA,KAAAM,MAAA,CAAAU,SAAA,+BACD;IAAuChB,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,qBAAmC;;;;;;IAG5EhB,4DAAA,QAAG;IAAAA,oDAAA,GACD;IAAAA,4DAAA,YAAuC;IAApCA,wDAAA,mBAAA2D,0DAAA;MAAA3D,2DAAA,CAAA4D,GAAA;MAAA,MAAAtD,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAoD,UAAA,EAAY;IAAA,EAAC;IAAc1D,oDAAA,GAAmC;IAC5EA,0DAD4E,EAAI,EAC5E;;;;IAFDA,uDAAA,EACD;IADCA,gEAAA,KAAAM,MAAA,CAAAU,SAAA,kCACD;IAAuChB,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAM,MAAA,CAAAU,SAAA,qBAAmC;;;AD7J7E,IAAM6C,cAAc;EAArB,MAAOA,cAAc;IAsBzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc,EACdC,KAAqB,EACrBC,kBAAsC;MAJtC,KAAAJ,EAAE,GAAFA,EAAE;MACF,KAAAC,WAAW,GAAXA,WAAW;MACX,KAAAC,MAAM,GAANA,MAAM;MACN,KAAAC,KAAK,GAALA,KAAK;MACL,KAAAC,kBAAkB,GAAlBA,kBAAkB;MA1B5B;MACQ,KAAAC,kBAAkB,GAAG3E,qDAAM,CAAC,KAAK,CAAC;MAE1C;MACS,KAAA4E,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,UAAU,EAAE;MACnD,KAAA5B,SAAS,GAAGhD,uDAAQ,CAAC,MAAM,IAAI,CAACsE,WAAW,CAACtB,SAAS,EAAE,CAAC;MACxD,KAAA3B,SAAS,GAAGrB,uDAAQ,CAAC,MAAM,IAAI,CAACsE,WAAW,CAACO,KAAK,EAAE,CAAC;MACpD,KAAAhE,cAAc,GAAGb,uDAAQ,CAAC,MAAK;QACtC,IAAI,IAAI,CAAC8E,WAAW,KAAK,iBAAiB,EAAE;UAC1C,OAAO,IAAI,CAACxD,SAAS,CAAC,qBAAqB,CAAC;QAC9C;QACA,OAAO,IAAI;MACb,CAAC,CAAC;MAgBA,IAAI,CAACyD,SAAS,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,UAAU;MAC3E,IAAI,CAACH,WAAW,GAAG,IAAI,CAACN,KAAK,CAACQ,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI;MACpE,IAAI,CAACrD,SAAS,GAAG,IAAI,CAACyC,EAAE,CAACa,KAAK,CAAC;QAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChF,sDAAU,CAACiF,QAAQ,EAAEjF,sDAAU,CAACgF,KAAK,CAAC,CAAC;QACpDE,QAAQ,EAAE,CAAC,EAAE,EAAElF,sDAAU,CAACiF,QAAQ;OACnC,CAAC;MAEF,IAAI,CAACjC,YAAY,GAAG,IAAI,CAACkB,EAAE,CAACa,KAAK,CAAC;QAChCI,IAAI,EAAE,CAAC,EAAE,CAAC;QACVH,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChF,sDAAU,CAACiF,QAAQ,EAAEjF,sDAAU,CAACgF,KAAK,CAAC,CAAC;QACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClF,sDAAU,CAACiF,QAAQ,EAAEjF,sDAAU,CAACoF,SAAS,CAAC,CAAC,CAAC,CAAC;OAC9D,CAAC;MAEF;MACAtF,qDAAM,CAAC,MAAK;QACV,IAAI,IAAI,CAACqE,WAAW,CAACkB,eAAe,EAAE,EAAE;UACtC,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,IAAI,CAACV,SAAS,CAAC,CAAC;QACxC;MACF,CAAC,CAAC;IACJ;IAEA5C,OAAOA,CAAA;MACL,IAAI,IAAI,CAACP,SAAS,CAAC8D,KAAK,EAAE;QACxB,MAAM;UAAEP,KAAK;UAAEE;QAAQ,CAAE,GAAG,IAAI,CAACzD,SAAS,CAAC+D,KAAK;QAChD,IAAI,CAACrB,WAAW,CAACsB,KAAK,CAACT,KAAK,EAAEE,QAAQ,CAAC,CAACQ,SAAS,EAAE;MACrD;IACF;IAEArC,UAAUA,CAAA;MACR,IAAI,IAAI,CAACL,YAAY,CAACuC,KAAK,EAAE;QAC3B,MAAM;UAAEP,KAAK;UAAEE,QAAQ;UAAEC;QAAI,CAAE,GAAG,IAAI,CAACnC,YAAY,CAACwC,KAAK;QACzD,IAAI,CAACrB,WAAW,CAACwB,QAAQ,CAACX,KAAK,EAAEE,QAAQ,EAAEC,IAAI,CAAC,CAACO,SAAS,EAAE;MAC9D;IACF;IAEAE,eAAeA,CAAA;MACb;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCC,KAAK,CAAC,iEAAiE,CAAC;IAC1E;IAEAlC,UAAUA,CAAA;MACR,IAAI,CAACU,kBAAkB,CAACyB,MAAM,CAACR,KAAK,IAAI,CAACA,KAAK,CAAC;MAC/C,IAAI,CAACvE,UAAU,EAAE;MACjB,IAAI,CAACgF,UAAU,EAAE;IACnB;IAEAhF,UAAUA,CAAA;MACR,IAAI,CAACkD,WAAW,CAAClD,UAAU,EAAE;IAC/B;IAEAE,SAASA,CAAC+E,GAAW,EAAEC,MAA+B;MACpD,OAAO,IAAI,CAAC7B,kBAAkB,CAACnD,SAAS,CAAC+E,GAAG,EAAEC,MAAM,CAAC;IACvD;IAEQF,UAAUA,CAAA;MAChB,IAAI,CAACxE,SAAS,CAAC2E,KAAK,EAAE;MACtB,IAAI,CAACpD,YAAY,CAACoD,KAAK,EAAE;MACzB,IAAI,CAAC3E,SAAS,CAAC4E,eAAe,EAAE;MAChC,IAAI,CAACrD,YAAY,CAACqD,eAAe,EAAE;IACrC;;;yBA1FWrC,cAAc,EAAA7D,+DAAA,CAAAoG,uDAAA,GAAApG,+DAAA,CAAAsG,+DAAA,GAAAtG,+DAAA,CAAAwG,mDAAA,GAAAxG,+DAAA,CAAAwG,2DAAA,GAAAxG,+DAAA,CAAA2G,6EAAA;MAAA;IAAA;;;cAAd9C,cAAc;QAAAgD,SAAA;QAAAC,UAAA;QAAAC,QAAA,GAAA/G,iEAAA;QAAAiH,KAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;UAAA,IAAAD,EAAA;YCZrBtH,4DAHN,aAA4B,aACH,aACI,SACnB;YAAAA,oDAAA,GAAiF;YAAAA,0DAAA,EAAK;YAC1FA,4DAAA,QAAG;YAAAA,oDAAA,GAA4F;YACjGA,0DADiG,EAAI,EAC/F;YA6ENA,wDA3EA,IAAAwH,qCAAA,iBAAwB,IAAAC,qCAAA,iBAOL,IAAAC,qCAAA,oBASI,KAAAC,sCAAA,oBA2DD;YA2EpB3H,4DADF,cAAqB,YACb;YAAAA,oDAAA,IAA2B;YACnCA,0DADmC,EAAO,EACpC;YAENA,4DAAA,oBAAmI;YAAvDA,wDAAA,qBAAA4H,sDAAA;cAAA,OAAWL,GAAA,CAAA9B,eAAA,EAAiB;YAAA,EAAC;YACvGzF,4DAAA,eAA0B;YAAAA,oDAAA,oBAAE;YAAAA,0DAAA,EAAO;YACnCA,oDAAA,IACF;YAAAA,0DAAA,EAAY;YAEZA,4DAAA,cAAyB;YAKrBA,wDAJF,KAAA6H,sCAAA,YAAuB,KAAAC,sCAAA,YAId;YAOf9H,0DAFI,EAAM,EACF,EACF;;;YA9KIA,uDAAA,GAAiF;YAAjFA,+DAAA,CAAAuH,GAAA,CAAAlD,YAAA,KAAAkD,GAAA,CAAAvG,SAAA,mBAAAuG,GAAA,CAAAvG,SAAA,sBAAiF;YAClFhB,uDAAA,GAA4F;YAA5FA,+DAAA,CAAAuH,GAAA,CAAAlD,YAAA,KAAAkD,GAAA,CAAAvG,SAAA,0BAAAuG,GAAA,CAAAvG,SAAA,0BAA4F;YAGjGhB,uDAAA,EAKC;YALDA,2DAAA,CAAAuH,GAAA,CAAAhH,cAAA,YAKC;YAEDP,uDAAA,EAMC;YANDA,2DAAA,CAAAuH,GAAA,CAAAxG,SAAA,YAMC;YAGDf,uDAAA,EAwDC;YAxDDA,2DAAA,EAAAuH,GAAA,CAAAlD,YAAA,YAwDC;YAGDrE,uDAAA,EAwEC;YAxEDA,2DAAA,CAAAuH,GAAA,CAAAlD,YAAA,aAwEC;YAGOrE,uDAAA,GAA2B;YAA3BA,+DAAA,CAAAuH,GAAA,CAAAvG,SAAA,aAA2B;YAGuEhB,uDAAA,EAAwB;YAAxBA,wDAAA,aAAAuH,GAAA,CAAA7E,SAAA,GAAwB;YAEhI1C,uDAAA,GACF;YADEA,gEAAA,MAAAuH,GAAA,CAAAvG,SAAA,kCACF;YAGEhB,uDAAA,GAQC;YARDA,2DAAA,EAAAuH,GAAA,CAAAlD,YAAA,aAQC;;;uBDnKKzE,yDAAY,EAAEE,+DAAmB,EAAAsG,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EAAErG,wEAAe;QAAAsI,MAAA;MAAA;IAAA;;SAIjDxE,cAAc;AAAA,K","sources":["./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html"],"sourcesContent":["import { Component, signal, computed, effect } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { ButtonComponent } from '../ui/button/button.component';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, ButtonComponent],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  // Signals for component state\n  private showRegisterSignal = signal(false);\n  \n  // Computed values\n  readonly showRegister = this.showRegisterSignal.asReadonly();\n  readonly isLoading = computed(() => this.authService.isLoading());\n  readonly authError = computed(() => this.authService.error());\n  readonly sessionMessage = computed(() => {\n    if (this.loginReason === 'session_expired') {\n      return this.translate('auth.sessionExpired');\n    }\n    return null;\n  });\n\n  // Form groups\n  loginForm: FormGroup;\n  registerForm: FormGroup;\n\n  private returnUrl: string;\n  private loginReason: string | null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private translationService: TranslationService\n  ) {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/trading';\n    this.loginReason = this.route.snapshot.queryParams['reason'] || null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.registerForm = this.fb.group({\n      name: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    // Effect to navigate when authenticated\n    effect(() => {\n      if (this.authService.isAuthenticated()) {\n        this.router.navigate([this.returnUrl]);\n      }\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      const { email, password } = this.loginForm.value;\n      this.authService.login(email, password).subscribe();\n    }\n  }\n\n  onRegister() {\n    if (this.registerForm.valid) {\n      const { email, password, name } = this.registerForm.value;\n      this.authService.register(email, password, name).subscribe();\n    }\n  }\n\n  loginWithGoogle() {\n    // Placeholder for Google login\n    // In a real app, this would integrate with Google Identity Services\n    console.log('Google login clicked');\n    alert('Google login would be implemented with Google Identity Services');\n  }\n\n  toggleMode() {\n    this.showRegisterSignal.update(value => !value);\n    this.clearError();\n    this.resetForms();\n  }\n\n  clearError() {\n    this.authService.clearError();\n  }\n\n  translate(key: string, params?: Record<string, string>): string {\n    return this.translationService.translate(key, params);\n  }\n\n  private resetForms() {\n    this.loginForm.reset();\n    this.registerForm.reset();\n    this.loginForm.markAsUntouched();\n    this.registerForm.markAsUntouched();\n  }\n}","<div class=\"auth-container\">\n  <div class=\"auth-card\">\n    <div class=\"auth-header\">\n      <h1>{{ showRegister() ? translate('login.joinUs') : translate('login.welcomeBack') }}</h1>\n      <p>{{ showRegister() ? translate('login.createAccount') : translate('login.signInToAccount') }}</p>\n    </div>\n\n    @if (sessionMessage()) {\n      <div class=\"alert alert-warning\">\n        <span class=\"alert-icon\">⏰</span>\n        {{ sessionMessage() }}\n      </div>\n    }\n\n    @if (authError()) {\n      <div class=\"alert alert-error\">\n        <span class=\"alert-icon\">⚠️</span>\n        {{ authError() }}\n        <ui-button variant=\"ghost\" size=\"small\" type=\"button\" className=\"alert-close\" (clicked)=\"clearError()\">×</ui-button>\n      </div>\n    }\n\n    <!-- Login Form -->\n    @if (!showRegister()) {\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" class=\"auth-form\">\n        <div class=\"form-group\">\n          <label for=\"loginEmail\" class=\"form-label\">{{ translate('login.emailAddress') }}</label>\n          <input \n            type=\"email\" \n            id=\"loginEmail\" \n            formControlName=\"email\"\n            [class.is-invalid]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\n            class=\"form-control\"\n            [placeholder]=\"translate('login.enterEmail')\"\n          />\n          @if (loginForm.get('email')?.invalid && loginForm.get('email')?.touched) {\n            <div class=\"invalid-feedback\">\n              @if (loginForm.get('email')?.hasError('required')) {\n                {{ translate('validation.emailRequired') }}\n              }\n              @if (loginForm.get('email')?.hasError('email')) {\n                {{ translate('validation.validEmail') }}\n              }\n            </div>\n          }\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"loginPassword\" class=\"form-label\">{{ translate('login.password') }}</label>\n          <input \n            type=\"password\" \n            id=\"loginPassword\" \n            formControlName=\"password\"\n            [class.is-invalid]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n            class=\"form-control\"\n            [placeholder]=\"translate('login.enterPassword')\"\n          />\n          @if (loginForm.get('password')?.invalid && loginForm.get('password')?.touched) {\n            <div class=\"invalid-feedback\">\n              {{ translate('validation.passwordRequired') }}\n            </div>\n          }\n        </div>\n\n        <ui-button\n          type=\"submit\"\n          variant=\"primary\"\n          size=\"large\"\n          className=\"btn-full\"\n          [disabled]=\"loginForm.invalid || isLoading()\"\n        >\n          @if (isLoading()) {\n            <span class=\"spinner\"></span>\n            {{ translate('login.signingIn') }}\n          } @else {\n            {{ translate('login.signIn') }}\n          }\n        </ui-button>\n      </form>\n    }\n\n    <!-- Register Form -->\n    @if (showRegister()) {\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\" class=\"auth-form\">\n        <div class=\"form-group\">\n          <label for=\"registerName\" class=\"form-label\">{{ translate('login.fullName') }}</label>\n          <input \n            type=\"text\" \n            id=\"registerName\" \n            formControlName=\"name\"\n            class=\"form-control\"\n            [placeholder]=\"translate('login.enterFullName')\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"registerEmail\" class=\"form-label\">{{ translate('login.emailAddress') }}</label>\n          <input \n            type=\"email\" \n            id=\"registerEmail\" \n            formControlName=\"email\"\n            [class.is-invalid]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\n            class=\"form-control\"\n            [placeholder]=\"translate('login.enterEmail')\"\n          />\n          @if (registerForm.get('email')?.invalid && registerForm.get('email')?.touched) {\n            <div class=\"invalid-feedback\">\n              @if (registerForm.get('email')?.hasError('required')) {\n                {{ translate('validation.emailRequired') }}\n              }\n              @if (registerForm.get('email')?.hasError('email')) {\n                {{ translate('validation.validEmail') }}\n              }\n            </div>\n          }\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"registerPassword\" class=\"form-label\">{{ translate('login.password') }}</label>\n          <input \n            type=\"password\" \n            id=\"registerPassword\" \n            formControlName=\"password\"\n            [class.is-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n            class=\"form-control\"\n            [placeholder]=\"translate('login.createSecurePassword')\"\n          />\n          @if (registerForm.get('password')?.invalid && registerForm.get('password')?.touched) {\n            <div class=\"invalid-feedback\">\n              @if (registerForm.get('password')?.hasError('required')) {\n                {{ translate('validation.passwordRequired') }}\n              }\n              @if (registerForm.get('password')?.hasError('minlength')) {\n                {{ translate('validation.passwordMinLength') }}\n              }\n            </div>\n          }\n        </div>\n\n        <ui-button\n          type=\"submit\"\n          variant=\"primary\"\n          size=\"large\"\n          className=\"btn-full\"\n          [disabled]=\"registerForm.invalid || isLoading()\"\n        >\n          @if (isLoading()) {\n            <span class=\"spinner\"></span>\n            {{ translate('login.creatingAccount') }}\n          } @else {\n            {{ translate('login.createAccountBtn') }}\n          }\n        </ui-button>\n      </form>\n    }\n\n    <div class=\"divider\">\n      <span>{{ translate('login.or') }}</span>\n    </div>\n\n    <ui-button variant=\"secondary\" size=\"large\" className=\"btn-google btn-full\" (clicked)=\"loginWithGoogle()\" [disabled]=\"isLoading()\">\n      <span class=\"google-icon\">🔍</span>\n      {{ translate('login.continueWithGoogle') }}\n    </ui-button>\n\n    <div class=\"auth-footer\">\n      @if (!showRegister()) {\n        <p>{{ translate('login.dontHaveAccount') }} \n          <a (click)=\"toggleMode()\" class=\"link\">{{ translate('login.signUpHere') }}</a>\n        </p>\n      } @else {\n        <p>{{ translate('login.alreadyHaveAccount') }} \n          <a (click)=\"toggleMode()\" class=\"link\">{{ translate('login.signInHere') }}</a>\n        </p>\n      }\n    </div>\n  </div>\n</div>"],"names":["signal","computed","effect","CommonModule","Validators","ReactiveFormsModule","ButtonComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","sessionMessage","ɵɵlistener","LoginComponent_Conditional_8_Template_ui_button_clicked_4_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","clearError","authError","translate","ɵɵtemplate","LoginComponent_Conditional_9_Conditional_5_Conditional_1_Template","LoginComponent_Conditional_9_Conditional_5_Conditional_2_Template","ɵɵconditional","tmp_2_0","loginForm","get","hasError","tmp_3_0","ɵɵelement","LoginComponent_Conditional_9_Template_form_ngSubmit_0_listener","_r3","onLogin","LoginComponent_Conditional_9_Conditional_5_Template","LoginComponent_Conditional_9_Conditional_10_Template","LoginComponent_Conditional_9_Conditional_12_Template","LoginComponent_Conditional_9_Conditional_13_Template","ɵɵproperty","ɵɵtextInterpolate","ɵɵclassProp","invalid","touched","tmp_5_0","tmp_7_0","tmp_9_0","isLoading","LoginComponent_Conditional_10_Conditional_9_Conditional_1_Template","LoginComponent_Conditional_10_Conditional_9_Conditional_2_Template","registerForm","LoginComponent_Conditional_10_Conditional_14_Conditional_1_Template","LoginComponent_Conditional_10_Conditional_14_Conditional_2_Template","LoginComponent_Conditional_10_Template_form_ngSubmit_0_listener","_r4","onRegister","LoginComponent_Conditional_10_Conditional_9_Template","LoginComponent_Conditional_10_Conditional_14_Template","LoginComponent_Conditional_10_Conditional_16_Template","LoginComponent_Conditional_10_Conditional_17_Template","tmp_11_0","LoginComponent_Conditional_19_Template_a_click_2_listener","_r5","toggleMode","LoginComponent_Conditional_20_Template_a_click_2_listener","_r6","LoginComponent","constructor","fb","authService","router","route","translationService","showRegisterSignal","showRegister","asReadonly","error","loginReason","returnUrl","snapshot","queryParams","group","email","required","password","name","minLength","isAuthenticated","navigate","valid","value","login","subscribe","register","loginWithGoogle","console","log","alert","update","resetForms","key","params","reset","markAsUntouched","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","ActivatedRoute","i4","TranslationService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","LoginComponent_Conditional_7_Template","LoginComponent_Conditional_8_Template","LoginComponent_Conditional_9_Template","LoginComponent_Conditional_10_Template","LoginComponent_Template_ui_button_clicked_14_listener","LoginComponent_Conditional_19_Template","LoginComponent_Conditional_20_Template","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}