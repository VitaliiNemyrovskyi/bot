{"version":3,"file":"416.js","mappings":"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","sources":["./src/app/components/trading/bot-config-form/bot-config-form.component.ts","./src/app/components/trading/bot-config-form/bot-config-form.component.html","./src/app/components/trading/bot-config-page/bot-config-page.component.ts","./src/app/components/trading/bot-config-page/bot-config-page.component.html","./src/app/components/ui/input/input.component.ts","./src/app/components/ui/input/input.component.html","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\n\nimport { InputComponent } from '../../ui/input/input.component';\nimport { SelectComponent } from '../../ui/select/select.component';\nimport { ButtonComponent } from '../../ui/button/button.component';\nimport { CardComponent, CardHeaderComponent, CardTitleComponent, CardContentComponent } from '../../ui/card/card.component';\nimport { LightweightChartComponent, GridConfig } from '../../lightweight-chart/lightweight-chart.component';\nimport { EntryFilterComponent, TradingFilter } from '../entry-filter/entry-filter.component';\nimport { TranslationService } from '../../../services/translation.service';\n\n@Component({\n  selector: 'app-bot-config-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    InputComponent,\n    SelectComponent,\n    ButtonComponent,\n    CardComponent,\n    CardHeaderComponent,\n    CardTitleComponent,\n    CardContentComponent,\n    LightweightChartComponent,\n    EntryFilterComponent,\n  ],\n  templateUrl: './bot-config-form.component.html',\n  styleUrls: ['./bot-config-form.component.css']\n})\nexport class BotConfigFormComponent implements OnInit {\n  @Input() mode: 'create' | 'edit' | 'view' = 'create';\n  @Input() botData?: any;\n  @Input() strategyData?: any;\n  @Output() save = new EventEmitter<any>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() edit = new EventEmitter<any>();\n\n  configForm: FormGroup;\n  symbols: string[] = ['BTC/USDT', 'ETH/USDT', 'ADA/USDT', 'DOT/USDT', 'MATIC/USDT'];\n  symbolOptions: any[] = [];\n  strategyOptions: any[] = [\n    { value: 'REGULAR', label: 'Regular (Linear)' },\n    { value: 'FIBONACCI', label: 'Fibonacci' },\n    { value: 'LOGARITHMIC', label: 'Logarithmic' },\n    { value: 'MULTIPLICATOR', label: 'Multiplicator' },\n    { value: 'MARTINGALE', label: 'Martingale' }\n  ];\n  currentGridConfig?: GridConfig;\n  entryFilters: TradingFilter[] = [];\n  exitFilters: TradingFilter[] = [];\n\n  // Grid overlay properties removed\n\n  // Resizable layout properties\n  chartWidth = 65;\n  chartHeight = 600;\n  formWidth = 35;\n  private isResizing = false;\n  private startX = 0;\n  private startChartWidth = 0;\n\n  protected translationService = inject(TranslationService);\n\n  constructor(private fb: FormBuilder) {\n    this.configForm = this.createForm();\n  }\n\n  translate(key: string): string {\n    return this.translationService.translate(key);\n  }\n\n  ngOnInit() {\n    this.symbolOptions = this.symbols.map(s => ({ value: s, label: s }));\n    this.populateFormData();\n    this.updateGridConfig();\n    this.setupFormValueChanges();\n    this.setupResizeListeners();\n  }\n\n  private createForm(): FormGroup {\n    return this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      symbol: ['BTC/USDT', Validators.required],\n      gridCount: [10, [Validators.required, Validators.min(2), Validators.max(100)]],\n      baseOrderSize: [10, [Validators.required, Validators.min(0.01)]],\n      upperBound: [50000, [Validators.required, Validators.min(0)]],\n      lowerBound: [30000, [Validators.required, Validators.min(0)]],\n      strategyType: ['REGULAR', Validators.required]\n    });\n  }\n\n  private populateFormData() {\n    if (this.mode === 'edit' && this.botData) {\n      this.configForm.patchValue({\n        name: this.botData.name,\n        symbol: this.botData.symbol,\n        gridCount: this.botData.config?.gridStrategy?.gridCount || 10,\n        baseOrderSize: this.botData.config?.riskManagement?.baseOrderSize || 10,\n        upperBound: this.botData.config?.gridRange?.upperBound || 50000,\n        lowerBound: this.botData.config?.gridRange?.lowerBound || 30000,\n        strategyType: this.botData.config?.gridStrategy?.type || 'REGULAR'\n      });\n\n      // Load existing filters\n      this.entryFilters = this.botData.config?.entryFilters || [];\n      this.exitFilters = this.botData.config?.exitFilters || [];\n    }\n  }\n\n  private setupFormValueChanges() {\n    // Update grid configuration whenever form values change\n    this.configForm.valueChanges.subscribe(() => {\n      this.updateGridConfig();\n    });\n  }\n\n  private updateGridConfig() {\n    const formValue = this.configForm.value;\n\n    if (formValue.symbol && formValue.upperBound && formValue.lowerBound && formValue.gridCount) {\n      this.currentGridConfig = {\n        symbol: formValue.symbol,\n        upperBound: formValue.upperBound,\n        lowerBound: formValue.lowerBound,\n        gridCount: formValue.gridCount,\n        gridSpacing: 1.0, // Will be calculated based on strategy\n        strategyType: formValue.strategyType || 'REGULAR'\n      };\n\n      // Grid calculation removed\n    }\n  }\n\n  onSave() {\n    if (this.configForm.valid) {\n      const formValue = this.configForm.value;\n\n      const botConfig = {\n        id: this.botData?.id,\n        name: formValue.name,\n        symbol: formValue.symbol,\n        config: {\n          symbol: formValue.symbol,\n          baseAsset: formValue.symbol.split('/')[0] || 'BTC',\n          quoteAsset: formValue.symbol.split('/')[1] || 'USDT',\n          gridStrategy: {\n            type: formValue.strategyType || 'REGULAR',\n            gridCount: formValue.gridCount,\n            gridSpacing: 1.0\n          },\n          gridRange: {\n            upperBound: formValue.upperBound,\n            lowerBound: formValue.lowerBound,\n            autoAdjust: false\n          },\n          entryFilters: this.entryFilters,\n          exitFilters: this.exitFilters,\n          riskManagement: {\n            baseOrderSize: formValue.baseOrderSize,\n            maxPositionSize: formValue.baseOrderSize * formValue.gridCount,\n            maxOpenOrders: formValue.gridCount\n          }\n        }\n      };\n\n      this.save.emit(botConfig);\n    } else {\n      Object.keys(this.configForm.controls).forEach(key => {\n        const control = this.configForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onEdit() {\n    this.edit.emit(this.botData);\n  }\n\n  onEntryFiltersChange(filters: TradingFilter[]) {\n    this.entryFilters = filters;\n  }\n\n  onExitFiltersChange(filters: TradingFilter[]) {\n    this.exitFilters = filters;\n  }\n\n  // Resizable layout methods\n  startResize(event: MouseEvent | TouchEvent) {\n    this.isResizing = true;\n    this.startX = this.getClientX(event);\n    this.startChartWidth = this.chartWidth;\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private setupResizeListeners() {\n    document.addEventListener('mousemove', this.handleResize.bind(this));\n    document.addEventListener('mouseup', this.endResize.bind(this));\n    document.addEventListener('touchmove', this.handleResize.bind(this));\n    document.addEventListener('touchend', this.endResize.bind(this));\n  }\n\n  private handleResize(event: MouseEvent | TouchEvent) {\n    if (!this.isResizing) return;\n\n    const currentX = this.getClientX(event);\n    const deltaX = currentX - this.startX;\n    const containerWidth = window.innerWidth - 48; // Account for padding\n    const deltaPercent = (deltaX / containerWidth) * 100;\n\n    let newChartWidth = this.startChartWidth + deltaPercent;\n\n    // Constrain between 30% and 80%\n    newChartWidth = Math.max(30, Math.min(80, newChartWidth));\n\n    this.chartWidth = newChartWidth;\n    this.formWidth = 100 - newChartWidth;\n\n    event.preventDefault();\n  }\n\n  private endResize() {\n    this.isResizing = false;\n  }\n\n  // Chart-related methods\n  getSelectedSymbol(): string {\n    const symbol = this.configForm.get('symbol')?.value || 'BTC/USDT';\n    return symbol.replace('/', '');\n  }\n\n  onChartSymbolChange(symbol: string) {\n    // Update form when chart symbol changes\n    const formattedSymbol = symbol.includes('/') ? symbol : symbol.replace('USDT', '/USDT');\n    this.configForm.patchValue({ symbol: formattedSymbol });\n    this.updateGridConfig();\n  }\n\n  // Grid calculation methods removed as grid overlay is no longer needed\n\n  private getClientX(event: MouseEvent | TouchEvent): number {\n    if (event instanceof MouseEvent) {\n      return event.clientX;\n    } else {\n      return event.touches[0]?.clientX || 0;\n    }\n  }\n}\n","    <!-- View Mode Display -->\n    <div *ngIf=\"mode === 'view'\" class=\"bot-view\">\n      <ui-card>\n        <ui-card-header>\n          <ui-card-title>{{ botData?.name || translate('bot.details') }}</ui-card-title>\n        </ui-card-header>\n        <ui-card-content>\n          <div class=\"view-grid\">\n            <!-- Basic Information -->\n            <div class=\"view-section\">\n              <h3>{{ translate('bot.basicInformation') }}</h3>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.id') }}:</span>\n                <span class=\"value\">{{ botData?.id }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.name') }}:</span>\n                <span class=\"value\">{{ botData?.name }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.symbol') }}:</span>\n                <span class=\"value\">{{ botData?.symbol }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.status') }}:</span>\n                <span class=\"value\" [class]=\"'status-' + botData?.status?.toLowerCase()\">\n                  {{ botData?.status }}\n                </span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.created') }}:</span>\n                <span class=\"value\">{{ botData?.createdAt | date:'medium' }}</span>\n              </div>\n            </div>\n\n            <!-- Configuration -->\n            <div class=\"view-section\">\n              <h3>{{ translate('bot.gridConfiguration') }}</h3>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.gridLevels') }}:</span>\n                <span class=\"value\">{{ botData?.config?.gridStrategy?.gridCount || translate('dashboard.na') }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.strategyType') }}:</span>\n                <span class=\"value\">{{ botData?.config?.gridStrategy?.type || translate('dashboard.na') }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.upperPrice') }}:</span>\n                <span class=\"value\">{{ botData?.config?.gridRange?.upperBound | currency }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.lowerPrice') }}:</span>\n                <span class=\"value\">{{ botData?.config?.gridRange?.lowerBound | currency }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.orderAmount') }}:</span>\n                <span class=\"value\">{{ botData?.config?.riskManagement?.baseOrderSize }}</span>\n              </div>\n            </div>\n\n            <!-- Trading Filters -->\n            <div class=\"view-section\" *ngIf=\"(botData?.config?.entryFilters && botData?.config?.entryFilters.length > 0) || (botData?.config?.exitFilters && botData?.config?.exitFilters.length > 0)\">\n              <h3>{{ translate('bot.tradingFilters') }}</h3>\n              <div class=\"view-item\" *ngIf=\"botData?.config?.entryFilters && botData?.config?.entryFilters.length > 0\">\n                <span class=\"label\">{{ translate('filter.entryFilters') }}:</span>\n                <span class=\"value\">{{ botData?.config?.entryFilters.length }} {{ translate('bot.configured') }}</span>\n              </div>\n              <div class=\"view-item\" *ngIf=\"botData?.config?.exitFilters && botData?.config?.exitFilters.length > 0\">\n                <span class=\"label\">{{ translate('filter.exitFilters') }}:</span>\n                <span class=\"value\">{{ botData?.config?.exitFilters.length }} {{ translate('bot.configured') }}</span>\n              </div>\n            </div>\n\n            <!-- Performance Metrics -->\n            <div class=\"view-section\" *ngIf=\"botData?.performance\">\n              <h3>{{ translate('bot.performance') }}</h3>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('dashboard.totalPnl') }}:</span>\n                <span class=\"value\" [class]=\"botData?.totalPnL >= 0 ? 'positive' : 'negative'\">\n                  {{ botData?.totalPnL | currency }}\n                </span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.totalTrades') }}:</span>\n                <span class=\"value\">{{ botData?.totalTrades || 0 }}</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('dashboard.winRate') }}:</span>\n                <span class=\"value\">{{ botData?.winRate || 0 }}%</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.maxDrawdown') }}:</span>\n                <span class=\"value\">{{ botData?.performance?.maxDrawdown || 0 }}%</span>\n              </div>\n              <div class=\"view-item\">\n                <span class=\"label\">{{ translate('bot.sharpeRatio') }}:</span>\n                <span class=\"value\">{{ botData?.performance?.sharpeRatio || 0 | number:'1.2-2' }}</span>\n              </div>\n            </div>\n          </div>\n        </ui-card-content>\n      </ui-card>\n\n      <div class=\"form-actions\">\n        <ui-button variant=\"ghost\" (clicked)=\"onCancel()\">\n          {{ translate('button.close') }}\n        </ui-button>\n        <ui-button variant=\"primary\" (clicked)=\"onEdit()\">\n          {{ translate('button.edit') }} {{ translate('bot.name') }}\n        </ui-button>\n      </div>\n    </div>\n\n    <!-- Create/Edit Mode Form -->\n    <div *ngIf=\"mode !== 'view'\" class=\"trading-layout\">\n      <!-- Left Side: Bybit TradingView Chart -->\n      <div class=\"chart-container\" [style.width.%]=\"chartWidth\">\n        <div class=\"chart-wrapper\">\n          <!-- New Bybit-powered TradingView Chart -->\n          <app-lightweight-chart\n              [symbol]=\"getSelectedSymbol()\"\n              [chartHeight]=\"chartHeight\"\n              [gridConfig]=\"currentGridConfig\"\n              (symbolChange)=\"onChartSymbolChange($event)\">\n          </app-lightweight-chart>\n\n          <!-- Grid overlay removed as requested -->\n        </div>\n      </div>\n\n      <!-- Resizer -->\n      <div class=\"resizer\"\n           (mousedown)=\"startResize($event)\"\n           (touchstart)=\"startResize($event)\">\n        <div class=\"resizer-handle\"></div>\n      </div>\n\n      <!-- Right Side: Configuration Form -->\n      <div class=\"form-container\" [style.width.%]=\"formWidth\">\n        <!-- Progress Indicator -->\n        <div class=\"progress-header\">\n          <div class=\"progress-steps\">\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>Setup</span>\n            </div>\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>API</span>\n            </div>\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>Pair</span>\n            </div>\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>Deposit</span>\n            </div>\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>Filters</span>\n            </div>\n            <div class=\"step active\">\n              <div class=\"step-icon\">✓</div>\n              <span>Orders</span>\n            </div>\n            <div class=\"step current\">\n              <div class=\"step-icon\">7</div>\n              <span>{{ translate('button.launch') }}</span>\n            </div>\n          </div>\n        </div>\n\n        <form [formGroup]=\"configForm\" (ngSubmit)=\"onSave()\" class=\"bot-config-form\">\n          <div class=\"form-content\">\n            <!-- Trading Pair Section -->\n            <div class=\"config-section\">\n              <h3>{{ translate('bot.tradingPair') }}</h3>\n              <div class=\"recommended-pairs\">\n                <div class=\"section-subtitle\">{{ translate('bot.recommendedPairs') }}</div>\n                <div class=\"info-text\">{{ translate('bot.recommendedPairsDesc') }}</div>\n\n                <div class=\"pairs-grid\">\n                  <div class=\"pair-item active\">MEME USDT</div>\n                  <div class=\"pair-item\">ORDER USDT</div>\n                  <div class=\"pair-item trending\">1000PEPE USDT</div>\n                  <div class=\"pair-item\">THE USDT</div>\n                  <div class=\"pair-item neutral\">AEVO USDT</div>\n                  <div class=\"pair-item\">ASTER USDT</div>\n                  <div class=\"pair-item\">PUMPETO USDT</div>\n                  <div class=\"pair-item\">STEL USDT</div>\n                  <div class=\"pair-item\">PUMPFUN USDT</div>\n                  <div class=\"pair-item\">AVNT USDT</div>\n                </div>\n              </div>\n\n              <div class=\"form-row\">\n                <label>{{ translate('bot.selectPair') }}</label>\n                <div class=\"pair-selector\">\n                  <ui-select\n                    formControlName=\"symbol\"\n                    [options]=\"symbolOptions\"\n                    [placeholder]=\"translate('bot.selectTradingPair')\">\n                  </ui-select>\n                </div>\n              </div>\n            </div>\n\n            <!-- Deposit Section -->\n            <div class=\"config-section\">\n              <h3>{{ translate('bot.deposit') }}</h3>\n              <div class=\"deposit-info\">\n                <div class=\"balance-display\">\n                  <span class=\"currency-icon\">₮</span>\n                  <span class=\"amount\">200</span>\n                  <div class=\"balance-detail\">\n                    <span class=\"balance-value\">0.0854105 USDT</span>\n                    <ui-button variant=\"ghost\" size=\"small\" className=\"refresh-btn\">↻</ui-button>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"warning-card\">\n                <div class=\"warning-icon\">⚠️</div>\n                <div class=\"warning-text\">\n                  {{ translate('bot.balanceWarning') }}\n                </div>\n              </div>\n\n              <div class=\"warning-card\">\n                <div class=\"warning-icon\">⚠️</div>\n                <div class=\"warning-text\">\n                  {{ translate('bot.insufficientBalance') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Bot Configuration -->\n            <div class=\"config-section\">\n              <h3>{{ translate('bot.configuration') }}</h3>\n              <div class=\"form-grid\">\n                <div class=\"form-group\">\n                  <label for=\"botName\">{{ translate('bot.name') }} *</label>\n                  <ui-input\n                    id=\"botName\"\n                    formControlName=\"name\"\n                    [placeholder]=\"translate('bot.enterName')\">\n                  </ui-input>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"gridCount\">{{ translate('bot.gridLevels') }} *</label>\n                  <ui-input\n                    id=\"gridCount\"\n                    type=\"number\"\n                    formControlName=\"gridCount\"\n                    placeholder=\"10\"\n                    min=\"2\"\n                    max=\"100\">\n                  </ui-input>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"baseOrderSize\">{{ translate('bot.orderAmount') }} *</label>\n                  <ui-input\n                    id=\"baseOrderSize\"\n                    type=\"number\"\n                    formControlName=\"baseOrderSize\"\n                    placeholder=\"10\"\n                    step=\"0.01\"\n                    min=\"0.01\">\n                  </ui-input>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"upperBound\">{{ translate('bot.upperPrice') }} *</label>\n                  <ui-input\n                    id=\"upperBound\"\n                    type=\"number\"\n                    formControlName=\"upperBound\"\n                    placeholder=\"50000\"\n                    step=\"0.01\"\n                    min=\"0\">\n                  </ui-input>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"lowerBound\">{{ translate('bot.lowerPrice') }} *</label>\n                  <ui-input\n                    id=\"lowerBound\"\n                    type=\"number\"\n                    formControlName=\"lowerBound\"\n                    placeholder=\"30000\"\n                    step=\"0.01\"\n                    min=\"0\">\n                  </ui-input>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"strategyType\">{{ translate('bot.gridStrategy') }} *</label>\n                  <ui-select\n                    id=\"strategyType\"\n                    formControlName=\"strategyType\"\n                    [options]=\"strategyOptions\"\n                    [placeholder]=\"translate('bot.selectStrategyType')\">\n                  </ui-select>\n                </div>\n              </div>\n            </div>\n\n            <!-- Risk Management -->\n            <div class=\"config-section\">\n              <h3>{{ translate('bot.riskManagement') }}</h3>\n              <div class=\"risk-slider\">\n                <label>{{ translate('bot.selectOrderType') }}</label>\n                <div class=\"slider-container\">\n                  <div class=\"slider-track\">\n                    <div class=\"slider-fill\" style=\"width: 50%\"></div>\n                  </div>\n                  <div class=\"slider-value\">20</div>\n                </div>\n              </div>\n\n              <div class=\"warning-card\">\n                <div class=\"warning-icon\">⚠️</div>\n                <div class=\"warning-text\">\n                  {{ translate('bot.leverageWarning') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Terms Section -->\n            <div class=\"config-section\">\n              <h3>{{ translate('bot.termsAndConditions') }}</h3>\n              <div class=\"terms-grid\">\n                <div class=\"term-type\">\n                  <h4>{{ translate('bot.conservative') }}</h4>\n                  <div class=\"filter-count\">{{ translate('bot.filters') }}: 7</div>\n                </div>\n                <div class=\"term-type\">\n                  <h4>{{ translate('bot.balanced') }}</h4>\n                  <div class=\"filter-count\">{{ translate('bot.filters') }}: 4</div>\n                </div>\n                <div class=\"term-type\">\n                  <h4>{{ translate('bot.aggressive') }}</h4>\n                  <div class=\"filter-count\">{{ translate('bot.filters') }}: 4</div>\n                </div>\n              </div>\n\n              <div class=\"checkbox-option\">\n                <input type=\"checkbox\" id=\"accept-terms\">\n                <label for=\"accept-terms\">{{ translate('bot.iUnderstand') }}</label>\n              </div>\n\n              <div class=\"test-info\">\n                <span>{{ translate('bot.availableTests') }}: 1</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-actions\">\n            <ui-button variant=\"ghost\" (clicked)=\"onCancel()\">\n              {{ translate('button.cancel') }}\n            </ui-button>\n            <ui-button variant=\"primary\" type=\"submit\" [disabled]=\"!configForm.valid\" class=\"launch-btn\">\n              🔧 {{ mode === 'edit' ? translate('button.update') + ' ' + translate('bot.name') : translate('button.launch') + ' ' + translate('bot.name') }}\n            </ui-button>\n          </div>\n        </form>\n      </div>\n    </div>\n","import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BotConfigFormComponent } from '../bot-config-form/bot-config-form.component';\nimport { ButtonComponent } from '../../ui/button/button.component';\nimport { CardComponent, CardHeaderComponent, CardTitleComponent, CardContentComponent } from '../../ui/card/card.component';\nimport { GridBotService } from '../../../services/grid-bot.service';\nimport { TranslationService } from '../../../services/translation.service';\n\n@Component({\n  selector: 'app-bot-config-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BotConfigFormComponent,\n    ButtonComponent,\n    CardComponent,\n    CardHeaderComponent,\n    CardTitleComponent,\n    CardContentComponent\n  ],\n  templateUrl: './bot-config-page.component.html',\n  styleUrl: './bot-config-page.component.scss'\n})\nexport class BotConfigPageComponent implements OnInit {\n  mode: 'create' | 'edit' | 'view' = 'create';\n  botData?: any;\n  strategyData?: any;\n  loading = false;\n  error: string | null = null;\n  pageTitle = 'Create New Bot';\n\n  protected translationService = inject(TranslationService);\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private gridBotService: GridBotService\n  ) {}\n\n  translate(key: string): string {\n    return this.translationService.translate(key);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const botId = params['id'];\n      const mode = this.route.snapshot.data['mode'] || 'create';\n\n      this.mode = mode;\n      this.updatePageTitle();\n\n      if (botId && (mode === 'edit' || mode === 'view')) {\n        this.loadBot(botId);\n      }\n    });\n\n    // Check for query parameters (strategy data, etc.)\n    this.route.queryParams.subscribe(queryParams => {\n      if (queryParams['strategy']) {\n        try {\n          this.strategyData = JSON.parse(queryParams['strategy']);\n        } catch (e) {\n          console.warn('Invalid strategy data in query params');\n        }\n      }\n    });\n  }\n\n  private updatePageTitle() {\n    switch (this.mode) {\n      case 'create':\n        this.pageTitle = this.translate('dashboard.createBot');\n        break;\n      case 'edit':\n        this.pageTitle = this.translate('bot.editConfiguration');\n        break;\n      case 'view':\n        this.pageTitle = this.translate('bot.details');\n        break;\n    }\n  }\n\n  private loadBot(botId: string) {\n    this.loading = true;\n    this.error = null;\n\n    this.gridBotService.getBot(botId).subscribe({\n      next: (bot) => {\n        this.botData = bot;\n        this.loading = false;\n\n        if (this.mode === 'view' || this.mode === 'edit') {\n          this.pageTitle = `${this.mode === 'view' ? this.translate('bot.details') : this.translate('button.edit')} - ${bot.name || bot.symbol}`;\n        }\n      },\n      error: (error) => {\n        this.error = this.translate('bot.errorConfiguration');\n        this.loading = false;\n        console.error('Failed to load bot:', error);\n      }\n    });\n  }\n\n  onBotSave(botData: any) {\n    this.loading = true;\n    this.error = null;\n\n    if (this.mode === 'edit' && botData.id) {\n      this.gridBotService.updateBot(botData.id, 'update', botData.config).subscribe({\n        next: (response) => {\n          this.loading = false;\n          console.log('Bot updated successfully:', response);\n          this.router.navigate(['/trading']);\n        },\n        error: (error) => {\n          this.loading = false;\n          this.error = this.translate('bot.failedToUpdate');\n          console.error('Failed to update bot:', error);\n        }\n      });\n    } else {\n      this.gridBotService.createBot(botData).subscribe({\n        next: (response) => {\n          this.loading = false;\n          console.log('Bot created successfully:', response);\n          this.router.navigate(['/trading']);\n        },\n        error: (error) => {\n          this.loading = false;\n          this.error = this.translate('bot.failedToCreate');\n          console.error('Failed to create bot:', error);\n        }\n      });\n    }\n  }\n\n  onBotCancel() {\n    this.goBack();\n  }\n\n  onBotEdit(botData: any) {\n    // Switch to edit mode\n    this.mode = 'edit';\n    this.updatePageTitle();\n  }\n\n  goBack() {\n    this.router.navigate(['/trading']);\n  }\n\n  retry() {\n    const botId = this.route.snapshot.params['id'];\n    if (botId) {\n      this.loadBot(botId);\n    } else {\n      this.error = null;\n    }\n  }\n}\n","    <div class=\"bot-config-page\">\n\n          <app-bot-config-form\n            [mode]=\"mode\"\n            [botData]=\"botData\"\n            [strategyData]=\"strategyData\"\n            (save)=\"onBotSave($event)\"\n            (cancel)=\"onBotCancel()\"\n            (edit)=\"onBotEdit($event)\">\n          </app-bot-config-form>\n\n      <!-- Loading State -->\n      <div *ngIf=\"loading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\">\n          <div class=\"spinner\"></div>\n          <p>{{ translate('bot.loadingConfiguration') }}</p>\n        </div>\n      </div>\n\n      <!-- Error State -->\n      <div *ngIf=\"error\" class=\"error-message\">\n        <ui-card>\n          <ui-card-header>\n            <ui-card-title>{{ translate('bot.errorLoadingBot') }}</ui-card-title>\n          </ui-card-header>\n          <ui-card-content>\n            <p>{{ error }}</p>\n            <div class=\"error-actions\">\n              <ui-button variant=\"ghost\" (clicked)=\"goBack()\">\n                {{ translate('button.goBack') }}\n              </ui-button>\n              <ui-button variant=\"primary\" (clicked)=\"retry()\">\n                {{ translate('button.retry') }}\n              </ui-button>\n            </div>\n          </ui-card-content>\n        </ui-card>\n      </div>\n    </div>\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ui-input',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor {\n  @Input() type: 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' = 'text';\n  @Input() placeholder: string = '';\n  @Input() label: string = '';\n  @Input() error: string = '';\n  @Input() disabled: boolean = false;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() fullWidth: boolean = false;\n  @Input() icon?: string;\n  @Input() iconPosition: 'left' | 'right' = 'left';\n  @Input() min?: number | string;\n  @Input() max?: number | string;\n  @Input() step?: number | string;\n\n  value: any = '';\n  touched: boolean = false;\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n\n  onBlur(): void {\n    this.touched = true;\n    this.onTouched();\n  }\n\n  getInputClasses(): string {\n    const classes = ['input'];\n\n    classes.push(`input-${this.size}`);\n\n    if (this.error) {\n      classes.push('input-error');\n    }\n\n    if (this.fullWidth) {\n      classes.push('input-full-width');\n    }\n\n    if (this.icon) {\n      classes.push(`input-with-icon-${this.iconPosition}`);\n    }\n\n    return classes.join(' ');\n  }\n\n  getWrapperClasses(): string {\n    const classes = ['input-wrapper'];\n\n    if (this.fullWidth) {\n      classes.push('input-wrapper-full-width');\n    }\n\n    return classes.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ui-textarea',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div [class]=\"getWrapperClasses()\">\n      <label *ngIf=\"label\" class=\"input-label\">{{ label }}</label>\n      <div class=\"textarea-container\">\n        <textarea\n          [class]=\"getTextareaClasses()\"\n          [placeholder]=\"placeholder\"\n          [disabled]=\"disabled\"\n          [rows]=\"rows\"\n          [value]=\"value\"\n          (input)=\"onInput($event)\"\n          (blur)=\"onBlur()\">\n        </textarea>\n      </div>\n      <div *ngIf=\"error\" class=\"input-error-text\">{{ error }}</div>\n    </div>\n  `,\n  styleUrls: ['./input.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor {\n  @Input() placeholder: string = '';\n  @Input() label: string = '';\n  @Input() error: string = '';\n  @Input() disabled: boolean = false;\n  @Input() rows: number = 4;\n  @Input() fullWidth: boolean = false;\n\n  value: any = '';\n  touched: boolean = false;\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLTextAreaElement;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n\n  onBlur(): void {\n    this.touched = true;\n    this.onTouched();\n  }\n\n  getTextareaClasses(): string {\n    const classes = ['textarea'];\n\n    if (this.error) {\n      classes.push('textarea-error');\n    }\n\n    if (this.fullWidth) {\n      classes.push('textarea-full-width');\n    }\n\n    return classes.join(' ');\n  }\n\n  getWrapperClasses(): string {\n    const classes = ['input-wrapper'];\n\n    if (this.fullWidth) {\n      classes.push('input-wrapper-full-width');\n    }\n\n    return classes.join(' ');\n  }\n}","<div [class]=\"getWrapperClasses()\">\n  <label *ngIf=\"label\" class=\"input-label\">{{ label }}</label>\n  <div class=\"input-container\">\n    <span *ngIf=\"icon && iconPosition === 'left'\" [class]=\"'input-icon input-icon-left ' + icon\"></span>\n    <input\n      [type]=\"type\"\n      [class]=\"getInputClasses()\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [value]=\"value\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      (input)=\"onInput($event)\"\n      (blur)=\"onBlur()\"\n    />\n    <span *ngIf=\"icon && iconPosition === 'right'\" [class]=\"'input-icon input-icon-right ' + icon\"></span>\n  </div>\n  <div *ngIf=\"error\" class=\"input-error-text\">{{ error }}</div>\n</div>","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n"],"names":["EventEmitter","inject","CommonModule","Validators","ReactiveFormsModule","InputComponent","SelectComponent","ButtonComponent","CardComponent","CardHeaderComponent","CardTitleComponent","CardContentComponent","LightweightChartComponent","TranslationService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","translate","ɵɵtextInterpolate2","botData","config","entryFilters","length","exitFilters","ɵɵtemplate","BotConfigFormComponent_div_0_div_66_div_3_Template","BotConfigFormComponent_div_0_div_66_div_4_Template","ɵɵtextInterpolate","ɵɵproperty","ɵɵclassMap","totalPnL","ɵɵpipeBind1","totalTrades","winRate","performance","maxDrawdown","ɵɵpipeBind2","sharpeRatio","BotConfigFormComponent_div_0_div_66_Template","BotConfigFormComponent_div_0_div_67_Template","ɵɵlistener","BotConfigFormComponent_div_0_Template_ui_button_clicked_69_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","onCancel","BotConfigFormComponent_div_0_Template_ui_button_clicked_71_listener","onEdit","name","id","symbol","status","toLowerCase","createdAt","gridStrategy","gridCount","type","gridRange","upperBound","lowerBound","riskManagement","baseOrderSize","BotConfigFormComponent_div_1_Template_app_lightweight_chart_symbolChange_3_listener","$event","_r3","onChartSymbolChange","BotConfigFormComponent_div_1_Template_div_mousedown_4_listener","startResize","BotConfigFormComponent_div_1_Template_div_touchstart_4_listener","ɵɵelement","BotConfigFormComponent_div_1_Template_form_ngSubmit_44_listener","onSave","BotConfigFormComponent_div_1_Template_ui_button_clicked_175_listener","ɵɵstyleProp","chartWidth","getSelectedSymbol","chartHeight","currentGridConfig","formWidth","configForm","symbolOptions","strategyOptions","valid","mode","BotConfigFormComponent","constructor","fb","save","cancel","edit","symbols","value","label","isResizing","startX","startChartWidth","translationService","createForm","key","ngOnInit","map","s","populateFormData","updateGridConfig","setupFormValueChanges","setupResizeListeners","group","required","minLength","min","max","strategyType","patchValue","valueChanges","subscribe","formValue","gridSpacing","botConfig","baseAsset","split","quoteAsset","autoAdjust","maxPositionSize","maxOpenOrders","emit","Object","keys","controls","forEach","control","get","markAsTouched","onEntryFiltersChange","filters","onExitFiltersChange","event","getClientX","preventDefault","stopPropagation","document","addEventListener","handleResize","bind","endResize","currentX","deltaX","containerWidth","window","innerWidth","deltaPercent","newChartWidth","Math","replace","formattedSymbol","includes","MouseEvent","clientX","touches","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","strategyData","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BotConfigFormComponent_Template","rf","ctx","BotConfigFormComponent_div_0_Template","BotConfigFormComponent_div_1_Template","i2","NgIf","DecimalPipe","CurrencyPipe","DatePipe","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","ctx_r0","BotConfigPageComponent_div_3_Template_ui_button_clicked_9_listener","_r2","goBack","BotConfigPageComponent_div_3_Template_ui_button_clicked_11_listener","retry","error","BotConfigPageComponent","route","router","gridBotService","loading","pageTitle","params","botId","snapshot","data","updatePageTitle","loadBot","queryParams","JSON","parse","e","console","warn","getBot","next","bot","onBotSave","updateBot","response","log","navigate","createBot","onBotCancel","onBotEdit","ActivatedRoute","Router","GridBotService","BotConfigPageComponent_Template","BotConfigPageComponent_Template_app_bot_config_form_save_1_listener","BotConfigPageComponent_Template_app_bot_config_form_cancel_1_listener","BotConfigPageComponent_Template_app_bot_config_form_edit_1_listener","BotConfigPageComponent_div_2_Template","BotConfigPageComponent_div_3_Template","i3","forwardRef","NG_VALUE_ACCESSOR","icon","placeholder","disabled","size","fullWidth","iconPosition","touched","onChange","onTouched","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","onInput","target","onBlur","getInputClasses","classes","push","join","getWrapperClasses","step","ɵɵProvidersFeature","provide","useExisting","multi","InputComponent_Template","InputComponent_label_1_Template","InputComponent_span_3_Template","InputComponent_Template_input_input_4_listener","InputComponent_Template_input_blur_4_listener","InputComponent_span_5_Template","InputComponent_div_6_Template","_c0","TextareaComponent","rows","getTextareaClasses","TextareaComponent_Template","TextareaComponent_label_1_Template","TextareaComponent_Template_textarea_input_3_listener","TextareaComponent_Template_textarea_blur_3_listener","TextareaComponent_div_5_Template","Subject","dateTimestampProvider","ReplaySubject","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","isStopped","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","delegate","Date","undefined"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,7]}